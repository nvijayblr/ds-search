{"version":3,"sources":["context.js","services/api.js","components/Datatable/DataTable.js","components/Search/SearchComponent.js","App.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","results","payload","tableResultsAreLoading","showResultsTable","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","dispatch","setState","inherits","createClass","key","value","children","props","react_default","a","createElement","Component","Consumer","searchApi","window","__env","axios","interceptors","request","use","config","error","Promise","reject","getSearchRequest","query","option","signal","get","DataTable","gridApi","gridParams","gridWrapperRef","createRef","overlayLoadingTemplate","overlayNoRowsTemplate","onGridReady","params","autoHeight","api","gridColumnApi","columnApi","resetRowHeights","showRequiredOverlay","rowData","showLoadingOverlay","hideOverlay","showNoRowsOverlay","createColumnDefsWithOptions","_this$props","columns","columnDefs","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","field","isShow","push","defaultColumnDefs","headerName","label","name","err","return","map","columnDef","prevProps","destroy","_this$props2","tableHeight","enableColResize","enableSorting","enableFilter","floatingFilter","suppressMenu","headerHeight","floatingFiltersHeight","rowHeight","pagination","context","columnDefsWithOptions","wrapperClasses","classNames","auto-height","current","gridWidth","clientWidth","sizeColumnsToFit","ref","className","style","height","visibility","main","suppressRowClickSelection","suppressCellSelection","rowSelection","getRowHeight","suppressColumnMoveAnimation","animateRows","defaultColDef","width","defaultProps","isCmaTable","isReportsCmaTable","hiddenColumns","filterData","Option","OptGroup","SearchComponent","CancelToken","source","serachOptions","Title","serachOption","searchResults","searchFields","searchView","isLoading","searchValue","componentParent","assertThisInitialized","autoCompleteDataSource","resentSearch","suggessions","tableWrapperRef","debouncedOnChange","debounce","getSearchResults","onChange","e","_callee","_this$state","currentSession","res","regenerator_default","wrap","_context","prev","handleWindowResize","lastSession","abrupt","cancelToken","token","sent","onGetSearchSuccess","t0","console","log","onGetSearchError","stop","parseTableData","data","meta","fields","view","message","setTableDimensions","offsetTop","getBoundingClientRect","top","innerHeight","searchOptionChange","renderOption","keys","group","item","text","icon","addEventListener","cancel","removeEventListener","_this2","_this$state2","react","row","gutter","col","span","es_select","placeholder","onSelect","auto_complete","size","dropdownStyle","onSearch","handleSearch","optionLabelProp","node","searchInput","input","prefix","color","components_Datatable_DataTable","dataTableRef","contextType","App","context_Provider","components_Search_SearchComponent","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.eab68b13.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_SEARCH_RESULTS\":\n      return {\n        ...state,\n        results: action.payload,\n      };\n    case \"SHOW_TABLE_LOADING_OVERLAY\":\n      return {\n        ...state,\n        tableResultsAreLoading: action.payload,\n      };\n    case \"SHOW_RESULTS_TABLE\":\n      return {\n        ...state,\n        showResultsTable: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    results: [],\n    tableResultsAreLoading: false,\n    showResultsTable: false,\n    dispatch: (action) => this.setState((state) => reducer(state, action)),\n  };\n\n  render() {\n    const state = { ...this.state };\n    const { children } = this.props;\n\n    return <Context.Provider value={state}>{children}</Context.Provider>;\n  }\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport const Consumer = Context.Consumer; // eslint-disable-line prefer-destructuring\n","/* eslint no-underscore-dangle: [1, { \"allow\": [\"__env\"] }] */\nimport axios from \"axios\";\n\nconst { searchApi } = window.__env;\n\naxios.interceptors.request.use(\n  (config) => {\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport const getSearchRequest = (query, option, signal) =>\n  axios.get(`${searchApi}${query}`, signal);\n","/* eslint-disable no-param-reassign */\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport classNames from \"classnames\";\n\nimport \"./DataTable.scss\";\n\nconst COLUMN_WIDTH = 320;\n\nclass DataTable extends Component {\n  state = {\n    gridApi: null,\n    gridParams: null,\n  };\n\n  gridWrapperRef = React.createRef();\n\n  overlayLoadingTemplate = `<div class=\"spin-wrapper\">\n    <div class=\"ant-spin ant-spin-lg ant-spin-spinning\">\n    <span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span>\n    </div>\n    </div>`;\n\n  overlayNoRowsTemplate = `<div class=\"no-results-wrapper\">\n    <div class=\"message\">\n    <i class=\"anticon anticon-exclamation-circle\">\n    <svg viewBox=\"64 64 896 896\" class=\"\" data-icon=\"exclamation-circle\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\"></path><path d=\"M464 688a48 48 0 1 0 96 0 48 48 0 1 0-96 0zM488 576h48c4.4 0 8-3.6 8-8V296c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8z\"></path></svg>\n    </i> \n    <span>No rows to show</span>\n    </div>\n    </div>`;\n\n  componentDidUpdate(prevProps) {}\n\n  componentWillUnmount() {\n    const { gridApi } = this.state;\n\n    if (gridApi && gridApi.destroy) {\n      gridApi.destroy();\n    }\n  }\n\n  onGridReady = (params) => {\n    const { autoHeight } = this.props;\n\n    this.setState({\n      gridApi: params.api,\n      gridParams: params,\n      gridColumnApi: params.columnApi,\n    });\n\n    if (autoHeight) {\n      params.api.resetRowHeights();\n    }\n  };\n\n  showRequiredOverlay = (tableResultsAreLoading) => {\n    const { gridApi } = this.state;\n    const { rowData } = this.props;\n\n    if (!gridApi) {\n      return;\n    }\n\n    if (tableResultsAreLoading) {\n      gridApi.showLoadingOverlay();\n      return;\n    }\n\n    if (!tableResultsAreLoading && !rowData.length) {\n      gridApi.showNoRowsOverlay();\n      return;\n    }\n\n    gridApi.hideOverlay();\n  };\n\n  createColumnDefsWithOptions = () => {\n    const { rowData, columns } = this.props;\n\n    if (!rowData.length) return [];\n\n    const columnDefs = [];\n    for (const field of columns) {\n      if (field.isShow) {\n        columnDefs.push({\n          ...this.defaultColumnDefs,\n          headerName: field.label,\n          field: field.name,\n        });\n      }\n    }\n\n    return columnDefs.map((columnDef) => {\n      const columnDefObj = columnDef;\n      return columnDefObj;\n    });\n  };\n\n  render() {\n    const { gridApi } = this.state;\n    const {\n      tableHeight,\n      enableColResize,\n      rowData,\n      enableSorting,\n      enableFilter,\n      floatingFilter,\n      suppressMenu,\n      headerHeight,\n      floatingFiltersHeight,\n      rowHeight,\n      pagination,\n      context,\n      autoHeight,\n      tableResultsAreLoading,\n    } = this.props;\n    this.showRequiredOverlay(tableResultsAreLoading);\n    const columnDefsWithOptions = this.createColumnDefsWithOptions();\n\n    // this.customFilterUniqueData(rowData);\n\n    const wrapperClasses = classNames(\"ag-theme-balham\", {\n      \"auto-height\": autoHeight,\n    });\n\n    // If there are too few columns to fill the table horizontally,\n    // use `.sizeColumnsToFit()` to fill the table\n    if (this.gridWrapperRef.current && gridApi) {\n      const gridWidth = this.gridWrapperRef.current.clientWidth;\n      const columnCount = columnDefsWithOptions.length;\n\n      if (columnCount * COLUMN_WIDTH <= gridWidth) {\n        gridApi.sizeColumnsToFit();\n      }\n    }\n\n    return (\n      <div\n        ref={this.gridWrapperRef}\n        className={wrapperClasses}\n        style={{\n          height: `${tableHeight}px`,\n          visibility: gridApi ? \"visible\" : \"hidden\",\n        }}\n      >\n        <AgGridReact\n          enableColResize={enableColResize}\n          columnDefs={columnDefsWithOptions}\n          rowData={rowData}\n          enableSorting={enableSorting}\n          enableFilter={enableFilter}\n          floatingFilter={floatingFilter}\n          suppressMenu={suppressMenu}\n          headerHeight={headerHeight}\n          floatingFiltersHeight={floatingFiltersHeight}\n          rowHeight={rowHeight}\n          pagination={pagination}\n          suppressRowClickSelection\n          suppressCellSelection\n          rowSelection=\"single\"\n          overlayLoadingTemplate={this.overlayLoadingTemplate}\n          overlayNoRowsTemplate={this.overlayNoRowsTemplate}\n          getRowHeight={this.getRowHeight}\n          onGridReady={this.onGridReady}\n          context={context}\n          suppressColumnMoveAnimation\n          animateRows\n          defaultColDef={{\n            width: COLUMN_WIDTH,\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nDataTable.defaultProps = {\n  pagination: true,\n  enableFilter: true,\n  enableSorting: true,\n  enableColResize: true,\n  floatingFilter: true,\n  suppressMenu: true,\n  autoHeight: false,\n  isCmaTable: false,\n  isReportsCmaTable: false,\n  tableResultsAreLoading: false,\n  headerHeight: 40,\n  floatingFiltersHeight: 40,\n  rowHeight: 38,\n  context: {},\n  hiddenColumns: [],\n  filterData: {},\n};\n\nDataTable.propTypes = {\n  columns: PropTypes.array.isRequired,\n  rowData: PropTypes.array.isRequired,\n  tableHeight: PropTypes.number.isRequired,\n  pagination: PropTypes.bool,\n  enableFilter: PropTypes.bool,\n  enableSorting: PropTypes.bool,\n  enableColResize: PropTypes.bool,\n  floatingFilter: PropTypes.bool,\n  suppressMenu: PropTypes.bool,\n  autoHeight: PropTypes.bool,\n  isCmaTable: PropTypes.bool,\n  isReportsCmaTable: PropTypes.bool,\n  tableResultsAreLoading: PropTypes.bool,\n  headerHeight: PropTypes.number,\n  floatingFiltersHeight: PropTypes.number,\n  rowHeight: PropTypes.number,\n  context: PropTypes.object,\n  hiddenColumns: PropTypes.array,\n  filterData: PropTypes.object,\n};\n\nexport default DataTable;\n","/* eslint-disable no-param-reassign */\n/* eslint no-underscore-dangle: [1, { \"allow\": [\"__env\"] }] */\nimport React, { Component, Fragment } from \"react\";\nimport { Row, Col, Input, Icon, message, Select, AutoComplete } from \"antd\";\nimport { debounce } from \"lodash\";\nimport axios from \"axios\";\n\nimport { Context } from \"../../context\";\nimport { getSearchRequest } from \"../../services/api\";\nimport DataTable from \"../Datatable/DataTable\";\n\nimport \"./SearchComponent.scss\";\n\nconst { Option } = Select;\nconst { OptGroup } = AutoComplete;\n\nclass SearchComponent extends Component {\n  static contextType = Context;\n\n  signal = axios.CancelToken.source();\n\n  defaultColumnDefs = {\n    suppressMenu: true,\n  };\n\n  state = {\n    tableHeight: 500,\n    hiddenColumns: [],\n    serachOptions: [{ Title: \"Default\", value: \"default\" }],\n    serachOption: \"default\",\n    searchResults: [],\n    searchFields: [],\n    searchView: \"table\",\n    showResultsTable: false,\n    isLoading: false,\n    searchValue: \"\",\n    context: { componentParent: this },\n    autoCompleteDataSource: {\n      resentSearch: [],\n      suggessions: [],\n    },\n  };\n\n  tableWrapperRef = React.createRef();\n\n  debouncedOnChange = debounce((dispatch) => {\n    this.getSearchResults(dispatch);\n  }, 500);\n\n  componentWillMount() {\n    const { dispatch } = this.context;\n    window.addEventListener(\"resize\", this.handleWindowResize);\n    dispatch({ type: \"SHOW_TABLE_LOADING_OVERLAY\", payload: false });\n    dispatch({ type: \"SHOW_RESULTS_TABLE\", payload: false });\n    this.setState({\n      autoCompleteDataSource: {\n        resentSearch: [],\n        suggessions: [],\n      },\n    });\n  }\n\n  componentWillUnmount() {\n    this.signal.cancel(\"Canceled\");\n    window.removeEventListener(\"resize\", this.handleWindowResize);\n  }\n\n  onChange = (dispatch, e) => {\n    // const { value } = e.target;\n    const { autoCompleteDataSource } = this.state;\n    this.setState({\n      autoCompleteDataSource: {\n        resentSearch: autoCompleteDataSource.resentSearch,\n        suggessions: e.length ? [\"loading\"] : [],\n      },\n    });\n    this.setState({ searchValue: e }, () => {\n      this.debouncedOnChange(dispatch);\n    });\n  };\n\n  getSearchResults = async (dispatch) => {\n    const { searchValue, serachOption } = this.state;\n    const { autoCompleteDataSource } = this.state;\n\n    this.handleWindowResize();\n\n    const currentSession = {};\n    this.lastSession = currentSession;\n    dispatch({ type: \"SHOW_TABLE_LOADING_OVERLAY\", payload: true });\n\n    if (!searchValue) {\n      dispatch({ type: \"SET_SEARCH_RESULTS\", payload: [] });\n      dispatch({ type: \"SHOW_TABLE_LOADING_OVERLAY\", payload: false });\n      return;\n    }\n    this.setState({\n      autoCompleteDataSource: {\n        resentSearch: autoCompleteDataSource.resentSearch,\n        suggessions: [],\n      },\n    });\n    this.setState({\n      showResultsTable: true,\n      isLoading: true,\n    });\n    try {\n      const res = await getSearchRequest(searchValue, serachOption, {\n        cancelToken: this.signal.token,\n      });\n\n      if (this.lastSession !== currentSession) return;\n\n      this.onGetSearchSuccess(dispatch, res);\n    } catch (e) {\n      console.log(e);\n      this.onGetSearchError(dispatch);\n    }\n  };\n\n  onGetSearchSuccess = (dispatch, res) => {\n    this.parseTableData(res.data ? res.data : []);\n    this.setState({ isLoading: false });\n    dispatch({ type: \"SHOW_TABLE_LOADING_OVERLAY\", payload: false });\n  };\n\n  parseTableData = (data) => {\n    const { meta } = data;\n    this.setState({\n      searchResults: data.data,\n      searchFields: data.meta.fields,\n      searchView: meta.view,\n      showResultsTable: true,\n    });\n  };\n\n  onGetSearchError = (dispatch) => {\n    message.error(\"Unfortunately there was an error getting the results\");\n    this.setState({ isLoading: false });\n    dispatch({ type: \"SHOW_TABLE_LOADING_OVERLAY\", payload: false });\n  };\n\n  setTableDimensions = () => {\n    const marginBottom = 24;\n    const offsetTop = this.tableWrapperRef.current.getBoundingClientRect().top;\n    const tableHeight = window.innerHeight - offsetTop - marginBottom;\n\n    this.setState({ tableHeight });\n  };\n\n  handleWindowResize = () => {\n    this.setTableDimensions();\n  };\n\n  searchOptionChange = (serachOption) => {\n    this.setState({ serachOption });\n  };\n\n  renderOption = () => {\n    const { autoCompleteDataSource } = this.state;\n    const options = Object.keys(autoCompleteDataSource).map((group) => {\n      return (\n        <OptGroup\n          key={group}\n          label={group === \"suggessions\" ? \"Suggestions\" : \"Recent Searches\"}\n        >\n          {autoCompleteDataSource[group].map((item) => (\n            <Option key={item} text={item}>\n              {item === \"loading\" ? (\n                <Icon type=\"loading\" />\n              ) : (\n                <div className=\"global-search-item\">\n                  <span className=\"global-search-item-desc\">{item}</span>\n                  {group === \"resentSearch\" ? (\n                    <span className=\"search-history-remove\">Remove</span>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              )}\n            </Option>\n          ))}\n        </OptGroup>\n      );\n    });\n\n    return options;\n  };\n\n  render() {\n    const { dispatch } = this.context;\n    const {\n      serachOptions,\n      serachOption,\n      searchResults,\n      searchFields,\n      tableHeight,\n      hiddenColumns,\n      searchView,\n      showResultsTable,\n      context,\n      isLoading,\n    } = this.state;\n\n    return (\n      <Fragment>\n        <div className=\"search-input-wrapper initial-search-done\">\n          <Row gutter={12}>\n            <Col span={6}>\n              <Select\n                placeholder=\"Select Option\"\n                className=\"search-select-options\"\n                onSelect={this.searchOptionChange}\n                value={serachOption}\n              >\n                {serachOptions.map((option) => (\n                  <Option value={option.value} key={option.value}>\n                    {option.Title}\n                  </Option>\n                ))}\n              </Select>\n            </Col>\n            <Col span={18}>\n              <div className=\"global-search-wrapper\">\n                <AutoComplete\n                  className=\"search-input\"\n                  size=\"large\"\n                  style={{ width: \"100%\" }}\n                  dropdownStyle={{ width: \"500px\" }}\n                  onSearch={this.handleSearch}\n                  optionLabelProp=\"text\"\n                  onChange={(e) => this.onChange(dispatch, e)}\n                  ref={(node) => {\n                    this.searchInput = node;\n                  }}\n                >\n                  <Input\n                    className=\"search-input\"\n                    placeholder=\"Search...\"\n                    prefix={\n                      <Icon\n                        type=\"search\"\n                        style={{ color: \"rgba(0,0,0,.25)\" }}\n                      />\n                    }\n                    size=\"large\"\n                  />\n                </AutoComplete>\n              </div>\n            </Col>\n          </Row>\n        </div>\n\n        <div className=\"search-table-wrapper\">\n          <div ref={this.tableWrapperRef} className=\"search-results\">\n            {searchView === \"table\" && showResultsTable && (\n              <DataTable\n                ref={this.dataTableRef}\n                columns={searchFields}\n                rowData={searchResults}\n                tableHeight={tableHeight}\n                hiddenColumns={hiddenColumns}\n                context={context}\n                tableResultsAreLoading={isLoading}\n                enableFilter={false}\n                enableSorting={false}\n                floatingFilter={false}\n                suppressMenu={false}\n              />\n            )}\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default SearchComponent;\n","import React from \"react\";\nimport { Provider } from \"./context\";\nimport SearchComponent from \"./components/Search/SearchComponent\";\nimport \"./App.scss\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider>\n        <SearchComponent></SearchComponent>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import 'core-js/fn/string/ends-with';\nimport 'core-js/fn/string/starts-with';\nimport 'core-js/fn/array/includes';\nimport 'core-js/fn/array/find';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}