{"version":3,"sources":["context.js","components/Header/Nav.js","components/UserMenu/UserMenu.js","components/Header/Header.js","services/api.js","components/DSM/DSMViewer/DSMTables/AntDataTable.js","components/DSM/DSMSearchInput/DSMSearchInput.js","components/DSM/DSMSearch/DSMSearch.js","pages/DSMPages/DSMPage1.js","pages/DSMPages/DSMPage2.js","layouts/PrimaryLayout/PrimaryLayout.js","App.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","devices","payload","tableResultsAreLoading","showResultsTable","countryList","credentialsList","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","dispatch","setState","inherits","createClass","key","value","children","props","react_default","a","createElement","Component","Consumer","Nav","selectedMenuItem","isMobileNavExapnded","getSelectedClass","menu","expandCollapseNav","e","preventDefault","signout","history","localStorage","removeItem","push","_this2","setActiveMenuItem","historyUnlisten","listen","location","match","matchPath","window","pathname","path","strict","params","section","Fragment","selectedKeys","mode","theme","Item","Link","to","withRouter","UserMenu","isDarkMode","componentWillMount","JSON","parse","getItem","document","querySelector","className","handleJiraScriptError","message","error","handleJiraScriptLoad","ATL_JQ_PAGE_PROPS","triggerFunction","showCollectorDialog","querySelectorAll","forEach","item","addEventListener","fieldValues","summary","changeTheme","setItem","stringify","es_switch","checked","onChange","Header","GlobalHeader","Header_Header","href","components_Header_Nav","components_UserMenu_UserMenu","__env","apiDomain1","apiDomain2","axios","interceptors","request","use","config","Promise","reject","getApiDomain","page","indexOf","getDSMSearchRequest","query","queryOption","options","signal","apiDomain","get","pageSize","sorting","filtering","getDSMTypeaheadRequest","field","size","getDSMFilterTypeaheadRequest","filter","AntDataTable","componentDidMount","handleResize","index","_ref","_ref2","columns","nextColumns","toConsumableArray","width","hostNameClick","console","log","handleTableChange","pagination","filters","sorter","onTableChange","_this$props","rowData","colDefs","totalItems","tableHeight","isLoading","table","components","dataSource","loading","hideOnSinglePage","defaultPageSize","pageSizeOptions","total","current","showSizeChanger","scroll","x","y","scrollToFirstRowOnChange","defaultProps","Option","OptGroup","SearchComponent","CancelToken","source","defaultColumnDefs","suppressMenu","searchFilterOptions","IPv4","Hostname","serachOptions","Title","filterOptions","serachOption","searchResults","searchColumns","searchView","searchValue","autoCompleteDataSource","suggessions","sortingKey","sortOrder","reqTime","metaFields","tableWrapperRef","createRef","debouncedOnChange","debounce","getSearchResults","onAutoCompleteChange","then","response","data","catch","columnKey","order","_callee","_this$state","currentSession","sort","filterStr","res","regenerator_default","wrap","_context","prev","next","handleWindowResize","lastSession","keys","map","option","unshift","join","cancelToken","token","sent","abrupt","onGetSearchSuccess","t0","onSearchEmpty","stop","parseTableData","headers","clickApplyFilters","clickResetFilters","filterClear","onColumnFilterKeyUpFocus","isBlured","target","keyCode","autoCompleteOptions","onColumnFilterAutocomplete","_this$state2","filterKey","filterVal","filterOption","onColumnFilterOptionChange","renderTitleWithFilter","title","_this$state3","onClick","stopPropagation","es_select","placeholder","dropdownClassName","defaultValue","onSelect","auto_complete","style","defaultActiveFirstOption","onSearch","input","onKeyUp","onFocus","createColDefs","meta","isShow","name","label","dataIndex","fields","col","d","view","setTableDimensions","offsetTop","getBoundingClientRect","top","innerHeight","searchOptionChange","renderOption","group","text","icon","cancel","removeEventListener","_this$state4","searchColumnsUpdate","react","parseInt","toLocaleString","allowClear","autoFocus","prefix","color","es_button","ref","DSMViewer_DSMTables_AntDataTable","DSMSearch","DSMSearchInput_DSMSearchInput","DSMPage1","DSMSearch_DSMSearch","DSMPage2","Content","App","routes","Switch","Route","exact","component","render","Redirect","globalContentClasses","classNames","global-content-search","global-content-devices","global-content-policies","global-content-admin","layout","components_Header_Header","webPingTimer","showNotification","context_Provider","App_PrivateRoute","PrimaryLayout","PrivateRoute","rest","objectWithoutProperties","assign","ReactDOM","BrowserRouter","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.87b63e45.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_DEVICES':\n      return {\n        ...state,\n        devices: action.payload\n      };\n    case 'SHOW_TABLE_LOADING_OVERLAY':\n      return {\n        ...state,\n        tableResultsAreLoading: action.payload\n      };\n    case 'SHOW_RESULTS_TABLE':\n      return {\n        ...state,\n        showResultsTable: action.payload\n      };\n    case 'SET_COUNTRIES':\n      return {\n        ...state,\n        countryList: action.payload\n      };\n    case 'SET_CREDENTIALS':\n      return {\n        ...state,\n        credentialsList: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    devices: [],\n    countryList: [],\n    credentialsList: [],\n    tableResultsAreLoading: false,\n    showResultsTable: false,\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  render() {\n    const state = { ...this.state };\n    const { children } = this.props;\n\n    return <Context.Provider value={state}>{children}</Context.Provider>;\n  }\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport const Consumer = Context.Consumer; // eslint-disable-line prefer-destructuring\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint jsx-a11y/anchor-is-valid: [0] */\nimport React, { Component } from \"react\";\nimport { withRouter, matchPath, Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Menu } from \"antd\";\n\nimport \"./Nav.scss\";\n\nclass Nav extends Component {\n  state = { selectedMenuItem: \"\", isMobileNavExapnded: false };\n\n  componentDidMount() {\n    const { history } = this.props;\n\n    this.setActiveMenuItem();\n\n    this.historyUnlisten = history.listen((location, action) => {\n      this.setActiveMenuItem();\n    });\n  }\n\n  componentWillUnmount() {\n    this.historyUnlisten();\n  }\n\n  setActiveMenuItem() {\n    const match = matchPath(window.location.pathname, {\n      path: \"/:section\",\n      strict: false,\n    });\n\n    if (match) {\n      this.setState({ selectedMenuItem: match.params.section });\n    }\n  }\n\n  getSelectedClass = (menu) => {\n    const { selectedMenuItem } = this.state;\n    return selectedMenuItem === menu ? \"selected\" : \"\";\n  };\n\n  expandCollapseNav = (e) => {\n    e.preventDefault();\n    const { isMobileNavExapnded } = this.state;\n    this.setState({ isMobileNavExapnded: !isMobileNavExapnded });\n  };\n\n  signout = (e) => {\n    const { history } = this.props;\n\n    e.preventDefault();\n    localStorage.removeItem(\"auth\");\n    localStorage.removeItem(\"roles\");\n    history.push(\"/public/login\");\n  };\n\n  render() {\n    const { selectedMenuItem } = this.state;\n    // let roles = [];\n\n    // if (localStorage.getItem(\"roles\")) {\n    //   roles = JSON.parse(localStorage.getItem(\"roles\"));\n    // }\n\n    return (\n      <>\n        {/* <div className=\"mobile-nav\">\n          <div\n            className={`nav-toggle ${isMobileNavExapnded ? 'expanded' : ''}`}\n            onClick={e => {\n              this.expandCollapseNav(e);\n            }}\n          >\n            <span className=\"nav-toggle-bar\" />\n          </div>\n          <nav\n            className={`nav ${isMobileNavExapnded ? 'expanded' : ''}`}\n            onClick={e => {\n              this.expandCollapseNav(e);\n            }}\n          >\n            <ul>\n              {roles.includes('search') && (\n                <li className={this.getSelectedClass('search')}>\n                  <Link to=\"/search\">Search</Link>\n                </li>\n              )}\n              <li className=\"seperator\">\n                <a href=\"#\" className=\"reportBugLink\">\n                  Report Bug\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"reportNewFeatureLink\">\n                  Report New Feature\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" onClick={e => this.signout(e)}>\n                  Logout\n                </a>\n              </li>\n            </ul>\n          </nav>\n        </div> */}\n\n        <Menu selectedKeys={[selectedMenuItem]} mode=\"horizontal\" theme=\"dark\">\n          <Menu.Item key=\"search1\">\n            <Link to=\"/search1\">Search 1</Link>\n          </Menu.Item>\n          <Menu.Item key=\"search2\">\n            <Link to=\"/search2\">Search 2</Link>\n          </Menu.Item>\n          {/* <Menu.Item key=\"/\" className=\"active\">\n            <Link to=\"/ds-search\">Search</Link>\n          </Menu.Item> */}\n          {/* <Menu.Item key=\"dsm-editor\">\n            <Link to=\"/dsm-editor\">DSM Editor</Link>\n          </Menu.Item>\n          <Menu.Item key=\"dsm-viewer\">\n            <Link to=\"/dsm-viewer\">DSM Viewer</Link>\n          </Menu.Item> */}\n        </Menu>\n      </>\n    );\n  }\n}\n\nNav.propTypes = {\n  history: PropTypes.object.isRequired,\n};\n\nexport default withRouter(Nav);\n","/* eslint jsx-a11y/anchor-is-valid: [0] */\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { message, Switch } from \"antd\";\n// import Script from 'react-load-script';\n\nimport \"./UserMenu.scss\";\n\nclass UserMenu extends Component {\n  state = {\n    isDarkMode: false,\n  };\n\n  componentWillMount = () => {\n    const isDarkMode = JSON.parse(localStorage.getItem(\"dsm-dark-mode\"));\n    if (isDarkMode) {\n      document.querySelector(\"body\").className = `${\n        isDarkMode ? \"dark-theme\" : \"light-theme\"\n      }`;\n      this.setState({ isDarkMode });\n    }\n  };\n\n  signout = (e) => {\n    const { history } = this.props;\n\n    e.preventDefault();\n    localStorage.removeItem(\"auth\");\n    localStorage.removeItem(\"roles\");\n    history.push(\"/public/login\");\n  };\n\n  handleJiraScriptError = () => {\n    message.error(\n      \"Unfortunately there was an error related to the JIRA issue collector - you will not be able to report any issues.\"\n    );\n  };\n\n  handleJiraScriptLoad = () => {\n    window.ATL_JQ_PAGE_PROPS = {\n      triggerFunction: (showCollectorDialog) => {\n        document.querySelectorAll(\".reportBugLink\").forEach((item) => {\n          item.addEventListener(\"click\", (e) => {\n            window.ATL_JQ_PAGE_PROPS.fieldValues.summary = \"[Bug]: \";\n            e.preventDefault();\n            showCollectorDialog();\n          });\n        });\n        document.querySelectorAll(\".reportNewFeatureLink\").forEach((item) => {\n          item.addEventListener(\"click\", (e) => {\n            window.ATL_JQ_PAGE_PROPS.fieldValues.summary = \"[NewFeature]: \";\n            e.preventDefault();\n            showCollectorDialog();\n          });\n        });\n      },\n      fieldValues: {\n        summary: \"[Bug]: \",\n      },\n    };\n  };\n\n  changeTheme = (e) => {\n    const { isDarkMode } = this.state;\n    this.setState({ isDarkMode: !isDarkMode }, () => {\n      // eslint-disable-next-line no-shadow\n      const { isDarkMode } = this.state;\n      document.querySelector(\"body\").className = `${\n        isDarkMode ? \"dark-theme\" : \"light-theme\"\n      }`;\n      localStorage.setItem(\"dsm-dark-mode\", JSON.stringify(isDarkMode));\n    });\n  };\n\n  render() {\n    // const jiraScriptUrl =\n    //   \"https://jira.lgi.io/s/d2f11eb2426a5845d2ad6d6592ab1479-T/k0n5ws/76002/23aeed5035eb07e911417ba4d45ad09e/2.0.24/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector.js?locale=en-UK&collectorId=23a3f869\";\n    const { isDarkMode } = this.state;\n\n    return (\n      <>\n        <div className=\"user-menu\">\n          <div className=\"theme-switch\">\n            <label>Dark</label>\n            <Switch checked={isDarkMode} onChange={this.changeTheme} />\n          </div>\n          {/* <div className=\"dropdown-menu\">\n            <div className=\"submenu-title\">\n              <Icon type=\"edit\" />\n              <span className=\"text\">Report Issue</span>\n              <div className=\"ant-menu-submenu-popup\">\n                <ul className=\"ant-menu ant-menu-sub\">\n                  <li className=\"ant-menu-item\">\n                    <a className=\"reportBugLink sub-menu-link\" href=\"#\">\n                      <span className=\"text\">Bug</span>\n                    </a>\n                  </li>\n                  <li className=\"ant-menu-item\">\n                    <a className=\"reportNewFeatureLink sub-menu-link\" href=\"#\">\n                      <span className=\"text\">New Feature</span>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div> */}\n          {/* <a className=\"user-menu-item\" href=\"#\" onClick={e => this.signout(e)}>\n            <Icon type=\"lock\" />\n            <span className=\"text\">Sign Out</span>\n          </a> */}\n        </div>\n        {/* <Script\n          url={jiraScriptUrl}\n          onError={this.handleJiraScriptError}\n          onLoad={this.handleJiraScriptLoad}\n        /> */}\n      </>\n    );\n  }\n}\n\nUserMenu.propTypes = {\n  history: PropTypes.object.isRequired,\n};\n\nexport default withRouter(UserMenu);\n","import React from \"react\";\nimport { Layout } from \"antd\";\n\nimport Nav from \"./Nav\";\nimport UserMenu from \"../UserMenu/UserMenu\";\n\nimport \"./Header.scss\";\n\nconst { Header } = Layout;\n\nfunction GlobalHeader() {\n  return (\n    <Header className=\"global-header\">\n      <a className=\"brand\" href=\"/\">\n        {/* <div className=\"logo\" /> */}\n        <span className=\"name\">LambdaDB</span>\n      </a>\n      <Nav />\n      <UserMenu />\n    </Header>\n  );\n}\n\nexport default GlobalHeader;\n","/* eslint no-underscore-dangle: [1, { \"allow\": [\"__env\"] }] */\nimport axios from \"axios\";\n\nconst { apiDomain1, apiDomain2 } = window.__env;\n\n/* eslint-disable no-param-reassign */\naxios.interceptors.request.use(\n  (config) => {\n    return config;\n  },\n\n  (error) => Promise.reject(error)\n);\n/* eslint-enable no-param-reassign */\n\n// DDS Search realted API\n\nexport const getApiDomain = () => {\n  let page = 1;\n  if (window.location.href.indexOf(\"search2\") >= 0) {\n    page = 2;\n  }\n  return page === 1 ? apiDomain1 : apiDomain2;\n};\n\nexport const getDSMSearchRequest = (query, queryOption, options, signal) => {\n  const apiDomain = getApiDomain();\n  return axios.get(\n    `${apiDomain}search/?${queryOption}=${query}&page=${options.page}&pagesize=${options.pageSize}${options.sorting}${options.filtering}`,\n    signal\n  );\n};\n\nexport const getDSMTypeaheadRequest = (query, field, size) => {\n  const apiDomain = getApiDomain();\n  return axios.get(\n    `${apiDomain}typeahead/${field}/?typeahead=${query}&limit=${size}`\n  );\n};\nexport const getDSMFilterTypeaheadRequest = (\n  queryOption,\n  query,\n  filter,\n  value,\n  field\n) => {\n  const apiDomain = getApiDomain();\n  return axios.get(\n    `${apiDomain}typeahead/${field}/?${queryOption}=${query}${filter}&limit=15`\n  );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable no-param-reassign */\nimport React, { Component } from 'react';\nimport { Table } from 'antd';\n// import { Resizable } from 'react-resizable';\nimport PropTypes from 'prop-types';\n\nimport './AntDataTable.scss';\n\nclass AntDataTable extends Component {\n  // ResizeableTitle = (props) => {\n  //   const { onResize, width, ...restProps } = props;\n  //   if (!width) {\n  //     return <th {...restProps} />;\n  //   }\n\n  //   return (\n  //     <Resizable\n  //       width={width}\n  //       height={0}\n  //       handle={\n  //         <span\n  //           className=\"react-resizable-handle\"\n  //           onClick={(e) => {\n  //             e.stopPropagation();\n  //           }}\n  //         />\n  //       }\n  //       onResize={onResize}\n  //       draggableOpts={{ enableUserSelectHack: false }}\n  //     >\n  //       <th {...restProps} />\n  //     </Resizable>\n  //   );\n  // };\n\n  // components = {\n  //   header: {\n  //     cell: this.ResizeableTitle,\n  //   },\n  // };\n\n  componentDidMount = () => {};\n\n  handleResize = index => (e, { size }) => {\n    this.setState(({ columns }) => {\n      const nextColumns = [...columns];\n      nextColumns[index] = {\n        ...nextColumns[index],\n        width: size.width\n      };\n      return { columns: nextColumns };\n    });\n  };\n\n  hostNameClick = () => {\n    console.log('hostNameClick...');\n  };\n\n  handleTableChange = (pagination, filters, sorter) => {\n    const { onTableChange } = this.props;\n    onTableChange(pagination, filters, sorter);\n  };\n\n  render() {\n    const { rowData, colDefs, totalItems, tableHeight, page, isLoading } = this.props;\n\n    return (\n      <div className=\"data-table-wrapper\">\n        <Table\n          className=\"data-table\"\n          components={this.components}\n          dataSource={rowData}\n          columns={colDefs}\n          loading={isLoading}\n          onChange={this.handleTableChange}\n          pagination={{\n            hideOnSinglePage: true,\n            defaultPageSize: 20,\n            pageSizeOptions: ['10', '20', '50', '100'],\n            total: totalItems,\n            current: page,\n            showSizeChanger: true\n          }}\n          scroll={{\n            x: false, // If specify the width, the header and body will be scrollable\n            y: tableHeight,\n            scrollToFirstRowOnChange: true\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nAntDataTable.defaultProps = {\n  isLoading: true,\n  totalItems: 0,\n  page: 1,\n  tableHeight: 500\n};\n\nAntDataTable.propTypes = {\n  colDefs: PropTypes.array.isRequired,\n  rowData: PropTypes.array.isRequired,\n  totalItems: PropTypes.number,\n  page: PropTypes.number,\n  tableHeight: PropTypes.number,\n  isLoading: PropTypes.bool,\n  onTableChange: PropTypes.func.isRequired\n};\n\nexport default AntDataTable;\n","/* eslint-disable prefer-destructuring */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable no-param-reassign */\n/* eslint no-underscore-dangle: [1, { \"allow\": [\"__env\"] }] */\nimport React, { Component, Fragment } from \"react\";\nimport { Input, Icon, Select, AutoComplete, Button } from \"antd\";\nimport { debounce } from \"lodash\";\nimport axios from \"axios\";\n\nimport {\n  getDSMSearchRequest,\n  getDSMTypeaheadRequest,\n  getDSMFilterTypeaheadRequest,\n} from \"../../../services/api\";\nimport AntDataTable from \"../DSMViewer/DSMTables/AntDataTable\";\n\nimport \"./DSMSearchInput.scss\";\n\nconst { Option } = Select;\nconst { OptGroup } = AutoComplete;\n\nclass SearchComponent extends Component {\n  signal = axios.CancelToken.source();\n\n  defaultColumnDefs = {\n    suppressMenu: true,\n  };\n\n  searchFilterOptions = {\n    IPv4: `&contains-value_type=ipv4_address`,\n    Hostname: `&contains-value_type=hostname`,\n  };\n\n  state = {\n    tableHeight: 500,\n    serachOptions: [\n      { Title: \"Search\", value: \"search\" },\n      { Title: \"IPv4\", value: \"IPv4\" },\n      { Title: \"Hostname\", value: \"Hostname\" },\n      { Title: \"Regex\", value: \"regex\" },\n      { Title: \"Contains\", value: \"contains\" },\n      { Title: \"Starts with\", value: \"startswith\" },\n      { Title: \"Match\", value: \"match\" },\n    ],\n    filterOptions: [\n      { Title: \"Contains\", value: \"contains\" },\n      { Title: \"Starts with\", value: \"startswith\" },\n      { Title: \"Match\", value: \"match\" },\n      { Title: \"Not Contains\", value: \"!contains\" },\n      { Title: \"Not Starts with\", value: \"!startswith\" },\n      { Title: \"Not Match\", value: \"!match\" },\n      { Title: \"Any Contains\", value: \"any_contains\" },\n      { Title: \"Any Starts with\", value: \"any_startswith\" },\n      { Title: \"Any Match\", value: \"any_match\" },\n    ],\n    serachOption: \"search\",\n    searchResults: [],\n    searchColumns: [],\n    searchView: \"table\",\n    showResultsTable: false,\n    isLoading: false,\n    searchValue: \"\",\n    autoCompleteDataSource: {\n      suggessions: [],\n    },\n    totalItems: 0,\n    page: 1,\n    pageSize: 20,\n    sortingKey: \"\",\n    sortOrder: \"\",\n    filters: {},\n    reqTime: 0,\n    metaFields: [],\n  };\n\n  tableWrapperRef = React.createRef();\n\n  debouncedOnChange = debounce(() => {\n    this.setState({\n      page: 1,\n      sortingKey: \"\",\n      sortOrder: \"\",\n      // filters: {}\n    });\n\n    this.getSearchResults();\n  }, 100);\n\n  componentWillMount() {\n    window.addEventListener(\"resize\", this.handleWindowResize);\n    this.setState({\n      // searchColumns: this.createColDefs(),\n      autoCompleteDataSource: {\n        suggessions: [],\n      },\n    });\n  }\n\n  componentWillUnmount() {\n    this.signal.cancel(\"Canceled\");\n    window.removeEventListener(\"resize\", this.handleWindowResize);\n  }\n\n  onAutoCompleteChange = (e) => {\n    // this.setState({\n    //   autoCompleteDataSource: {\n    //     suggessions: e.length ? ['loading'] : []\n    //   }\n    // });\n    this.setState({ searchValue: e || \"\" }, () => {\n      this.debouncedOnChange();\n    });\n\n    if (!e) {\n      this.setState({\n        autoCompleteDataSource: {\n          suggessions: [],\n        },\n      });\n      return;\n    }\n    getDSMTypeaheadRequest(e || \"\", \"value\", 1)\n      .then((response) => {\n        this.setState({\n          autoCompleteDataSource: {\n            suggessions: response.data ? response.data : [],\n          },\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          autoCompleteDataSource: {\n            suggessions: [],\n          },\n        });\n      });\n  };\n\n  handleTableChange = (pagination, filters, sorter) => {\n    this.setState(\n      {\n        page: pagination.current,\n        pageSize: pagination.pageSize,\n        sortingKey: sorter.columnKey,\n        sortOrder: sorter.order,\n        filters,\n      },\n      () => {\n        this.getSearchResults();\n      }\n    );\n  };\n\n  getSearchResults = async () => {\n    const {\n      searchValue,\n      page,\n      pageSize,\n      sortingKey,\n      sortOrder,\n      filters,\n    } = this.state;\n    let { serachOption } = this.state;\n    this.handleWindowResize();\n\n    const currentSession = {};\n    this.lastSession = currentSession;\n    // if (!searchValue) {\n    //   this.onSearchEmpty();\n    //   return;\n    // }\n    this.setState({\n      showResultsTable: true,\n      isLoading: true,\n    });\n    try {\n      // Parse sorting string.\n      let sort = \"\";\n      if (sortOrder === \"ascend\") {\n        sort = `&sortby=${sortingKey}`;\n      }\n      if (sortOrder === \"descend\") {\n        sort = `&sortby=-${sortingKey}`;\n      }\n\n      // Parse Filter string\n      let filterStr = [];\n      if (filters) {\n        filterStr = Object.keys(filters).map((key) => {\n          const value = filters[key].value ? filters[key].value : \"\";\n          const option = filters[key].option ? filters[key].option : \"contains\";\n          return `&${option}-${key}=${value}`;\n        });\n      }\n\n      if (serachOption === \"IPv4\" || serachOption === \"Hostname\") {\n        filterStr.unshift(this.searchFilterOptions[serachOption]);\n        serachOption = \"search\";\n      }\n\n      const filter = filterStr.join(\"\");\n      const res = await getDSMSearchRequest(\n        searchValue,\n        serachOption,\n        {\n          page,\n          pageSize,\n          sorting: sortingKey ? sort : \"\",\n          filtering: filter,\n        },\n        {\n          cancelToken: this.signal.token,\n        }\n      );\n\n      if (this.lastSession !== currentSession) return;\n      this.onGetSearchSuccess(res);\n    } catch (e) {\n      this.onSearchEmpty();\n    }\n  };\n\n  onGetSearchSuccess = (res) => {\n    this.parseTableData(res.data ? res.data : []);\n    this.setState({\n      isLoading: false,\n      totalItems: res.headers[\"total-items\"] ? res.headers[\"total-items\"] : 100,\n      reqTime: res.headers[\"query-duration\"]\n        ? res.headers[\"query-duration\"]\n        : \"50ms\",\n    });\n  };\n\n  clickApplyFilters = () => {\n    this.getSearchResults();\n  };\n\n  clickResetFilters = () => {\n    const { filters } = this.state;\n    const filterClear = {};\n    Object.keys(filters).map((key) => {\n      filterClear[key] = {\n        ...filters[key],\n        value: \"\",\n      };\n      return key;\n    });\n    this.setState({ filters: filterClear }, () => {\n      this.getSearchResults();\n    });\n  };\n\n  onColumnFilterKeyUpFocus = (e, key, isBlured) => {\n    let value = \"\";\n    if (e && e.target) {\n      value = e.target.value;\n    } else {\n      value = e;\n    }\n    const { filters } = this.state;\n    if ((e && e.keyCode === 13) || isBlured) {\n      filters[key].value = value;\n      this.setState({ filters }, () => {\n        this.getSearchResults();\n      });\n    } else {\n      filters[key].value = value;\n      filters[key].autoCompleteOptions = [];\n      this.setState({ filters }, () => {\n        this.onColumnFilterAutocomplete(e, key);\n      });\n    }\n  };\n\n  onColumnFilterAutocomplete = (e, key) => {\n    const { filters, serachOption, searchValue } = this.state;\n    const value = e;\n    // Parse Filter string\n    let filterStr = [];\n    if (filters) {\n      filterStr = Object.keys(filters).map((filterKey) => {\n        const filterVal = filters[filterKey].value\n          ? filters[filterKey].value\n          : \"\";\n        const filterOption = filters[filterKey].option\n          ? filters[filterKey].option\n          : \"contains\";\n        return `&${filterOption}-${filterKey}=${filterVal}`;\n      });\n    }\n    const filter = filterStr.join(\"\");\n\n    getDSMFilterTypeaheadRequest(serachOption, searchValue, filter, value, key)\n      .then((response) => {\n        filters[key].autoCompleteOptions = response.data ? response.data : [];\n        this.setState({ filters });\n      })\n      .catch((error) => {\n        filters[key].autoCompleteOptions = [];\n        this.setState({ filters });\n      });\n  };\n\n  onColumnFilterOptionChange = (value, key) => {\n    const { filters } = this.state;\n    if (filters[key].option !== value) {\n      filters[key].option = value;\n      this.setState({ filters });\n      if (filters[key].value) {\n        this.getSearchResults();\n      }\n    }\n  };\n\n  renderTitleWithFilter = (key, title) => {\n    const { filterOptions, filters } = this.state;\n    if (!filters[key]) {\n      return \"\";\n    }\n    return (\n      <div className=\"custom-hd-wrp\">\n        <div className=\"hd-label\">{title}</div>\n        <div\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <Select\n            placeholder=\"Select Option\"\n            dropdownClassName=\"table-filter-dropdown\"\n            defaultValue=\"contains\"\n            onSelect={(value) => {\n              this.onColumnFilterOptionChange(value, key);\n            }}\n          >\n            {filterOptions.map((option) => (\n              <Option value={option.value} key={option.value}>\n                {option.Title}\n              </Option>\n            ))}\n          </Select>\n          <AutoComplete\n            dataSource={filters[key].autoCompleteOptions}\n            style={{ width: 200 }}\n            defaultActiveFirstOption={false}\n            dropdownClassName=\"column-filter-dropdown\"\n            value={filters[key].value}\n            onSelect={(e) => {\n              this.onColumnFilterKeyUpFocus(e, key, true);\n            }}\n            onSearch={(e) => {\n              this.onColumnFilterKeyUpFocus(e, key);\n            }}\n            // onFocus={e => {\n            //   this.onColumnFilterKeyUpFocus(e, key);\n            // }}\n            // onSearch={e => {\n            //   this.onColumnFilterKeyUpFocus(e, key);\n            // }}\n            placeholder={title}\n          >\n            <Input\n              onKeyUp={(e) => {\n                this.onColumnFilterKeyUpFocus(e, key);\n              }}\n              onFocus={(e) => {\n                this.onColumnFilterKeyUpFocus(e, key);\n              }}\n            />\n          </AutoComplete>\n        </div>\n      </div>\n    );\n  };\n\n  createColDefs = () => {\n    const { metaFields } = this.state;\n    const colDefs = [];\n    metaFields.map((meta) => {\n      if (meta.isShow) {\n        colDefs.push({\n          title: this.renderTitleWithFilter(meta.name, meta.label),\n          dataIndex: meta.name,\n          key: meta.name,\n          className: meta.name,\n          sorter: true,\n          width: meta.width ? meta.width : 130,\n        });\n      }\n    });\n    return colDefs;\n  };\n\n  parseTableData = (data) => {\n    const { meta } = data;\n    const { filters } = this.state;\n    data.meta.fields.forEach((col, index) => {\n      if (!filters[col.name]) {\n        filters[col.name] = {\n          option: \"contains\",\n          value: \"\",\n          autoCompleteOptions: [],\n        };\n      }\n    });\n\n    this.setState({ filters, metaFields: meta.fields }, () => {\n      const rowData = data.data.map((d, index) => {\n        return {\n          ...d,\n          key: index,\n        };\n      });\n\n      this.setState({\n        searchResults: rowData,\n        // searchColumns: this.createColDefs(),\n        searchView: meta.view,\n        showResultsTable: true,\n      });\n    });\n  };\n\n  onSearchEmpty = () => {\n    // message.error(\"Unfortunately there was an error getting the results\");\n    this.setState({\n      searchResults: [],\n      searchView: \"table\",\n      showResultsTable: true,\n      isLoading: false,\n      page: 0,\n      totalItems: 0,\n    });\n  };\n\n  setTableDimensions = () => {\n    const marginBottom = 70;\n    const offsetTop = this.tableWrapperRef.current.getBoundingClientRect().top;\n    const tableHeight = window.innerHeight - offsetTop - marginBottom - 115;\n    this.setState({ tableHeight });\n  };\n\n  handleWindowResize = () => {\n    this.setTableDimensions();\n  };\n\n  searchOptionChange = (serachOption) => {\n    this.setState({ serachOption }, () => {\n      this.debouncedOnChange();\n    });\n  };\n\n  renderOption = () => {\n    const { autoCompleteDataSource } = this.state;\n    const options = Object.keys(autoCompleteDataSource).map((group) => {\n      return (\n        <OptGroup\n          key={group}\n          label={group === \"suggessions\" ? \"Suggestions\" : \"Recent Searches\"}\n        >\n          {autoCompleteDataSource[group].map((item) => (\n            <Option key={item} text={item}>\n              {item === \"loading\" ? (\n                <Icon type=\"loading\" />\n              ) : (\n                <div className=\"global-search-item\">\n                  <span className=\"global-search-item-desc\">{item}</span>\n                  {group === \"resentSearch\" ? (\n                    <span className=\"search-history-remove\">Remove</span>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              )}\n            </Option>\n          ))}\n        </OptGroup>\n      );\n    });\n\n    return options;\n  };\n\n  render() {\n    const {\n      isLoading,\n      reqTime,\n      serachOptions,\n      serachOption,\n      searchResults,\n      autoCompleteDataSource,\n      tableHeight,\n      searchView,\n      showResultsTable,\n      totalItems,\n      page,\n    } = this.state;\n\n    const searchColumnsUpdate = this.createColDefs();\n    return (\n      <Fragment>\n        <div className=\"search-input-wrapper initial-search-done clearfix\">\n          <div className=\"top-option-box\">\n            <Select\n              placeholder=\"Select Option\"\n              className=\"search-select-options\"\n              onSelect={this.searchOptionChange}\n              value={serachOption}\n            >\n              {serachOptions.map((option) => (\n                <Option value={option.value} key={option.value}>\n                  {option.Title}\n                </Option>\n              ))}\n            </Select>\n            {totalItems !== 0 && (\n              <div className={`search-info ${isLoading ? \"loading\" : \"\"}`}>\n                {isLoading && (\n                  <span className=\"loading\">\n                    <Icon type=\"loading\" />\n                  </span>\n                )}\n                <span>About </span>\n                {parseInt(totalItems, 0).toLocaleString()}\n                <span> results (</span>\n                {reqTime}\n                <span>)</span>\n              </div>\n            )}\n          </div>\n          <div className=\"top-search-box\">\n            <div className=\"global-search-wrapper\">\n              <AutoComplete\n                className=\"search-input\"\n                size=\"large\"\n                dataSource={autoCompleteDataSource.suggessions}\n                style={{ width: \"100%\" }}\n                dropdownClassName=\"column-filter-dropdown\"\n                defaultActiveFirstOption={false}\n                allowClear\n                // onFocus={e => {\n                //   this.onAutoCompleteChange(e);\n                // }}\n                onSelect={(e) => this.onAutoCompleteChange(e)}\n                onSearch={(e) => this.onAutoCompleteChange(e)}\n                autoFocus\n              >\n                <Input\n                  className=\"search-input\"\n                  placeholder=\"Search...\"\n                  prefix={\n                    <Icon type=\"search\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  size=\"large\"\n                />\n              </AutoComplete>\n            </div>\n          </div>\n        </div>\n        <div className=\"search-filter-wrapper\">\n          <Button className=\"ant-btn-primary\" onClick={this.clickResetFilters}>\n            <Icon type=\"filter\" />\n            Reset\n          </Button>\n          <Button className=\"ant-btn-primary\" onClick={this.clickApplyFilters}>\n            Apply\n          </Button>\n        </div>\n        <div className=\"search-table-wrapper\">\n          <div ref={this.tableWrapperRef} className=\"search-results\">\n            {searchView === \"table\" && showResultsTable && (\n              <AntDataTable\n                colDefs={searchColumnsUpdate}\n                rowData={searchResults}\n                tableHeight={tableHeight}\n                totalItems={totalItems}\n                page={page}\n                isLoading={isLoading}\n                onTableChange={this.handleTableChange}\n              />\n            )}\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default SearchComponent;\n","import React, { Fragment } from 'react';\nimport DSMSearchInput from '../DSMSearchInput/DSMSearchInput';\n\nfunction DSMSearch() {\n  // const hiddenColumns = ['status'];\n  return (\n    <Fragment>\n      <DSMSearchInput />\n    </Fragment>\n  );\n}\n\nexport default DSMSearch;\n","import React, { Fragment } from \"react\";\nimport DSMSearch from \"../../components/DSM/DSMSearch/DSMSearch\";\n\nfunction DSMPage1() {\n  return (\n    <Fragment>\n      <DSMSearch />\n    </Fragment>\n  );\n}\n\nexport default DSMPage1;\n","import React, { Fragment } from \"react\";\nimport DSMSearch from \"../../components/DSM/DSMSearch/DSMSearch\";\n\nfunction DSMPage2() {\n  return (\n    <Fragment>\n      <DSMSearch />\n    </Fragment>\n  );\n}\n\nexport default DSMPage2;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, withRouter, Redirect, Switch } from \"react-router-dom\";\nimport { Layout } from \"antd\";\nimport classNames from \"classnames\";\n\nimport GlobalHeader from \"../../components/Header/Header\";\n// import DeviceSearchPage from '../../pages/DeviceSearchPage/DeviceSearchPage';\n// import DSMEditor from \"../../components/DSM/DSMEditor/DSMEditor\";\n// import DSMSearch from \"../../components/DSM/DSMSearch/DSMSearch\";\n// import DSMViewer from \"../../components/DSM/DSMViewer/DSMViewer\";\nimport DSMPage1 from \"../../pages/DSMPages/DSMPage1\";\nimport DSMPage2 from \"../../pages/DSMPages/DSMPage2\";\n\nimport \"./PrimaryLayout.scss\";\n\nconst { Content } = Layout;\n\nclass App extends Component {\n  // state = {\n  //   isRolesLoaded: true,\n  // };\n\n  componentWillMount() {\n    // if (!localStorage.getItem('roles-initiated')) {\n    //   localStorage.removeItem('roles');\n    //   this.setState({ isRolesLoaded: false });\n    //   this.getRoles();\n    // }\n  }\n\n  routes = () => {\n    // let roles = [];\n\n    // if (localStorage.getItem('roles')) {\n    //   roles = JSON.parse(localStorage.getItem('roles'));\n    // }\n\n    // localStorage.removeItem('roles-initiated');\n\n    // if (!roles.length) {\n    //   message.warning('You have no user roles assigned.');\n    // }\n\n    return (\n      <Switch>\n        {/* {<Route path=\"/search\" component={DeviceSearchPage} />} */}\n        {<Route exact path=\"/search1\" component={DSMPage1} />}\n        {<Route path=\"/search2\" component={DSMPage2} />}\n        {/* {<Route path=\"/dsm-viewer\" component={DSMViewer} />} */}\n        <Route render={() => <Redirect to={{ pathname: \"/search1\" }} />} />\n      </Switch>\n    );\n  };\n\n  render() {\n    const { location } = this.props;\n    // const { isRolesLoaded } = this.state;\n    const globalContentClasses = classNames(\"global-content\", {\n      \"global-content-search\": location.pathname === \"/search\",\n      \"global-content-devices\": location.pathname === \"/devices\",\n      \"global-content-policies\": location.pathname === \"/policies\",\n      \"global-content-admin\": location.pathname.indexOf(\"/admin/\") === 0,\n    });\n\n    return (\n      <Layout className=\"global-layout\">\n        <GlobalHeader />\n        <Content className={globalContentClasses}>{this.routes()}</Content>\n      </Layout>\n    );\n  }\n}\n\nApp.propTypes = {\n  location: PropTypes.object.isRequired,\n};\n\nexport default withRouter(App);\n","import React from \"react\";\nimport { Route, withRouter, Switch, Redirect } from \"react-router-dom\";\n// import moment from \"moment\";\n\nimport { Provider } from \"./context\";\n// import UnauthorizedLayout from \"./layouts/UnauthorizedLayout/UnauthorizedLayout\";\nimport PrimaryLayout from \"./layouts/PrimaryLayout/PrimaryLayout\";\nimport \"./App.scss\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      // connectionTimeout: 20000\n    };\n    this.webPingTimer = null;\n    this.showNotification = true;\n  }\n\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  render() {\n    return (\n      <Provider>\n        <Switch>\n          {/* <Route path=\"/public\" component={UnauthorizedLayout} /> */}\n          <PrivateRoute path=\"/\" component={PrimaryLayout} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Provider>\n    );\n  }\n}\n\nconst isAuthenticated = () => {\n  return true;\n  // let auth = localStorage.getItem(\"auth\") || \"\";\n\n  // if (!auth) {\n  //   return false;\n  // }\n\n  // auth = JSON.parse(auth);\n\n  // if (!auth.logged_in_till) {\n  //   return false;\n  // }\n\n  // const loginExpiryMoment = moment.unix(auth.logged_in_till);\n\n  // if (!loginExpiryMoment.isValid()) {\n  //   return false;\n  // }\n\n  // const loginExpired = moment().isAfter(loginExpiryMoment);\n\n  // return !loginExpired;\n};\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      isAuthenticated() ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: \"/public\",\n            state: { from: props.location },\n          }}\n        />\n      )\n    }\n  />\n);\n\nexport default withRouter(App);\n","import 'core-js/fn/string/ends-with';\nimport 'core-js/fn/string/starts-with';\nimport 'core-js/fn/array/includes';\nimport 'core-js/fn/array/find';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}