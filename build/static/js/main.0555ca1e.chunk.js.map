{"version":3,"sources":["context.js","services/api.js","components/LoginForm/LoginForm.js","pages/LoginPage/LoginPage.js","layouts/UnauthorizedLayout/UnauthorizedLayout.js","components/Header/Nav.js","components/UserMenu/UserMenu.js","components/Header/Header.js","components/DSM/DSMEditor/DSMEditor.js","components/DSM/DSMViewer/DSMTables/AntDataTable.js","components/DSM/DSMSearchInput/DSMSearchInput.js","components/DSM/DSMSearch/DSMSearch.js","components/DSM/DSMViewer/DSMCards.js","components/DSM/DSMViewer/DSMLists.js","components/DataTable/CellRenderer.js","components/DataTable/CmaItemCellRenderer.js","components/DataTable/ReportsCellRenderer.js","components/DataTable/SelectFloatingFilter.js","components/DataTable/DataTable.js","constants.js","components/DSM/DSMViewer/DSMTab/DSMTab.js","components/DSM/DSMViewer/DSMViewer.js","layouts/PrimaryLayout/PrimaryLayout.js","App.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","devices","payload","tableResultsAreLoading","showResultsTable","countryList","credentialsList","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","dispatch","setState","inherits","createClass","key","value","children","props","react_default","a","createElement","Component","Consumer","window","__env","apiDomain","authApiDomain","sharedKey","dmsSearchApiDomain","axios","interceptors","request","use","config","error","Promise","reject","loginRequest","values","method","url","timeout","data","getRolesRequest","query","get","getDevicesPassword","deviceId","getConnectionPolling","connectionTimeout","pageName","username","getDSMWorkspacesRequest","getDSMD3ObjectRequest","workspace","domain","model","runDSMAction","getDSMSearchRequest","queryOption","options","signal","page","pageSize","sorting","filtering","getDSMTypeaheadRequest","field","size","getDSMFilterTypeaheadRequest","filter","FormItem","es_form","Item","LoginForm","isLoggingIn","isShowPassword","usernameInput","createRef","passwordInput","componentWillMount","history","isDarkMode","JSON","parse","localStorage","getItem","document","querySelector","className","push","handleSubmit","e","form","preventDefault","validateFields","err","login","then","response","handleLoginSuccess","catch","handleLoginError","setItem","stringify","getRoles","message","current","focus","resetFields","handleGetRolesSuccess","handleGetRolesError","showHidePassword","getFieldDecorator","_this$state","onSubmit","rules","required","input","ref","prefix","icon","style","color","placeholder","autoFocus","suffix","title","onClick","es_button","htmlType","disabled","spin","withRouter","create","LoginPage","href","components_LoginForm_LoginForm","UnauthorizedLayout","Switch","Route","path","component","Redirect","to","Nav","selectedMenuItem","isMobileNavExapnded","getSelectedClass","menu","expandCollapseNav","signout","removeItem","_this2","setActiveMenuItem","historyUnlisten","listen","location","match","matchPath","pathname","strict","params","section","Fragment","selectedKeys","mode","theme","Link","UserMenu","handleJiraScriptError","handleJiraScriptLoad","ATL_JQ_PAGE_PROPS","triggerFunction","showCollectorDialog","querySelectorAll","forEach","item","addEventListener","fieldValues","summary","changeTheme","es_switch","checked","onChange","Header","GlobalHeader","svg","svgG","root","gNode","gLink","zoom","Header_Header","components_Header_Nav","components_UserMenu_UserMenu","Option","scheme","author","base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F","svgWidth","innerWidth","svgHeight","innerHeight","nodeWidth","nodeHeight","nodeCharactersCount","dx","dy","collapseCircleRadius","EXPAND_SYMBOL","COLLAPSE_SYMBOL","metaAttr","selectedNode","selectedTarget","tooltip","DSMEditor","showModal","selectedNodeData","nodeDataList","dsmSelectData","workspaces","dsmDomains","dsmModels","groups","operations","rolesList","dsmFilter","undefined","group","operation","showJSONModal","isLoading","isHorizontal","dsmDataD3Model","jsonModalData","loadSelectBoxData","res","loadDSMD3Object","_callee","regenerator_default","wrap","_context","prev","next","sent","initChart","t0","console","log","stop","zoomed","attr","d3","transform","resetZoom","scaleTo","translateTo","createNode","_newNode","newNode","defineProperty","enabled","depth","parent","id","Date","now","node","parentNode","collapsiblesWrapper","selectAll","select","text","_children","update","removeNode","child","alert","editNode","nodeClickHandler","contextMenu","index","x","y","currentTarget","pageX","pageY","clientX","clientY","body","scrollLeft","documentElement","scrollTop","classed","hideContextMenu","toggleChildrenClick","d","target","dv","collapseText","list","keys","map","isArray","rbac","equalToEventTarget","assertThisInitialized","setCollapsibleSymbolProperty","nodeMouseover","nodeMousemove","html","name","description","nodeMouseout","DSMData","remove","x0","y0","descendants","i","scaleExtent","on","append","source","diagonal","tree","nodeSize","duration","altKey","nodes","reverse","links","left","right","eachBefore","transition","tween","ResizeObserver","nodeTransform","nodeEnter","enter","meta","___meta___","nodeGroup","substr","textC","merge","exit","link","linkEnter","o","handleCancelModal","isValidJSON","_unused","newData","isError","toLowerCase","replace","info","addKey","deleteKey","splice","addRole","read","delete","deleteRole","generateDataModel","handleCancelJsonModal","onDsmWorkspaceChange","domains","onDsmDomainChange","_this$state2","models","onDsmModelChange","getFieldValue","onChangeOrientation","_this$state3","handleActionMenuClick","_callee2","_this$state$dsmFilter","_context2","abrupt","success","handleDownloadClick","_callee3","_this$state$dsmFilter2","_context3","_this$state4","actionMenu","react","row","gutter","col","span","initialValue","es_select","onSelect","ws","showSearch","dropdown","overlay","modal","visible","onCancel","maskClosable","keyboard","footer","maxLength","roles","colon","valuePropName","es_checkbox","react_json_tree_lib_default","invertTheme","hideRoot","AntDataTable","componentDidMount","handleResize","_ref","_ref2","columns","nextColumns","toConsumableArray","width","hostNameClick","handleTableChange","pagination","filters","sorter","onTableChange","_this$props","rowData","colDefs","totalItems","tableHeight","table","components","dataSource","loading","hideOnSinglePage","defaultPageSize","pageSizeOptions","total","showSizeChanger","scroll","scrollToFirstRowOnChange","defaultProps","OptGroup","SearchComponent","CancelToken","defaultColumnDefs","suppressMenu","searchFilterOptions","IPv4","Hostname","serachOptions","Title","filterOptions","serachOption","searchResults","searchColumns","searchView","searchValue","autoCompleteDataSource","suggessions","sortingKey","sortOrder","reqTime","tableWrapperRef","debouncedOnChange","debounce","getSearchResults","onAutoCompleteChange","columnKey","order","currentSession","sort","filterStr","handleWindowResize","lastSession","option","unshift","join","cancelToken","token","onGetSearchSuccess","onSearchEmpty","parseTableData","headers","clickApplyFilters","clickResetFilters","filterClear","onColumnFilterKeyUpFocus","isBlured","keyCode","autoCompleteOptions","onColumnFilterAutocomplete","filterKey","filterVal","filterOption","onColumnFilterOptionChange","renderTitleWithFilter","stopPropagation","dropdownClassName","defaultValue","DSMSearchInput_Option","auto_complete","defaultActiveFirstOption","onSearch","onKeyUp","onFocus","createColDefs","dataIndex","render","dn","fields","view","setTableDimensions","offsetTop","getBoundingClientRect","top","searchOptionChange","renderOption","label","cancel","removeEventListener","searchColumnsUpdate","parseInt","toLocaleString","allowClear","DSMViewer_DSMTables_AntDataTable","DSMSearch","DSMSearchInput_DSMSearchInput","DSMCards","items","hostname","card","ind","isShow","DSMLists","titleClickHandler","CellRenderer","passwordString","password","formatArray","arr","formatObject","obj","onHostnameClick","context","componentParent","handleHostnameClicked","onEditClicked","showAddEditModal","onDeleteClicked","showDeleteConfirm","onDeviceIngestionClick","initDeviceIngestion","hidePassword","deviceName","metadata","formatValue","colDef","Password_TS","_this$props2","isEditable","bind","showEditButton","showDeleteButton","showDeviceIngestionButton","popconfirm","onConfirm","okText","cancelText","displayIcon","badge","status","showActiveInactiveIcon","isInventory","vendor","version","isFormatDate","moment","utc","format","cellHtml","__html","dangerouslySetInnerHTML","CmaItemCellRenderer","handleCmaItemClicked","cmaItems","uid","popover","content","ReportsCellRenderer","uuid","SelectFloatingFilter","selectedValue","applyCustomFilter","filterData","api","fieldName","filterColumn","getFilterInstance","setModel","onFilterChanged","onSelectChange","showAutoComplete","selectOptions","SelectFloatingFilter_Option","optionFilterProp","inputValue","toUpperCase","indexOf","DataTable","gridApi","gridParams","dataTableComponent","gridWrapperRef","overlayLoadingTemplate","overlayNoRowsTemplate","onGridReady","autoHeight","gridColumnApi","columnApi","applyFilter","resetRowHeights","column","getAllDisplayedColumns","find","colId","ensureColumnVisible","downloadCsv","exportDataAsCsv","showRequiredOverlay","showLoadingOverlay","hideOverlay","showNoRowsOverlay","createColumnDefsWithOptions","columnDefs","isCmaTable","isReportsCmaTable","hiddenColumns","columnDef","columnDefObj","columnValues","cellRenderer","rowDataItem","isEmptyShow","hide","formattedArrayValue","formattedObjValue","customFormatObject","customFilterUniqueData","cols","floatingFilterComponent","floatingFilterComponentParams","unique","Set","device","resetCustomFilters","resetColumnState","setFilterModel","prevProps","_this$props3","destroy","_this2$props","enableColResize","enableSorting","enableFilter","floatingFilter","headerHeight","floatingFiltersHeight","rowHeight","columnDefsWithOptions","wrapperClasses","classNames","auto-height","gridWidth","clientWidth","sizeColumnsToFit","height","visibility","main","suppressRowClickSelection","suppressCellSelection","rowSelection","getRowHeight","frameworkComponents","cmaItemCellRenderer","reportsCellRenderer","selectFloatingFilter","suppressColumnMoveAnimation","animateRows","defaultColDef","filterParams","valueGetter","val","_this$column$colDef","isFormatFilter","formatFilterKeys","TabPane","DSMTab","activeTabKey","tabsOnChange","categoryData","setMetaDataVerticalHeight","requestAnimationFrame","categories","tabs","category","tabKey","tab","es_tabs","defaultActiveKey","activeKey","animated","Content","App","isRolesLoaded","routes","globalContentClasses","global-content-search","global-content-devices","global-content-policies","global-content-admin","layout","components_Header_Header","handleNetworkConnectionChange","webPingTimer","setInterval","networkConnectionPolling","handleNotificationClose","showNotification","auth","notification","placement","onClose","clearInterval","context_Provider","App_PrivateRoute","PrimaryLayout","PrivateRoute","rest","objectWithoutProperties","assign","ReactDOM","BrowserRouter","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.0555ca1e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_DEVICES':\n      return {\n        ...state,\n        devices: action.payload\n      };\n    case 'SHOW_TABLE_LOADING_OVERLAY':\n      return {\n        ...state,\n        tableResultsAreLoading: action.payload\n      };\n    case 'SHOW_RESULTS_TABLE':\n      return {\n        ...state,\n        showResultsTable: action.payload\n      };\n    case 'SET_COUNTRIES':\n      return {\n        ...state,\n        countryList: action.payload\n      };\n    case 'SET_CREDENTIALS':\n      return {\n        ...state,\n        credentialsList: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    devices: [],\n    countryList: [],\n    credentialsList: [],\n    tableResultsAreLoading: false,\n    showResultsTable: false,\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  render() {\n    const state = { ...this.state };\n    const { children } = this.props;\n\n    return <Context.Provider value={state}>{children}</Context.Provider>;\n  }\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport const Consumer = Context.Consumer; // eslint-disable-line prefer-destructuring\n","/* eslint no-underscore-dangle: [1, { \"allow\": [\"__env\"] }] */\nimport axios from 'axios';\nimport moment from 'moment';\n\nconst { apiDomain, authApiDomain, sharedKey, dmsSearchApiDomain } = window.__env;\n\n/* eslint-disable no-param-reassign */\naxios.interceptors.request.use(\n  config => {\n    // let auth = localStorage.getItem('auth');\n    // const loginUrl = `${authApiDomain}/login/${sharedKey}`;\n\n    // let token = null;\n    // let loginExpiryMoment = null;\n    // let loginExpired = null;\n\n    // if (config.url === loginUrl) {\n    //   localStorage.removeItem('auth');\n    //   localStorage.removeItem('roles');\n    //   auth = null;\n    // }\n    // if (auth) {\n    //   const parsedAuth = JSON.parse(auth);\n\n    //   token = parsedAuth.jwt;\n    //   loginExpiryMoment = moment.unix(parsedAuth.logged_in_till);\n    //   loginExpired = moment().isAfter(loginExpiryMoment);\n\n    //   if (loginExpired) {\n    //     localStorage.removeItem('auth');\n    //     localStorage.removeItem('roles');\n    //     window.location.href = '/public/login';\n    //     return;\n    //   }\n\n    //   if (token) {\n    //     config.headers['X-auth'] = token;\n    //   }\n    // } else if (config.url !== loginUrl && config.url.indexOf('heartbeat') < 0) {\n    //   window.location.href = '/public/login';\n    // }\n\n    // eslint-disable-next-line consistent-return\n    return config;\n  },\n\n  error => Promise.reject(error)\n);\n/* eslint-enable no-param-reassign */\n\nexport const loginRequest = values =>\n  axios({\n    method: 'post',\n    url: `${authApiDomain}/login/${sharedKey}`,\n    timeout: 10 * 1000,\n    data: values\n  });\n\nexport const getRolesRequest = query => axios.get(`${apiDomain}/dds-pages/`);\n\nexport const getDevicesPassword = deviceId => axios.get(`${apiDomain}/device/${deviceId}/oob-pwd/`);\n\nexport const getConnectionPolling = (connectionTimeout, pageName, username) =>\n  axios.get(`${apiDomain}/sys/heartbeat?page=${pageName}&user_id=${username}`, {\n    timeout: connectionTimeout\n  });\n\n// DSM Related API\n\nexport const getDSMWorkspacesRequest = () => axios.get(`${apiDomain}/dsm/all/`);\n\nexport const getDSMTemplatesRequest = () => axios.get(`${apiDomain}/dsm/`);\n\nexport const getDSMD3ObjectRequest = (workspace, domain, model) =>\n  axios.get(`${apiDomain}/dsm/${workspace}/${domain}/${model}/`);\n\nexport const getDSMDevicesRequest = (query, option, signal) =>\n  axios.get(`${apiDomain}/search-dsm/?q=${query}&page_size=1&option=${option}`, signal);\n\nexport const getDSMSearchOptions = () => axios.get(`${apiDomain}/search-dsm-options/`);\n\nexport const runDSMAction = (workspace, domain, model, action) =>\n  axios.get(`${apiDomain}/dsm/${workspace}/${domain}/${model}/${action}`);\n\n// DDS Search realted API\n\nexport const getDevicesRequest = (query, signal) =>\n  axios.get(`${apiDomain}/device/?q=${query}`, signal);\n\nexport const getCmaDataRequest = (deviceId, cmaItemId, ingestionId) =>\n  axios.get(`${apiDomain}/device/${deviceId}/cma-objects/${cmaItemId}/?result=${ingestionId}`);\n\nexport const getEasyIPRequest = ip => axios.get(`${apiDomain}/easyip/?q=${ip}`);\n\nexport const getDeviceDataRequest = (deviceId, ingestionId) =>\n  axios.get(`${apiDomain}/device/${deviceId}/?result=${ingestionId}`);\n\nexport const getIngestionHistoryRequest = deviceId =>\n  axios.get(`${apiDomain}/device/${deviceId}/history/`);\n\nexport const getLogsRequest = (params, signal) => {\n  if (params) {\n    return axios.get(\n      `${apiDomain}/generic/audit-log/?datetime_gte=${params.start}&datetime_lte=${params.end}&page_size=1000`,\n      signal\n    );\n  }\n\n  return axios.get(`${apiDomain}/api/generic/audit-log/?page_size=1000`, signal);\n};\n\nexport const getDSMSearchRequest = (query, queryOption, options, signal) =>\n  axios.get(\n    `${dmsSearchApiDomain}search/?${queryOption}=${query}&page=${options.page}&pagesize=${options.pageSize}${options.sorting}${options.filtering}`,\n    signal\n  );\n\nexport const getDSMTypeaheadRequest = (query, field, size) =>\n  axios.get(`${dmsSearchApiDomain}typeahead/${field}/?typeahead=${query}&limit=${size}`);\n\nexport const getDSMFilterTypeaheadRequest = (queryOption, query, filter, value, field) =>\n  axios.get(`${dmsSearchApiDomain}typeahead/${field}/?${queryOption}=${query}${filter}&limit=15`);\n","/* eslint-disable react/jsx-wrap-multilines */\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Form, Icon, Input, Button, message } from 'antd';\n\nimport './LoginForm.scss';\nimport { loginRequest, getRolesRequest } from '../../services/api';\n\nconst FormItem = Form.Item;\n\nclass LoginForm extends React.Component {\n  state = {\n    isLoggingIn: false,\n    isShowPassword: false\n  };\n\n  usernameInput = React.createRef();\n\n  passwordInput = React.createRef();\n\n  componentWillMount = () => {\n    const { history } = this.props;\n    const isDarkMode = JSON.parse(localStorage.getItem('dsm-dark-mode'));\n    if (isDarkMode) {\n      document.querySelector('body').className = `${isDarkMode ? 'dark-theme' : 'light-theme'}`;\n    }\n    history.push('/dds-search');\n  };\n\n  handleSubmit = e => {\n    const { form } = this.props;\n\n    e.preventDefault();\n    form.validateFields((err, values) => {\n      if (!err) {\n        this.login(values);\n        this.setState({\n          isLoggingIn: true\n        });\n      }\n    });\n  };\n\n  login = values => {\n    loginRequest(values)\n      .then(response => this.handleLoginSuccess(response))\n      .catch(error => this.handleLoginError(error.response));\n  };\n\n  handleLoginSuccess = response => {\n    localStorage.setItem('auth', JSON.stringify(response.data));\n    this.getRoles();\n  };\n\n  handleLoginError = error => {\n    const { form } = this.props;\n\n    this.setState({\n      isLoggingIn: false\n    });\n\n    if (!error) {\n      message.error('Cannot connect to server, please check the vpn.');\n      return;\n    }\n    if (error && error.data && error.data.error) {\n      message.error(error.data.error);\n      this.usernameInput.current.focus();\n    } else {\n      message.error('Unfortunately there was an error, please try again');\n      form.resetFields();\n    }\n  };\n\n  getRoles = () => {\n    getRolesRequest()\n      .then(response => this.handleGetRolesSuccess(response))\n      .catch(error => this.handleGetRolesError());\n  };\n\n  handleGetRolesSuccess = response => {\n    const { history } = this.props;\n\n    localStorage.setItem('roles', JSON.stringify(response.data));\n    localStorage.setItem('roles-initiated', true);\n\n    this.setState({\n      isLoggingIn: false\n    });\n\n    history.push('/dds-search');\n  };\n\n  handleGetRolesError = () => {\n    message.error('Unfortunately there was an error, please try again');\n\n    this.setState({\n      isLoggingIn: false\n    });\n  };\n\n  showHidePassword = () => {\n    const { isShowPassword } = this.state;\n    this.setState({ isShowPassword: !isShowPassword });\n    this.passwordInput.current.focus();\n  };\n\n  render() {\n    const { form } = this.props;\n    const { getFieldDecorator } = form;\n    const { isLoggingIn, isShowPassword } = this.state;\n\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <FormItem>\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message: 'Please enter your username!' }]\n          })(\n            <Input\n              ref={this.usernameInput}\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n              autoFocus\n            />\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please enter your password!' }]\n          })(\n            <Input\n              ref={this.passwordInput}\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              suffix={\n                <Icon\n                  type={isShowPassword ? 'eye' : 'eye-invisible'}\n                  title={isShowPassword ? 'Hide Password' : 'Show Password'}\n                  className=\"sh-password\"\n                  onClick={this.showHidePassword}\n                />\n              }\n              type={isShowPassword ? 'text' : 'password'}\n              placeholder=\"Password\"\n            />\n          )}\n        </FormItem>\n        <FormItem>\n          {isLoggingIn && (\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" disabled>\n              <Icon type=\"sync\" className=\"login-spinner-icon\" spin />\n            </Button>\n          )}\n          {!isLoggingIn && (\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n              Login\n            </Button>\n          )}\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  form: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\n\nexport default withRouter(Form.create()(LoginForm));\n","import React from 'react';\nimport LoginForm from '../../components/LoginForm/LoginForm';\n\nimport './LoginPage.scss';\n\nfunction LoginPage() {\n  return (\n    <div className=\"login-page\">\n      <div className=\"brand\" href=\"/\">\n        <div className=\"logo\" />\n        <span className=\"name\">DSM</span>\n      </div>\n      <LoginForm />\n    </div>\n  );\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport './UnauthorizedLayout.scss';\n\nimport LoginPage from '../../pages/LoginPage/LoginPage';\n\nconst UnauthorizedLayout = () => (\n  <div className=\"unauthorized-layout\">\n    {/*\n    Imagine this could be a general layout for all unauthorized pages like\n    the login page, forgot password, email-verified, etc...\n    */}\n    <Switch>\n      <Route path=\"/public/login\" component={LoginPage} />\n      <Redirect to=\"/public/login\" />\n    </Switch>\n  </div>\n);\n\nexport default UnauthorizedLayout;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint jsx-a11y/anchor-is-valid: [0] */\nimport React, { Component } from \"react\";\nimport { withRouter, matchPath, Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Menu } from \"antd\";\n\nimport \"./Nav.scss\";\n\nclass Nav extends Component {\n  state = { selectedMenuItem: \"\", isMobileNavExapnded: false };\n\n  componentDidMount() {\n    const { history } = this.props;\n\n    this.setActiveMenuItem();\n\n    this.historyUnlisten = history.listen((location, action) => {\n      this.setActiveMenuItem();\n    });\n  }\n\n  componentWillUnmount() {\n    this.historyUnlisten();\n  }\n\n  setActiveMenuItem() {\n    const match = matchPath(window.location.pathname, {\n      path: \"/:section\",\n      strict: false,\n    });\n\n    if (match) {\n      this.setState({ selectedMenuItem: match.params.section });\n    }\n  }\n\n  getSelectedClass = (menu) => {\n    const { selectedMenuItem } = this.state;\n    return selectedMenuItem === menu ? \"selected\" : \"\";\n  };\n\n  expandCollapseNav = (e) => {\n    e.preventDefault();\n    const { isMobileNavExapnded } = this.state;\n    this.setState({ isMobileNavExapnded: !isMobileNavExapnded });\n  };\n\n  signout = (e) => {\n    const { history } = this.props;\n\n    e.preventDefault();\n    localStorage.removeItem(\"auth\");\n    localStorage.removeItem(\"roles\");\n    history.push(\"/public/login\");\n  };\n\n  render() {\n    const { selectedMenuItem, isMobileNavExapnded } = this.state;\n    let roles = [];\n\n    if (localStorage.getItem(\"roles\")) {\n      roles = JSON.parse(localStorage.getItem(\"roles\"));\n    }\n\n    return (\n      <>\n        {/* <div className=\"mobile-nav\">\n          <div\n            className={`nav-toggle ${isMobileNavExapnded ? 'expanded' : ''}`}\n            onClick={e => {\n              this.expandCollapseNav(e);\n            }}\n          >\n            <span className=\"nav-toggle-bar\" />\n          </div>\n          <nav\n            className={`nav ${isMobileNavExapnded ? 'expanded' : ''}`}\n            onClick={e => {\n              this.expandCollapseNav(e);\n            }}\n          >\n            <ul>\n              {roles.includes('search') && (\n                <li className={this.getSelectedClass('search')}>\n                  <Link to=\"/search\">Search</Link>\n                </li>\n              )}\n              <li className=\"seperator\">\n                <a href=\"#\" className=\"reportBugLink\">\n                  Report Bug\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"reportNewFeatureLink\">\n                  Report New Feature\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" onClick={e => this.signout(e)}>\n                  Logout\n                </a>\n              </li>\n            </ul>\n          </nav>\n        </div> */}\n\n        <Menu selectedKeys={[selectedMenuItem]} mode=\"horizontal\" theme=\"dark\">\n          {/* {roles.includes('search') && (\n            <Menu.Item key=\"search\">\n              <Link to=\"/search\">Search</Link>\n            </Menu.Item>\n          )} */}\n          <Menu.Item key=\"search\">\n            <Link to=\"/search\">Search</Link>\n          </Menu.Item>\n          {/* <Menu.Item key=\"dsm-editor\">\n            <Link to=\"/dsm-editor\">DSM Editor</Link>\n          </Menu.Item>\n          <Menu.Item key=\"dsm-viewer\">\n            <Link to=\"/dsm-viewer\">DSM Viewer</Link>\n          </Menu.Item> */}\n        </Menu>\n      </>\n    );\n  }\n}\n\nNav.propTypes = {\n  history: PropTypes.object.isRequired,\n};\n\nexport default withRouter(Nav);\n","/* eslint jsx-a11y/anchor-is-valid: [0] */\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Icon, message, Switch } from 'antd';\nimport Script from 'react-load-script';\n\nimport './UserMenu.scss';\n\nclass UserMenu extends Component {\n  state = {\n    isDarkMode: false\n  };\n\n  componentWillMount = () => {\n    const isDarkMode = JSON.parse(localStorage.getItem('dsm-dark-mode'));\n    if (isDarkMode) {\n      document.querySelector('body').className = `${isDarkMode ? 'dark-theme' : 'light-theme'}`;\n      this.setState({ isDarkMode });\n    }\n  };\n\n  signout = e => {\n    const { history } = this.props;\n\n    e.preventDefault();\n    localStorage.removeItem('auth');\n    localStorage.removeItem('roles');\n    history.push('/public/login');\n  };\n\n  handleJiraScriptError = () => {\n    message.error(\n      'Unfortunately there was an error related to the JIRA issue collector - you will not be able to report any issues.'\n    );\n  };\n\n  handleJiraScriptLoad = () => {\n    window.ATL_JQ_PAGE_PROPS = {\n      triggerFunction: showCollectorDialog => {\n        document.querySelectorAll('.reportBugLink').forEach(item => {\n          item.addEventListener('click', e => {\n            window.ATL_JQ_PAGE_PROPS.fieldValues.summary = '[Bug]: ';\n            e.preventDefault();\n            showCollectorDialog();\n          });\n        });\n        document.querySelectorAll('.reportNewFeatureLink').forEach(item => {\n          item.addEventListener('click', e => {\n            window.ATL_JQ_PAGE_PROPS.fieldValues.summary = '[NewFeature]: ';\n            e.preventDefault();\n            showCollectorDialog();\n          });\n        });\n      },\n      fieldValues: {\n        summary: '[Bug]: '\n      }\n    };\n  };\n\n  changeTheme = e => {\n    const { isDarkMode } = this.state;\n    this.setState({ isDarkMode: !isDarkMode }, () => {\n      // eslint-disable-next-line no-shadow\n      const { isDarkMode } = this.state;\n      document.querySelector('body').className = `${isDarkMode ? 'dark-theme' : 'light-theme'}`;\n      localStorage.setItem('dsm-dark-mode', JSON.stringify(isDarkMode));\n    });\n  };\n\n  render() {\n    const jiraScriptUrl =\n      'https://jira.lgi.io/s/d2f11eb2426a5845d2ad6d6592ab1479-T/k0n5ws/76002/23aeed5035eb07e911417ba4d45ad09e/2.0.24/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector.js?locale=en-UK&collectorId=23a3f869';\n    const { isDarkMode } = this.state;\n\n    return (\n      <>\n        <div className=\"user-menu\">\n          <div className=\"theme-switch\">\n            <label>Dark</label>\n            <Switch checked={isDarkMode} onChange={this.changeTheme} />\n          </div>\n          {/* <div className=\"dropdown-menu\">\n            <div className=\"submenu-title\">\n              <Icon type=\"edit\" />\n              <span className=\"text\">Report Issue</span>\n              <div className=\"ant-menu-submenu-popup\">\n                <ul className=\"ant-menu ant-menu-sub\">\n                  <li className=\"ant-menu-item\">\n                    <a className=\"reportBugLink sub-menu-link\" href=\"#\">\n                      <span className=\"text\">Bug</span>\n                    </a>\n                  </li>\n                  <li className=\"ant-menu-item\">\n                    <a className=\"reportNewFeatureLink sub-menu-link\" href=\"#\">\n                      <span className=\"text\">New Feature</span>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div> */}\n          {/* <a className=\"user-menu-item\" href=\"#\" onClick={e => this.signout(e)}>\n            <Icon type=\"lock\" />\n            <span className=\"text\">Sign Out</span>\n          </a> */}\n        </div>\n        {/* <Script\n          url={jiraScriptUrl}\n          onError={this.handleJiraScriptError}\n          onLoad={this.handleJiraScriptLoad}\n        /> */}\n      </>\n    );\n  }\n}\n\nUserMenu.propTypes = {\n  history: PropTypes.object.isRequired\n};\n\nexport default withRouter(UserMenu);\n","import React from \"react\";\nimport { Layout } from \"antd\";\n\nimport Nav from \"./Nav\";\nimport UserMenu from \"../UserMenu/UserMenu\";\n\nimport \"./Header.scss\";\n\nconst { Header } = Layout;\n\nfunction GlobalHeader() {\n  return (\n    <Header className=\"global-header\">\n      <a className=\"brand\" href=\"/\">\n        {/* <div className=\"logo\" /> */}\n        {/* <span className=\"name\">DSM</span> */}\n      </a>\n      <Nav />\n      <UserMenu />\n    </Header>\n  );\n}\n\nexport default GlobalHeader;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-nested-ternary */\nimport React, { Component, Fragment } from 'react';\nimport {\n  Row,\n  Col,\n  message,\n  Modal,\n  Form,\n  Select,\n  Checkbox,\n  Input,\n  Button,\n  Icon,\n  Spin,\n  Switch,\n  Dropdown,\n  Menu\n} from 'antd';\nimport JSONTree from 'react-json-tree';\nimport * as d3 from 'd3';\n\nimport {\n  getDSMWorkspacesRequest,\n  getDSMD3ObjectRequest,\n  runDSMAction\n} from '../../../services/api';\n\nimport './DSMEditor.scss';\n\nconst { Option } = Select;\n\nconst theme = {\n  scheme: 'railscasts',\n  author: 'ryan bates (http://railscasts.com)',\n  base00: '#2b2b2b',\n  base01: '#272935',\n  base02: '#3a4055',\n  base03: '#5a647e',\n  base04: '#d4cfc9',\n  base05: '#e6e1dc',\n  base06: '#f4f1ed',\n  base07: '#f9f7f3',\n  base08: '#da4939',\n  base09: '#cc7833',\n  base0A: '#ffc66d',\n  base0B: '#a5c261',\n  base0C: '#519f50',\n  base0D: '#6d9cbe',\n  base0E: '#b6b3eb',\n  base0F: '#bc9458'\n};\n\nconst svgWidth = window.innerWidth - 40;\nconst svgHeight = window.innerHeight - 120;\nconst nodeWidth = 170;\nconst nodeHeight = 40;\nconst nodeCharactersCount = 22;\nlet dx = nodeWidth + 10; // X disantce between nodes. (Gap). Updated in updates method based on the orientation\nlet dy = nodeHeight + 30; // Y disantce between nodes. (Gap). Updated in updates method based on the orientation\nconst collapseCircleRadius = 10;\nconst EXPAND_SYMBOL = '+';\nconst COLLAPSE_SYMBOL = '-';\nconst metaAttr = '___meta___';\nlet svg;\nlet svgG;\nlet root;\nlet gNode;\nlet gLink;\nlet selectedNode = null;\nlet selectedTarget = null;\nlet tooltip = null;\nlet zoom;\n\nclass DSMEditor extends Component {\n  state = {\n    showModal: false,\n    selectedNodeData: {},\n    nodeDataList: [],\n    dsmSelectData: [],\n    workspaces: [],\n    dsmDomains: [],\n    dsmModels: [],\n    groups: ['dds-admin', 'dds-user', 'dsm-admin'],\n    operations: ['create', 'read', 'update', 'delete'],\n    rolesList: [],\n    dsmFilter: {\n      workspace: undefined,\n      domain: undefined,\n      model: undefined,\n      group: undefined,\n      operation: undefined\n    },\n    showJSONModal: false,\n    isLoading: false,\n    isHorizontal: true,\n    dsmDataD3Model: {},\n    jsonModalData: {}\n  };\n\n  componentDidMount() {\n    this.loadSelectBoxData();\n  }\n\n  loadSelectBoxData = () => {\n    try {\n      getDSMWorkspacesRequest().then(res => {\n        this.setState({\n          workspaces: res.data && res.data.workspaces ? res.data.workspaces : [],\n          dsmSelectData: res.data ? res.data : []\n        });\n      });\n    } catch (error) {\n      message.error('Unfortunately there was an error getting the DSM Workspaces.');\n    }\n  };\n\n  loadDSMD3Object = async (workspace, domain, model) => {\n    try {\n      this.setState({ isLoading: true });\n      // d3.select('#tree-chart')\n      //   .selectAll('*')\n      //   .remove();\n      // d3.select('.node-tooltip').remove();\n      const res = await getDSMD3ObjectRequest(workspace, domain, model);\n      this.setState({ isLoading: false, dsmDataD3Model: res.data }, () => {\n        this.initChart(res.data);\n      });\n    } catch (error) {\n      console.log(error);\n      message.error('Unfortunately there was an error getting the DSM model.');\n    }\n  };\n\n  zoomed = () => {\n    svgG.attr('transform', d3.event.transform);\n  };\n\n  resetZoom = () => {\n    zoom.scaleTo(svg, 1);\n    zoom.translateTo(svg, svgHeight, 0);\n  };\n\n  createNode = () => {\n    let newNode = {\n      [metaAttr]: {\n        key: 'new_node1',\n        enabled: true\n      },\n      name: 'New Node1'\n    };\n\n    // Creates a Node from newNode object using d3.hierarchy(.)\n    newNode = d3.hierarchy(newNode);\n\n    // later added some properties to Node like child,parent,depth\n    newNode.depth = selectedNode.depth + 1;\n    newNode.parent = selectedNode;\n    newNode.id = Date.now();\n\n    const node = d3.select(selectedTarget).node().parentNode;\n    const collapsiblesWrapper = d3.select(node).selectAll('.collapsibles-wrapper');\n    collapsiblesWrapper.select('.text-collapse').text(COLLAPSE_SYMBOL);\n    collapsiblesWrapper.select('.node-collapse').attr('r', collapseCircleRadius);\n\n    // Selected is a node, to which we are adding the new node as a child\n    // If no child array, create an empty array\n    if (!selectedNode.children) {\n      selectedNode.children = [];\n      selectedNode.data.children = [];\n    }\n\n    // Push it to parent.children array\n    selectedNode.children.push(newNode);\n    selectedNode._children = selectedNode.children;\n    selectedNode.data.children.push(newNode.data);\n\n    // Update tree\n    this.update(selectedNode);\n  };\n\n  removeNode = () => {\n    if (selectedNode.parent) {\n      const children = selectedNode.parent.children.filter(child => child.id !== selectedNode.id);\n      selectedNode.parent.children = children.length ? children : null;\n      selectedNode.parent._children = children.length ? children : null;\n\n      if (!children.length) {\n        const node = d3.selectAll(`#node-group-${selectedNode.parent.id}`).node().parentNode;\n        const collapsiblesWrapper = d3.select(node).selectAll('.collapsibles-wrapper');\n        collapsiblesWrapper.select('.text-collapse').text('');\n        collapsiblesWrapper.select('.node-collapse').attr('r', 0);\n      }\n      this.update(selectedNode.parent);\n    } else {\n      // eslint-disable-next-line no-alert\n      alert('root node should not be deleted.');\n    }\n  };\n\n  editNode = () => {\n    this.nodeClickHandler(selectedNode);\n  };\n\n  contextMenu = (data, index) => {\n    selectedNode = data;\n    selectedTarget = d3.event.currentTarget;\n    this.setState({ selectedNodeData: data.data });\n    let x;\n    let y;\n    if (d3.event.pageX || d3.event.pageY) {\n      x = d3.event.pageX;\n      y = d3.event.pageY;\n    } else if (d3.event.clientX || d3.event.clientY) {\n      x = d3.event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n      y = d3.event.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n    }\n    y -= 40;\n\n    d3.select('#context_menu')\n      .style('left', `${x}px`)\n      .style('top', `${y}px`)\n      .classed('show', true);\n    d3.event.preventDefault();\n  };\n\n  hideContextMenu = () => {\n    d3.select('#context_menu')\n      .style('left', '-1000px')\n      .style('top', '-1000px')\n      .classed('show', false);\n  };\n\n  toggleChildrenClick = d => {\n    const target = d3.event.currentTarget;\n    const node = d3.select(target).node().parentNode;\n    d3.select(node)\n      .select('text.text-collapse')\n      .text(dv => {\n        dv.collapseText =\n          dv.collapseText === EXPAND_SYMBOL ? COLLAPSE_SYMBOL : dv.children ? EXPAND_SYMBOL : null;\n        return dv.collapseText;\n      });\n    d.children = d.children ? null : d._children;\n    this.update(d);\n  };\n\n  nodeClickHandler = d => {\n    this.hideContextMenu();\n    selectedNode = d;\n    const selectedNodeData = d.data;\n    const list = Object.keys(selectedNodeData)\n      .filter(key => key !== 'children' && key !== metaAttr)\n      .map(key => {\n        const str =\n          typeof selectedNodeData[key] === 'object'\n            ? JSON.stringify(selectedNodeData[key])\n            : selectedNodeData[key];\n        return {\n          key,\n          value: str,\n          type:\n            typeof selectedNodeData[key] === 'object'\n              ? Array.isArray(selectedNodeData[key])\n                ? 'array'\n                : 'object'\n              : typeof selectedNodeData[key]\n        };\n      });\n    this.props.form.resetFields();\n    this.setState({\n      selectedNodeData: d.data,\n      nodeDataList: list,\n      showModal: true,\n      rolesList: selectedNodeData.rbac ? selectedNodeData.rbac : []\n    });\n  };\n\n  equalToEventTarget = () => this === d3.event.target;\n\n  setCollapsibleSymbolProperty = d => {\n    d.collapseText =\n      d.children && d._children ? COLLAPSE_SYMBOL : d._children ? EXPAND_SYMBOL : null;\n  };\n\n  nodeMouseover = () => {\n    selectedTarget = d3.event.currentTarget;\n    tooltip.classed('show', true).classed('hide', false);\n  };\n\n  nodeMousemove = d => {\n    const x = d3.event.clientX;\n    const y = d3.event.clientY - nodeHeight * 2 - 20;\n    const { data } = d;\n    tooltip\n      .html(\n        `<span class=\"title\">${data.name}</span><hr/><span class=\"desc\">${\n          data.description ? data.description : ''\n        }</span>`\n      )\n      .style('left', `${x}px`)\n      .style('top', `${y}px`);\n  };\n\n  nodeMouseout = () => {\n    tooltip.classed('show', false).classed('hide', true);\n  };\n\n  initChart = DSMData => {\n    const { isHorizontal } = this.state;\n    d3.select('#tree-chart')\n      .selectAll('*')\n      .remove();\n    d3.select('.node-tooltip').remove();\n\n    const data = DSMData;\n\n    root = d3.hierarchy(data);\n    root.x0 = dy / 2;\n    root.y0 = 0;\n    root.descendants().forEach((d, i) => {\n      d.id = i;\n      d._children = d.children;\n      if (d.depth && d.data.name.length !== 7) d.children = null;\n    });\n\n    // Redraw for zoom\n    zoom = d3\n      .zoom()\n      .scaleExtent([0.05, 5])\n      .on('zoom', this.zoomed);\n\n    tooltip = d3\n      .select('#tree-chart-wrapper')\n      .append('div')\n      .attr('class', 'node-tooltip')\n      .classed('hide', true);\n\n    svg = d3\n      .select('#tree-chart')\n      .attr('viewBox', [0, 0, svgWidth, svgHeight])\n      .attr('width', svgWidth)\n      .attr('height', svgHeight)\n      .call(zoom);\n    svgG = svg.append('g');\n    zoom.translateTo(svg, isHorizontal ? svgHeight : 0, 0);\n\n    gLink = svgG.append('g').classed('link', true);\n\n    gNode = svgG\n      .append('g')\n      .attr('cursor', 'pointer')\n      .attr('pointer-events', 'all');\n\n    // eslint-disable-next-line func-names\n    d3.select('body').on('click', () => {\n      this.hideContextMenu();\n    });\n\n    this.update(root);\n  };\n\n  update = source => {\n    const { isHorizontal } = this.state;\n    let diagonal = null;\n    if (isHorizontal) {\n      diagonal = d3\n        .linkHorizontal()\n        .source(d => ({\n          x: d.source.x,\n          y: d.source.y + nodeWidth\n        }))\n        .x(d => d.y)\n        .y(d => d.x);\n    } else {\n      diagonal = d3\n        .linkVertical()\n        .source(d => ({\n          x: d.source.x,\n          y: d.source.y + nodeHeight / 2\n        }))\n        .x(d => d.x + nodeWidth / 2)\n        .y(d => d.y);\n    }\n\n    dx = nodeWidth + 10; // X disantce between nodes. (Gap)\n    dy = nodeHeight + 30; // Y disantce between nodes. (Gap)\n    if (isHorizontal) {\n      dx = nodeHeight + 10;\n      dy = nodeWidth + 30;\n    }\n    const tree = d3.tree().nodeSize([dx, dy]);\n\n    const duration = d3.event && d3.event.altKey ? 1000 : 500;\n    const nodes = root.descendants().reverse();\n    const links = root.links();\n\n    // Compute the new tree layout.\n    tree(root);\n\n    let left = root;\n    let right = root;\n    root.eachBefore(node => {\n      if (node.x < left.x) left = node;\n      if (node.x > right.x) right = node;\n    });\n\n    const transition = svgG\n      .transition()\n      .duration(duration)\n      .tween('resize', window.ResizeObserver ? null : () => () => svgG.dispatch('toggle'));\n\n    // Update the nodes…\n    const node = gNode.selectAll('g.node').data(nodes, d => d.id);\n\n    // Enter any new nodes at the parent's previous position.\n    let nodeTransform = `translate(${source.x0},${source.x0})`;\n    if (isHorizontal) {\n      nodeTransform = `translate(${source.y0},${source.x0})`;\n    }\n    const nodeEnter = node\n      .enter()\n      .append('g')\n      .classed('node', true)\n      .classed('disabled', d => {\n        const meta = d.data.___meta___;\n        if (typeof meta.enabled === 'boolean') {\n          return !meta.enabled;\n        }\n        return false;\n      })\n      // .attr('style', d => {\n      //   const meta = d.data.___meta___;\n      //   return `\n      //     fill: ${meta.bgColor ? meta.bgColor : ''}\n      //   `;\n      // })\n      .attr('transform', d => nodeTransform);\n\n    const nodeGroup = nodeEnter\n      .append('g')\n      .attr('class', 'node-group')\n      .attr('id', d => `node-group-${d.id}`);\n\n    nodeGroup\n      .append('rect')\n      .attr('width', nodeWidth)\n      .attr('height', nodeHeight)\n      .attr('rx', 3)\n      .attr('y', -(nodeHeight / 2));\n\n    nodeGroup\n      .append('text')\n      .text(d => {\n        if (d.data.name.length >= nodeCharactersCount) {\n          return `${d.data.name.substr(0, nodeCharactersCount - 1)}...`;\n        }\n        return d.data.name;\n      })\n      .attr('x', 10)\n      .attr('y', 3);\n\n    nodeGroup.on('mouseover', this.nodeMouseover);\n    nodeGroup.on('mousemove', this.nodeMousemove);\n    nodeGroup.on('mouseout', this.nodeMouseout);\n    nodeGroup.on('click', this.nodeClickHandler);\n    nodeGroup.on('contextmenu', this.contextMenu);\n\n    const collapsiblesWrapper = nodeEnter.append('g').attr('class', 'collapsibles-wrapper');\n\n    collapsiblesWrapper\n      .append('circle')\n      .attr('class', 'node-collapse')\n      .attr('cx', isHorizontal ? nodeWidth : nodeWidth / 2)\n      .attr('cy', isHorizontal ? 0 : nodeHeight / 2)\n      .attr('r', d => {\n        if (d.children || d._children) return collapseCircleRadius;\n        return 0;\n      })\n      .attr('', this.setCollapsibleSymbolProperty);\n    const textC = collapseCircleRadius / 2;\n    collapsiblesWrapper\n      .append('text')\n      .attr('class', 'text-collapse')\n      .attr('x', isHorizontal ? nodeWidth : nodeWidth / 2)\n      .attr('y', isHorizontal ? textC : nodeHeight / 2 + textC)\n      .attr('text-anchor', 'middle')\n      .text(d => d.collapseText);\n\n    collapsiblesWrapper.on('click', this.toggleChildrenClick);\n\n    // Transition nodes to their new position.\n    node\n      .merge(nodeEnter)\n      .transition(transition)\n      .attr('transform', d => `translate(${isHorizontal ? d.y : d.x},${isHorizontal ? d.x : d.y})`)\n      .attr('fill-opacity', 1)\n      .attr('stroke-opacity', 1);\n\n    // Transition exiting nodes to the parent's new position.\n    node\n      .exit()\n      .transition(transition)\n      .remove()\n      .attr(\n        'transform',\n        d =>\n          `translate(${isHorizontal ? source.y : source.x},${isHorizontal ? source.x : source.y})`\n      )\n      .attr('fill-opacity', 0)\n      .attr('stroke-opacity', 0);\n\n    // Update the links…\n    const link = gLink.selectAll('path').data(links, d => d.target.id);\n\n    // Enter any new links at the parent's previous position.\n    const linkEnter = link\n      .enter()\n      .append('path')\n      .attr('d', d => {\n        const o = {\n          x: source.x0,\n          y: source.y0\n        };\n        return diagonal({\n          source: o,\n          target: o\n        });\n      });\n\n    // Transition links to their new position.\n    link\n      .merge(linkEnter)\n      .transition(transition)\n      .attr('d', diagonal);\n\n    // Transition exiting nodes to the parent's new position.\n    link\n      .exit()\n      .transition(transition)\n      .remove()\n      .attr('d', d => {\n        const o = {\n          x: source.x,\n          y: source.y\n        };\n        return diagonal({\n          source: o,\n          target: o\n        });\n      });\n\n    // Stash the old positions for transition.\n    root.eachBefore(d => {\n      d.x0 = d.x;\n      d.y0 = d.y;\n    });\n  };\n\n  handleCancelModal = () => {\n    this.setState({ showModal: false });\n  };\n\n  isValidJSON = text => {\n    try {\n      JSON.parse(text);\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        try {\n          const newData = {\n            [metaAttr]: selectedNode.data[metaAttr] ? selectedNode.data[metaAttr] : { key: '' }\n          };\n          let isError = false;\n          values.nodeDataList.forEach(data => {\n            if (data.type === 'array' || data.type === 'object') {\n              if (!this.isValidJSON(data.value)) {\n                message.error(`Invalid object/array at '${data.key}' field`);\n                isError = true;\n                return;\n              }\n              newData[data.key] = JSON.parse(data.value);\n            } else {\n              newData[data.key] = data.value;\n            }\n          });\n          newData[metaAttr].key = newData.name.toLowerCase().replace(/ /g, '_');\n          if (values.rolesList) {\n            newData.rbac = values.rolesList;\n          }\n          if (isError) return;\n          selectedNode.data = { ...selectedNode.data, ...newData };\n          const nodeGroupd = d3.select(`#node-group-${selectedNode.id}`);\n          nodeGroupd.select('text').text(newData.name);\n          message.info('Node updated successfully.');\n          this.setState({ showModal: false });\n        } catch (error) {\n          message.error(error.message);\n        }\n      } else {\n        message.error(err);\n      }\n    });\n  };\n\n  addKey = (nodeDataList, index) => {\n    nodeDataList.push({\n      key: '',\n      value: '',\n      type: 'string'\n    });\n    this.setState({ nodeDataList });\n  };\n\n  deleteKey = (nodeDataList, index) => {\n    nodeDataList.splice(index, 1);\n    this.setState({ nodeDataList });\n  };\n\n  addRole = rolesList => {\n    rolesList.push({\n      group: undefined,\n      create: false,\n      read: false,\n      update: false,\n      delete: false\n    });\n    this.setState({ rolesList });\n  };\n\n  deleteRole = (rolesList, index) => {\n    rolesList.splice(index, 1);\n    this.setState({ rolesList });\n  };\n\n  generateDataModel = () => {\n    this.setState({ showJSONModal: true, jsonModalData: root.data });\n  };\n\n  handleCancelJsonModal = () => {\n    this.setState({ showJSONModal: false });\n  };\n\n  onDsmWorkspaceChange = workspace => {\n    const { dsmSelectData, dsmFilter } = this.state;\n    this.setState({\n      dsmDomains: dsmSelectData.domains[workspace],\n      dsmModels: [],\n      dsmFilter: {\n        ...dsmFilter,\n        workspace,\n        domain: undefined,\n        model: undefined\n      }\n    });\n  };\n\n  onDsmDomainChange = domain => {\n    const { dsmSelectData, dsmFilter } = this.state;\n    this.setState({\n      dsmModels: dsmSelectData.models[dsmFilter.workspace][domain],\n      dsmFilter: {\n        ...dsmFilter,\n        domain,\n        model: undefined\n      }\n    });\n  };\n\n  onDsmModelChange = () => {\n    const dsmFilter = this.props.form.getFieldValue('dsmFilter');\n    this.setState({ dsmFilter });\n    if (dsmFilter.workspace && dsmFilter.domain && dsmFilter.model) {\n      this.loadDSMD3Object(dsmFilter.workspace, dsmFilter.domain, dsmFilter.model);\n    } else {\n      message.error('Worspace / Domain / Model should not be empty.');\n    }\n  };\n\n  onChangeOrientation = e => {\n    const { isHorizontal, dsmDataD3Model } = this.state;\n    this.setState({ isHorizontal: !isHorizontal }, () => {\n      this.initChart(dsmDataD3Model);\n    });\n  };\n\n  handleActionMenuClick = async e => {\n    const { workspace, domain, model } = this.state.dsmFilter;\n    if (!workspace || !domain || !model) {\n      message.info('Please choose the DSM model to run the action.');\n      return;\n    }\n    try {\n      this.setState({ isLoading: true });\n      const res = await runDSMAction(workspace, domain, model, e.key);\n      message.success('Action completed successfully.');\n    } catch (error) {\n      this.setState({ isLoading: false });\n      message.error('Unfortunately there was an error running the action.');\n    }\n  };\n\n  handleDownloadClick = async e => {\n    const { workspace, domain, model } = this.state.dsmFilter;\n    if (!workspace || !domain || !model) {\n      message.info('Please choose the DSM model to download the model.');\n      return;\n    }\n    try {\n      this.setState({ isLoading: true });\n      const res = await runDSMAction(workspace, domain, model, 'download');\n      message.success('DSM model downloaded successfully.');\n    } catch (error) {\n      this.setState({ isLoading: false });\n      message.error('Unfortunately there was an error downloading the model.');\n    }\n  };\n\n  render() {\n    const {\n      showModal,\n      selectedNodeData,\n      nodeDataList,\n      showJSONModal,\n      rolesList,\n      jsonModalData,\n      dsmModels,\n      dsmDomains,\n      workspaces,\n      groups,\n      operations,\n      dsmFilter,\n      isLoading,\n      isHorizontal\n    } = this.state;\n    const { getFieldDecorator } = this.props.form;\n\n    const actionMenu = (\n      <Menu onClick={this.handleActionMenuClick}>\n        <Menu.Item key=\"run-detail\">Run Details</Menu.Item>\n        <Menu.Item key=\"run-list\">Run List</Menu.Item>\n        <Menu.Item key=\"run-node\">Run Node</Menu.Item>\n      </Menu>\n    );\n\n    return (\n      <Fragment>\n        {isLoading && (\n          <div className=\"loader\">\n            <Spin />\n          </div>\n        )}\n        <Form onSubmit={this.handleSubmit} className=\"dms-filter-form\">\n          <Row gutter={12}>\n            <Col span={4}>\n              <h4 className=\"select-label\">Wrokspace</h4>\n              <Form.Item>\n                {getFieldDecorator(`dsmFilter.workspace`, {\n                  initialValue: dsmFilter.workspace\n                })(\n                  <Select\n                    placeholder=\"Select Workspace\"\n                    className=\"data-model-select\"\n                    onSelect={this.onDsmWorkspaceChange}\n                  >\n                    {workspaces.map(ws => (\n                      <Option value={ws} key={ws}>\n                        {ws}\n                      </Option>\n                    ))}\n                  </Select>\n                )}\n              </Form.Item>\n            </Col>\n            <Col span={4}>\n              <h4 className=\"select-label\">Domain</h4>\n              <Form.Item>\n                {getFieldDecorator(`dsmFilter.domain`, {\n                  initialValue: dsmFilter.domain\n                })(\n                  <Select\n                    placeholder=\"Select Domain\"\n                    className=\"data-model-select\"\n                    onSelect={this.onDsmDomainChange}\n                  >\n                    {dsmDomains.map(item => (\n                      <Option value={item} key={item}>\n                        {item}\n                      </Option>\n                    ))}\n                  </Select>\n                )}\n              </Form.Item>\n            </Col>\n            <Col span={6}>\n              <h4 className=\"select-label\">DSM Model</h4>\n              <Form.Item>\n                {getFieldDecorator(`dsmFilter.model`, {\n                  initialValue: dsmFilter.model\n                })(\n                  <Select\n                    showSearch\n                    placeholder=\"Select DSM Model\"\n                    className=\"data-model-select\"\n                    onSelect={this.onDsmModelChange}\n                  >\n                    {dsmModels.map(item => (\n                      <Option value={item} key={item}>\n                        {item}\n                      </Option>\n                    ))}\n                  </Select>\n                )}\n              </Form.Item>\n            </Col>\n            <Col span={2} className=\"btn-wrapper\">\n              <Button\n                type=\"primary\"\n                size=\"default\"\n                onClick={this.onDsmModelChange}\n                disabled={!dsmFilter.model}\n              >\n                Load\n              </Button>\n            </Col>\n            <Col span={4} className=\"btn-wrapper\">\n              <Dropdown overlay={actionMenu} disabled={!dsmFilter.model}>\n                <Button type=\"primary\" size=\"default\">\n                  Actions\n                  <Icon type=\"down\" />\n                </Button>\n              </Dropdown>\n              <Button\n                type=\"primary\"\n                size=\"default\"\n                disabled={!dsmFilter.model}\n                onClick={this.handleDownloadClick}\n              >\n                Download\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n        <Row gutter={12} className=\"selected-wrapper\">\n          <Col span={4}>\n            <h5>Selected Workspace</h5>\n            <h3>{dsmFilter.workspace}</h3>\n          </Col>\n          <Col span={4}>\n            <h5>Selected Domain</h5>\n            <h3>{dsmFilter.domain}</h3>\n          </Col>\n          <Col span={6}>\n            <h5>Selected DSM Model</h5>\n            <h3>{dsmFilter.model}</h3>\n          </Col>\n\n          <Col span={4} className=\"legend\">\n            <div className=\"allowed\">\n              <span className=\"icon\" />\n              Allowed\n            </div>\n            <div className=\"not-allowed\">\n              <span className=\"icon\" />\n              Not Allowed\n            </div>\n          </Col>\n          <Col span={4} className=\"legend\">\n            <h5>Horizontal Orientation</h5>\n            <Switch checked={isHorizontal} onChange={this.onChangeOrientation} />\n          </Col>\n        </Row>\n        <div id=\"context_menu\" className=\"d3-context-menu\">\n          <ul>\n            <li onClick={this.createNode}>Create Child</li>\n            <li onClick={this.removeNode}>Delete</li>\n            <li onClick={this.editNode}>Edit</li>\n          </ul>\n        </div>\n        <Modal\n          visible={showModal}\n          title={selectedNodeData.name}\n          onCancel={this.handleCancelModal}\n          maskClosable={false}\n          keyboard={false}\n          className=\"json-modal dsm-edit-modal\"\n          footer={[\n            <Button key=\"back\" type=\"primary\" onClick={this.handleCancelModal}>\n              Cancel\n            </Button>,\n            <Button key=\"submit\" type=\"primary\" onClick={this.handleSubmit}>\n              Update\n            </Button>\n          ]}\n        >\n          <Form onSubmit={this.handleSubmit}>\n            <h3>Attributes/Fields</h3>\n            {nodeDataList.map((data, index) => (\n              <Row gutter={12} key={`${data.key}-${index}`}>\n                <Col span={6}>\n                  <Form.Item>\n                    {getFieldDecorator(`nodeDataList[${index}].key`, {\n                      initialValue: data.key\n                    })(\n                      <Input\n                        placeholder=\"Key\"\n                        maxLength={512}\n                        disabled={data.key === 'name' || data.key === metaAttr}\n                      />\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  <Form.Item>\n                    {getFieldDecorator(`nodeDataList[${index}].type`, {\n                      initialValue: data.type\n                    })(\n                      <Select placeholder=\"Type\" disabled={data.key === metaAttr}>\n                        <Option value=\"string\" key=\"string\">\n                          String\n                        </Option>\n                        <Option value=\"array\" key=\"array\">\n                          Array\n                        </Option>\n                        <Option value=\"object\" key=\"object\">\n                          Object\n                        </Option>\n                        <Option value=\"boolean\" key=\"boolean\">\n                          Boolean\n                        </Option>\n                      </Select>\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={11}>\n                  <Form.Item>\n                    {getFieldDecorator(`nodeDataList[${index}].value`, {\n                      initialValue: data.value\n                    })(<Input placeholder=\"Value\" disabled={data.key === metaAttr} />)}\n                  </Form.Item>\n                </Col>\n                <Col span={4}>\n                  <Form.Item>\n                    {data.key !== 'name' && data.key !== metaAttr && (\n                      <Button\n                        className=\"add-delete-btn\"\n                        onClick={() => {\n                          this.deleteKey(nodeDataList, index);\n                        }}\n                      >\n                        <Icon type=\"delete\" />\n                      </Button>\n                    )}\n                    {nodeDataList.length === index + 1 && (\n                      <Button\n                        className=\"add-delete-btn\"\n                        onClick={() => {\n                          this.addKey(nodeDataList, index);\n                        }}\n                      >\n                        <Icon type=\"plus\" />\n                      </Button>\n                    )}\n                  </Form.Item>\n                </Col>\n              </Row>\n            ))}\n            <h3>Role based access control (RBAC)</h3>\n            {rolesList.map((roles, index) => (\n              <Row gutter={10} key={`${roles.group}-${index}`}>\n                <Col span={6}>\n                  <Form.Item>\n                    {getFieldDecorator(`rolesList[${index}].group`, {\n                      initialValue: roles.group,\n                      rules: [{ required: true, message: 'Please choose the UIM group!' }]\n                    })(\n                      <Select placeholder=\"UIM Group\">\n                        {groups.map((group, i) => (\n                          <Option value={group} key={`${i} - ${Date.now()}`}>\n                            {group}\n                          </Option>\n                        ))}\n                      </Select>\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  <Form.Item colon={false}>\n                    {getFieldDecorator(`rolesList[${index}].create`, {\n                      valuePropName: 'checked',\n                      initialValue: roles.create\n                    })(<Checkbox>Create</Checkbox>)}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  <Form.Item colon={false}>\n                    {getFieldDecorator(`rolesList[${index}].read`, {\n                      valuePropName: 'checked',\n                      initialValue: roles.read\n                    })(<Checkbox>Read</Checkbox>)}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  <Form.Item colon={false}>\n                    {getFieldDecorator(`rolesList[${index}].update`, {\n                      valuePropName: 'checked',\n                      initialValue: roles.update\n                    })(<Checkbox>Update</Checkbox>)}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  <Form.Item colon={false}>\n                    {getFieldDecorator(`rolesList[${index}].delete`, {\n                      valuePropName: 'checked',\n                      initialValue: roles.delete\n                    })(<Checkbox>Delete</Checkbox>)}\n                  </Form.Item>\n                </Col>\n                <Col span={4}>\n                  <Form.Item>\n                    {index > 0 && (\n                      <Button\n                        className=\"add-delete-btn\"\n                        onClick={() => {\n                          this.deleteRole(rolesList, index);\n                        }}\n                      >\n                        <Icon type=\"delete\" />\n                      </Button>\n                    )}\n                    {index + 1 === rolesList.length && (\n                      <Button\n                        className=\"add-delete-btn\"\n                        onClick={() => {\n                          this.addRole(rolesList);\n                        }}\n                      >\n                        <Icon type=\"plus\" />\n                      </Button>\n                    )}\n                  </Form.Item>\n                </Col>\n              </Row>\n            ))}\n            {rolesList.length === 0 && (\n              <Button\n                className=\"add-delete-btn\"\n                onClick={() => {\n                  this.addRole(rolesList);\n                }}\n              >\n                <Icon type=\"plus\" />\n                Add UIM Group\n              </Button>\n            )}\n          </Form>\n        </Modal>\n        <Modal\n          visible={showJSONModal}\n          onCancel={this.handleCancelJsonModal}\n          maskClosable={false}\n          keyboard={false}\n          className=\"json-modal json-preview-modal\"\n        >\n          <JSONTree data={jsonModalData} theme={theme} invertTheme hideRoot />\n        </Modal>\n        <div id=\"tree-chart-wrapper\">\n          <svg id=\"tree-chart\" />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst WrappedDSMEditor = Form.create({ name: 'DSMEditor' })(DSMEditor);\n\nexport default WrappedDSMEditor;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable no-param-reassign */\nimport React, { Component } from 'react';\nimport { Table } from 'antd';\n// import { Resizable } from 'react-resizable';\nimport PropTypes from 'prop-types';\n\nimport './AntDataTable.scss';\n\nclass AntDataTable extends Component {\n  // ResizeableTitle = (props) => {\n  //   const { onResize, width, ...restProps } = props;\n  //   if (!width) {\n  //     return <th {...restProps} />;\n  //   }\n\n  //   return (\n  //     <Resizable\n  //       width={width}\n  //       height={0}\n  //       handle={\n  //         <span\n  //           className=\"react-resizable-handle\"\n  //           onClick={(e) => {\n  //             e.stopPropagation();\n  //           }}\n  //         />\n  //       }\n  //       onResize={onResize}\n  //       draggableOpts={{ enableUserSelectHack: false }}\n  //     >\n  //       <th {...restProps} />\n  //     </Resizable>\n  //   );\n  // };\n\n  // components = {\n  //   header: {\n  //     cell: this.ResizeableTitle,\n  //   },\n  // };\n\n  componentDidMount = () => {};\n\n  handleResize = index => (e, { size }) => {\n    this.setState(({ columns }) => {\n      const nextColumns = [...columns];\n      nextColumns[index] = {\n        ...nextColumns[index],\n        width: size.width\n      };\n      return { columns: nextColumns };\n    });\n  };\n\n  hostNameClick = () => {\n    console.log('hostNameClick...');\n  };\n\n  handleTableChange = (pagination, filters, sorter) => {\n    const { onTableChange } = this.props;\n    onTableChange(pagination, filters, sorter);\n  };\n\n  render() {\n    const { rowData, colDefs, totalItems, tableHeight, page, isLoading } = this.props;\n\n    return (\n      <div className=\"data-table-wrapper\">\n        <Table\n          className=\"data-table\"\n          components={this.components}\n          dataSource={rowData}\n          columns={colDefs}\n          loading={isLoading}\n          onChange={this.handleTableChange}\n          pagination={{\n            hideOnSinglePage: true,\n            defaultPageSize: 20,\n            pageSizeOptions: ['10', '20', '50', '100'],\n            total: totalItems,\n            current: page,\n            showSizeChanger: true\n          }}\n          scroll={{\n            x: false, // If specify the width, the header and body will be scrollable\n            y: tableHeight,\n            scrollToFirstRowOnChange: true\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nAntDataTable.defaultProps = {\n  isLoading: true,\n  totalItems: 0,\n  page: 1,\n  tableHeight: 500\n};\n\nAntDataTable.propTypes = {\n  colDefs: PropTypes.array.isRequired,\n  rowData: PropTypes.array.isRequired,\n  totalItems: PropTypes.number,\n  page: PropTypes.number,\n  tableHeight: PropTypes.number,\n  isLoading: PropTypes.bool,\n  onTableChange: PropTypes.func.isRequired\n};\n\nexport default AntDataTable;\n","/* eslint-disable prefer-destructuring */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable no-param-reassign */\n/* eslint no-underscore-dangle: [1, { \"allow\": [\"__env\"] }] */\nimport React, { Component, Fragment } from \"react\";\nimport { Input, Icon, Select, AutoComplete, Button } from \"antd\";\nimport { debounce } from \"lodash\";\nimport axios from \"axios\";\n\nimport {\n  getDSMSearchRequest,\n  getDSMTypeaheadRequest,\n  getDSMFilterTypeaheadRequest,\n} from \"../../../services/api\";\nimport AntDataTable from \"../DSMViewer/DSMTables/AntDataTable\";\n\nimport \"./DSMSearchInput.scss\";\n\nconst { Option } = Select;\nconst { OptGroup } = AutoComplete;\n\nclass SearchComponent extends Component {\n  signal = axios.CancelToken.source();\n\n  defaultColumnDefs = {\n    suppressMenu: true,\n  };\n\n  searchFilterOptions = {\n    IPv4: `&contains-value_type=ipv4_address`,\n    Hostname: `&contains-value_type=hostname`,\n  };\n\n  state = {\n    tableHeight: 500,\n    serachOptions: [\n      { Title: \"Search\", value: \"search\" },\n      { Title: \"IPv4\", value: \"IPv4\" },\n      { Title: \"Hostname\", value: \"Hostname\" },\n      { Title: \"Regex\", value: \"regex\" },\n      { Title: \"Contains\", value: \"contains\" },\n      { Title: \"Starts with\", value: \"startswith\" },\n      { Title: \"Match\", value: \"match\" },\n    ],\n    filterOptions: [\n      { Title: \"Contains\", value: \"contains\" },\n      { Title: \"Starts with\", value: \"startswith\" },\n      { Title: \"Match\", value: \"match\" },\n      { Title: \"Not Contains\", value: \"!contains\" },\n      { Title: \"Not Starts with\", value: \"!startswith\" },\n      { Title: \"Not Match\", value: \"!match\" },\n      { Title: \"Any Contains\", value: \"any_contains\" },\n      { Title: \"Any Starts with\", value: \"any_startswith\" },\n      { Title: \"Any Match\", value: \"any_match\" },\n    ],\n    serachOption: \"search\",\n    searchResults: [],\n    searchColumns: [],\n    searchView: \"table\",\n    showResultsTable: false,\n    isLoading: false,\n    searchValue: \"\",\n    autoCompleteDataSource: {\n      suggessions: [],\n    },\n    totalItems: 0,\n    page: 1,\n    pageSize: 20,\n    sortingKey: \"\",\n    sortOrder: \"\",\n    filters: {},\n    reqTime: 0,\n  };\n\n  tableWrapperRef = React.createRef();\n\n  debouncedOnChange = debounce(() => {\n    this.setState({\n      page: 1,\n      sortingKey: \"\",\n      sortOrder: \"\",\n      // filters: {}\n    });\n\n    this.getSearchResults();\n  }, 100);\n\n  componentWillMount() {\n    window.addEventListener(\"resize\", this.handleWindowResize);\n    this.setState({\n      // searchColumns: this.createColDefs(),\n      autoCompleteDataSource: {\n        suggessions: [],\n      },\n    });\n  }\n\n  componentWillUnmount() {\n    this.signal.cancel(\"Canceled\");\n    window.removeEventListener(\"resize\", this.handleWindowResize);\n  }\n\n  onAutoCompleteChange = (e) => {\n    // this.setState({\n    //   autoCompleteDataSource: {\n    //     suggessions: e.length ? ['loading'] : []\n    //   }\n    // });\n    this.setState({ searchValue: e || \"\" }, () => {\n      this.debouncedOnChange();\n    });\n\n    if (!e) {\n      this.setState({\n        autoCompleteDataSource: {\n          suggessions: [],\n        },\n      });\n      return;\n    }\n    getDSMTypeaheadRequest(e || \"\", \"value\", 1)\n      .then((response) => {\n        this.setState({\n          autoCompleteDataSource: {\n            suggessions: response.data ? response.data : [],\n          },\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          autoCompleteDataSource: {\n            suggessions: [],\n          },\n        });\n      });\n  };\n\n  handleTableChange = (pagination, filters, sorter) => {\n    this.setState(\n      {\n        page: pagination.current,\n        pageSize: pagination.pageSize,\n        sortingKey: sorter.columnKey,\n        sortOrder: sorter.order,\n        filters,\n      },\n      () => {\n        this.getSearchResults();\n      }\n    );\n  };\n\n  getSearchResults = async () => {\n    const {\n      searchValue,\n      page,\n      pageSize,\n      sortingKey,\n      sortOrder,\n      filters,\n    } = this.state;\n    let { serachOption } = this.state;\n    this.handleWindowResize();\n\n    const currentSession = {};\n    this.lastSession = currentSession;\n    // if (!searchValue) {\n    //   this.onSearchEmpty();\n    //   return;\n    // }\n    this.setState({\n      showResultsTable: true,\n      isLoading: true,\n    });\n    try {\n      // Parse sorting string.\n      let sort = \"\";\n      if (sortOrder === \"ascend\") {\n        sort = `&sortby=${sortingKey}`;\n      }\n      if (sortOrder === \"descend\") {\n        sort = `&sortby=-${sortingKey}`;\n      }\n\n      // Parse Filter string\n      let filterStr = [];\n      if (filters) {\n        filterStr = Object.keys(filters).map((key) => {\n          const value = filters[key].value ? filters[key].value : \"\";\n          const option = filters[key].option ? filters[key].option : \"contains\";\n          return `&${option}-${key}=${value}`;\n        });\n      }\n\n      if (serachOption === \"IPv4\" || serachOption === \"Hostname\") {\n        filterStr.unshift(this.searchFilterOptions[serachOption]);\n        serachOption = \"search\";\n      }\n\n      const filter = filterStr.join(\"\");\n      const res = await getDSMSearchRequest(\n        searchValue,\n        serachOption,\n        {\n          page,\n          pageSize,\n          sorting: sortingKey ? sort : \"\",\n          filtering: filter,\n        },\n        {\n          cancelToken: this.signal.token,\n        }\n      );\n\n      if (this.lastSession !== currentSession) return;\n      this.onGetSearchSuccess(res);\n    } catch (e) {\n      this.onSearchEmpty();\n    }\n  };\n\n  onGetSearchSuccess = (res) => {\n    this.parseTableData(res.data ? res.data : []);\n    this.setState({\n      isLoading: false,\n      totalItems: res.headers[\"total-items\"] ? res.headers[\"total-items\"] : 100,\n      reqTime: res.headers[\"query-duration\"]\n        ? res.headers[\"query-duration\"]\n        : \"50ms\",\n    });\n  };\n\n  clickApplyFilters = () => {\n    this.getSearchResults();\n  };\n\n  clickResetFilters = () => {\n    const { filters } = this.state;\n    const filterClear = {};\n    Object.keys(filters).map((key) => {\n      filterClear[key] = {\n        ...filters[key],\n        value: \"\",\n      };\n      return key;\n    });\n    this.setState({ filters: filterClear }, () => {\n      this.getSearchResults();\n    });\n  };\n\n  onColumnFilterKeyUpFocus = (e, key, isBlured) => {\n    let value = \"\";\n    if (e && e.target) {\n      value = e.target.value;\n    } else {\n      value = e;\n    }\n    const { filters } = this.state;\n    if ((e && e.keyCode === 13) || isBlured) {\n      filters[key].value = value;\n      this.setState({ filters }, () => {\n        this.getSearchResults();\n      });\n    } else {\n      filters[key].value = value;\n      filters[key].autoCompleteOptions = [];\n      this.setState({ filters }, () => {\n        this.onColumnFilterAutocomplete(e, key);\n      });\n    }\n  };\n\n  onColumnFilterAutocomplete = (e, key) => {\n    const { filters, serachOption, searchValue } = this.state;\n    const value = e;\n    // Parse Filter string\n    let filterStr = [];\n    if (filters) {\n      filterStr = Object.keys(filters).map((filterKey) => {\n        const filterVal = filters[filterKey].value\n          ? filters[filterKey].value\n          : \"\";\n        const filterOption = filters[filterKey].option\n          ? filters[filterKey].option\n          : \"contains\";\n        return `&${filterOption}-${filterKey}=${filterVal}`;\n      });\n    }\n    const filter = filterStr.join(\"\");\n\n    getDSMFilterTypeaheadRequest(serachOption, searchValue, filter, value, key)\n      .then((response) => {\n        filters[key].autoCompleteOptions = response.data ? response.data : [];\n        this.setState({ filters });\n      })\n      .catch((error) => {\n        filters[key].autoCompleteOptions = [];\n        this.setState({ filters });\n      });\n  };\n\n  onColumnFilterOptionChange = (value, key) => {\n    const { filters } = this.state;\n    if (filters[key].option !== value) {\n      filters[key].option = value;\n      this.setState({ filters });\n      if (filters[key].value) {\n        this.getSearchResults();\n      }\n    }\n  };\n\n  renderTitleWithFilter = (key, title) => {\n    const { filterOptions, filters } = this.state;\n    if (!filters[key]) {\n      return \"\";\n    }\n    return (\n      <div className=\"custom-hd-wrp\">\n        <div className=\"hd-label\">{title}</div>\n        <div\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <Select\n            placeholder=\"Select Option\"\n            dropdownClassName=\"table-filter-dropdown\"\n            defaultValue=\"contains\"\n            onSelect={(value) => {\n              this.onColumnFilterOptionChange(value, key);\n            }}\n          >\n            {filterOptions.map((option) => (\n              <Option value={option.value} key={option.value}>\n                {option.Title}\n              </Option>\n            ))}\n          </Select>\n          <AutoComplete\n            dataSource={filters[key].autoCompleteOptions}\n            style={{ width: 200 }}\n            defaultActiveFirstOption={false}\n            dropdownClassName=\"column-filter-dropdown\"\n            value={filters[key].value}\n            onSelect={(e) => {\n              this.onColumnFilterKeyUpFocus(e, key, true);\n            }}\n            onSearch={(e) => {\n              this.onColumnFilterKeyUpFocus(e, key);\n            }}\n            // onFocus={e => {\n            //   this.onColumnFilterKeyUpFocus(e, key);\n            // }}\n            // onSearch={e => {\n            //   this.onColumnFilterKeyUpFocus(e, key);\n            // }}\n            placeholder={title}\n          >\n            <Input\n              onKeyUp={(e) => {\n                this.onColumnFilterKeyUpFocus(e, key);\n              }}\n              onFocus={(e) => {\n                this.onColumnFilterKeyUpFocus(e, key);\n              }}\n            />\n          </AutoComplete>\n        </div>\n      </div>\n    );\n  };\n\n  createColDefs = () => {\n    const colDefs = [\n      {\n        title: this.renderTitleWithFilter(\"name\", \"Hostname\"),\n        dataIndex: \"name\",\n        key: \"name\",\n        className: \"name\",\n        sorter: true,\n        width: 130,\n      },\n      {\n        title: this.renderTitleWithFilter(\"ip\", \"IP\"),\n        dataIndex: \"ip\",\n        key: \"ip\",\n        className: \"ip\",\n        sorter: true,\n        width: 130,\n      },\n      {\n        title: this.renderTitleWithFilter(\"type\", \"Type\"),\n        dataIndex: \"type\",\n        key: \"type\",\n        className: \"type\",\n        sorter: true,\n        width: 100,\n      },\n      {\n        title: this.renderTitleWithFilter(\"vendor\", \"Vendor\"),\n        dataIndex: \"vendor\",\n        key: \"vendor\",\n        className: \"vendor\",\n        sorter: true,\n        width: 100,\n      },\n      {\n        title: this.renderTitleWithFilter(\"value\", \"Value\"),\n        dataIndex: \"value\",\n        key: \"value\",\n        className: \"value\",\n        sorter: true,\n        render: (value) => <div className=\"wrap-single-line\">{value}</div>,\n      },\n      {\n        title: this.renderTitleWithFilter(\"value_type\", \"Value Type\"),\n        dataIndex: \"value_type\",\n        key: \"value_type\",\n        className: \"value_type\",\n        sorter: true,\n        width: 140,\n      },\n      {\n        title: this.renderTitleWithFilter(\"dn\", \"DN\"),\n        dataIndex: \"dn\",\n        key: \"dn\",\n        className: \"dn\",\n        width: 240,\n        render: (dn) => {\n          if (dn && dn.length) {\n            return dn.join(\", \");\n          }\n          return dn;\n        },\n      },\n      {\n        title: this.renderTitleWithFilter(\"country\", \"Country\"),\n        dataIndex: \"country\",\n        key: \"country\",\n        className: \"country\",\n        sorter: true,\n        width: 120,\n      },\n    ];\n    return colDefs;\n  };\n\n  parseTableData = (data) => {\n    const { meta } = data;\n    const { filters } = this.state;\n    data.meta.fields.forEach((col, index) => {\n      if (!filters[col.name]) {\n        filters[col.name] = {\n          option: \"contains\",\n          value: \"\",\n          autoCompleteOptions: [],\n        };\n      }\n    });\n\n    this.setState({ filters }, () => {\n      const rowData = data.data.map((d, index) => {\n        return {\n          ...d,\n          key: index,\n        };\n      });\n\n      this.setState({\n        searchResults: rowData,\n        // searchColumns: this.createColDefs(),\n        searchView: meta.view,\n        showResultsTable: true,\n      });\n    });\n  };\n\n  onSearchEmpty = () => {\n    // message.error(\"Unfortunately there was an error getting the results\");\n    this.setState({\n      searchResults: [],\n      searchView: \"table\",\n      showResultsTable: true,\n      isLoading: false,\n      page: 0,\n      totalItems: 0,\n    });\n  };\n\n  setTableDimensions = () => {\n    const marginBottom = 70;\n    const offsetTop = this.tableWrapperRef.current.getBoundingClientRect().top;\n    const tableHeight = window.innerHeight - offsetTop - marginBottom - 115;\n    this.setState({ tableHeight });\n  };\n\n  handleWindowResize = () => {\n    this.setTableDimensions();\n  };\n\n  searchOptionChange = (serachOption) => {\n    this.setState({ serachOption }, () => {\n      this.debouncedOnChange();\n    });\n  };\n\n  renderOption = () => {\n    const { autoCompleteDataSource } = this.state;\n    const options = Object.keys(autoCompleteDataSource).map((group) => {\n      return (\n        <OptGroup\n          key={group}\n          label={group === \"suggessions\" ? \"Suggestions\" : \"Recent Searches\"}\n        >\n          {autoCompleteDataSource[group].map((item) => (\n            <Option key={item} text={item}>\n              {item === \"loading\" ? (\n                <Icon type=\"loading\" />\n              ) : (\n                <div className=\"global-search-item\">\n                  <span className=\"global-search-item-desc\">{item}</span>\n                  {group === \"resentSearch\" ? (\n                    <span className=\"search-history-remove\">Remove</span>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              )}\n            </Option>\n          ))}\n        </OptGroup>\n      );\n    });\n\n    return options;\n  };\n\n  render() {\n    const {\n      isLoading,\n      reqTime,\n      serachOptions,\n      serachOption,\n      searchResults,\n      autoCompleteDataSource,\n      tableHeight,\n      searchView,\n      showResultsTable,\n      totalItems,\n      page,\n    } = this.state;\n\n    const searchColumnsUpdate = this.createColDefs();\n    return (\n      <Fragment>\n        <div className=\"search-input-wrapper initial-search-done clearfix\">\n          <div className=\"top-option-box\">\n            <Select\n              placeholder=\"Select Option\"\n              className=\"search-select-options\"\n              onSelect={this.searchOptionChange}\n              value={serachOption}\n            >\n              {serachOptions.map((option) => (\n                <Option value={option.value} key={option.value}>\n                  {option.Title}\n                </Option>\n              ))}\n            </Select>\n            {totalItems !== 0 && (\n              <div className={`search-info ${isLoading ? \"loading\" : \"\"}`}>\n                {isLoading && (\n                  <span className=\"loading\">\n                    <Icon type=\"loading\" />\n                  </span>\n                )}\n                <span>About </span>\n                {parseInt(totalItems, 0).toLocaleString()}\n                <span> results (</span>\n                {reqTime}\n                <span>)</span>\n              </div>\n            )}\n          </div>\n          <div className=\"top-search-box\">\n            <div className=\"global-search-wrapper\">\n              <AutoComplete\n                className=\"search-input\"\n                size=\"large\"\n                dataSource={autoCompleteDataSource.suggessions}\n                style={{ width: \"100%\" }}\n                dropdownClassName=\"column-filter-dropdown\"\n                defaultActiveFirstOption={false}\n                allowClear\n                // onFocus={e => {\n                //   this.onAutoCompleteChange(e);\n                // }}\n                onSelect={(e) => this.onAutoCompleteChange(e)}\n                onSearch={(e) => this.onAutoCompleteChange(e)}\n                autoFocus\n              >\n                <Input\n                  className=\"search-input\"\n                  placeholder=\"Search...\"\n                  prefix={\n                    <Icon type=\"search\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  size=\"large\"\n                />\n              </AutoComplete>\n            </div>\n          </div>\n        </div>\n        <div className=\"search-filter-wrapper\">\n          <Button className=\"ant-btn-primary\" onClick={this.clickResetFilters}>\n            <Icon type=\"filter\" />\n            Reset\n          </Button>\n          <Button className=\"ant-btn-primary\" onClick={this.clickApplyFilters}>\n            Apply\n          </Button>\n        </div>\n        <div className=\"search-table-wrapper\">\n          <div ref={this.tableWrapperRef} className=\"search-results\">\n            {searchView === \"table\" && showResultsTable && (\n              <AntDataTable\n                colDefs={searchColumnsUpdate}\n                rowData={searchResults}\n                tableHeight={tableHeight}\n                totalItems={totalItems}\n                page={page}\n                isLoading={isLoading}\n                onTableChange={this.handleTableChange}\n              />\n            )}\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default SearchComponent;\n","import React, { Fragment } from 'react';\nimport DSMSearchInput from '../DSMSearchInput/DSMSearchInput';\n\nfunction DSMSearch() {\n  // const hiddenColumns = ['status'];\n  return (\n    <Fragment>\n      <DSMSearchInput />\n    </Fragment>\n  );\n}\n\nexport default DSMSearch;\n","/* eslint-disable react/no-array-index-key */\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Row, Col } from 'antd';\n\nimport './DSMViewer.scss';\n\nclass DSMCards extends Component {\n  state = {\n    items: [],\n    fields: []\n  };\n\n  componentDidMount() {\n    const { data, fields } = this.props;\n    this.setState({ items: data, fields });\n  }\n\n  componentWillReceiveProps() {}\n\n  render() {\n    const { items, fields } = this.state;\n    return (\n      <Fragment>\n        <Row gutter={16}>\n          {items.map((item, index) => (\n            <Col span={8} key={`${item.hostname}-${index}`}>\n              <Card size=\"small rounded-card\" title={item.hostname}>\n                {fields.map((field, ind) =>\n                  field.isShow && ind > 0 ? (\n                    <Row gutter={16} key={`${item.hostname}-${field.name}-${index}-${ind}`}>\n                      <Col span={11} className=\"label\">\n                        {field.label}\n                      </Col>\n                      <Col span={11}>{item[field.name]}</Col>\n                    </Row>\n                  ) : (\n                    ''\n                  )\n                )}\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      </Fragment>\n    );\n  }\n}\n\nDSMCards.defaultProps = {\n  data: [],\n  fields: []\n};\n\nDSMCards.propTypes = {\n  data: PropTypes.array,\n  fields: PropTypes.array\n};\n\nexport default DSMCards;\n","/* eslint-disable react/no-array-index-key */\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'antd';\n\nimport './DSMViewer.scss';\n\nclass DSMLists extends Component {\n  state = {\n    items: [],\n    fields: []\n  };\n\n  componentDidMount() {\n    const { data, fields } = this.props;\n    this.setState({ items: data, fields });\n  }\n\n  componentWillReceiveProps() {}\n\n  render() {\n    const { items, fields } = this.state;\n    const { titleClickHandler } = this.props;\n    return (\n      <Fragment>\n        {items.map((item, index) => (\n          <div className=\"list-items\" key={`${item.hostname}-${index}`}>\n            <Card size=\"small\" title={item.hostname} onClick={titleClickHandler}>\n              {fields.map((field, ind) =>\n                field.isShow && ind > 0 ? (\n                  <p key={`${item.hostname}-${field.name}-${index}-${ind}`}>\n                    <span className=\"label\">{field.label}</span>\n                    <span>{item[field.name] ? item[field.name] : '-'}</span>\n                  </p>\n                ) : (\n                  ''\n                )\n              )}\n            </Card>\n          </div>\n        ))}\n      </Fragment>\n    );\n  }\n}\n\nDSMLists.defaultProps = {\n  data: [],\n  fields: []\n};\n\nDSMLists.propTypes = {\n  data: PropTypes.array,\n  fields: PropTypes.array\n};\n\nexport default DSMLists;\n","/* eslint jsx-a11y/anchor-is-valid: [0] */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Icon, Badge, message, Popconfirm } from 'antd';\nimport moment from 'moment';\nimport { getDevicesPassword } from '../../services/api';\n\nclass CellRenderer extends Component {\n  state = {\n    isLoading: false,\n    passwordString: '********',\n    password: ''\n  };\n\n  formatArray = arr => {\n    let html = '';\n\n    arr.forEach((item, index) => {\n      if (typeof item === 'object') {\n        if (!item) {\n          html += '';\n          return;\n        }\n\n        if (Array.isArray(item)) {\n          html = this.formatArray(item);\n        } else {\n          html = this.formatObject(item);\n        }\n      } else {\n        html += `<span>${item}</span>`;\n      }\n\n      if (index < arr.length - 1) {\n        html += `, `;\n      }\n    });\n\n    return html;\n  };\n\n  formatObject = obj => {\n    let html = '';\n\n    Object.keys(obj).forEach(key => {\n      html += `<span><strong>${key}</strong>: ${obj[key] || 'null'}</span> `;\n    });\n\n    return html;\n  };\n\n  onHostnameClick = (data, e) => {\n    e.preventDefault();\n\n    const { context } = this.props;\n\n    context.componentParent.handleHostnameClicked(data);\n  };\n\n  onEditClicked = (e, data) => {\n    e.preventDefault();\n    const { context } = this.props;\n\n    context.componentParent.showAddEditModal('EDIT', data);\n  };\n\n  onDeleteClicked = (e, data) => {\n    e.preventDefault();\n    const { context } = this.props;\n    context.componentParent.showDeleteConfirm(data);\n  };\n\n  onDeviceIngestionClick = (e, data) => {\n    e.preventDefault();\n    const { context } = this.props;\n\n    context.componentParent.initDeviceIngestion(data);\n  };\n\n  showHidePassword = async (rowData, hidePassword) => {\n    const { passwordString } = this.state;\n\n    if (hidePassword) {\n      this.setState({ password: passwordString });\n      return;\n    }\n\n    this.setState({ isLoading: true });\n\n    try {\n      const { context } = this.props;\n      const deviceName = context.componentParent.props.metadata.name;\n      const res = await getDevicesPassword(deviceName);\n      this.setState({ isLoading: false, password: res.data.password });\n    } catch {\n      message.error('Unfortunately there was an error getting the password');\n      this.setState({ isLoading: false });\n    }\n  };\n\n  formatValue = value => {\n    let html = '';\n\n    if (!value) {\n      return html;\n    }\n\n    if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        html = this.formatArray(value);\n      } else {\n        html = this.formatObject(value);\n      }\n\n      return html;\n    }\n\n    return value;\n  };\n\n  componentDidMount = () => {\n    const { colDef, data } = this.props;\n    if (colDef.field === 'Password_TS') {\n      this.setState({ password: data.Password_TS });\n    }\n  };\n\n  render() {\n    const { value, colDef, data } = this.props;\n    const { isLoading } = this.state;\n\n    if (isLoading) {\n      return (\n        <div className=\"spin-wrapper\">\n          <Icon type=\"loading\" />\n        </div>\n      );\n    }\n\n    if (colDef.field === 'hostname') {\n      if (colDef.isEditable) {\n        return <div className=\"edit-wrapper\">{value}</div>;\n      }\n      return (\n        <a href=\"#\" onClick={this.onHostnameClick.bind(this, data)}>\n          {value}\n        </a>\n      );\n    }\n\n    if (colDef.field === 'actions') {\n      return (\n        <div className=\"edit-wrapper center\">\n          {colDef.showEditButton && (\n            <Button\n              key=\"inventory-edit\"\n              title=\"Edit\"\n              size=\"small\"\n              onClick={e => this.onEditClicked(e, data)}\n            >\n              <Icon type=\"edit\" />\n            </Button>\n          )}\n          {colDef.showDeleteButton && (\n            <Button\n              key=\"inventory-delete\"\n              title=\"Delete\"\n              size=\"small\"\n              onClick={e => this.onDeleteClicked(e, data)}\n            >\n              <Icon type=\"delete\" />\n            </Button>\n          )}\n          {colDef.showDeviceIngestionButton && (\n            <Popconfirm\n              title={`Are you sure want to run the ingestion for \"${data.hostname}\"?`}\n              onConfirm={e => this.onDeviceIngestionClick(e, data)}\n              okText=\"Yes\"\n              cancelText=\"No\"\n            >\n              <Button\n                key=\"device-ingestion\"\n                title=\"Device Ingestion\"\n                size=\"small\"\n                className=\"device-ingestion\"\n              >\n                <Icon type=\"interaction\" />\n              </Button>\n            </Popconfirm>\n          )}\n        </div>\n      );\n    }\n\n    if (colDef.field === 'actions' && colDef.showEditButton) {\n      return (\n        <div className=\"edit-wrapper center\">\n          <Button\n            key=\"inventory-edit\"\n            title=\"Edit\"\n            size=\"small\"\n            onClick={e => this.onEditClicked(e, data)}\n          >\n            <Icon type=\"edit\" />\n          </Button>\n        </div>\n      );\n    }\n\n    if (colDef.field === 'Password_TS') {\n      const { passwordString, password } = this.state;\n\n      return (\n        <div className=\"sh-password\">\n          {password === passwordString && (\n            <Icon type=\"eye-invisible\" onClick={() => this.showHidePassword(data, false)} />\n          )}\n          {password !== passwordString && (\n            <Icon type=\"eye\" onClick={() => this.showHidePassword(data, true)} />\n          )}\n          <span>{password}</span>\n        </div>\n      );\n    }\n\n    if (colDef.field === 'status' && colDef.displayIcon) {\n      return (\n        <div>\n          {value && typeof value === 'object' && (\n            <Badge\n              className=\"device-status-badge\"\n              status={value.status ? 'success' : 'error'}\n              text={value.message}\n            />\n          )}\n          {typeof value !== 'object' && <span>{value}</span>}\n        </div>\n      );\n    }\n\n    if (colDef.showActiveInactiveIcon) {\n      if (value) {\n        return <Icon type=\"check-circle\" theme=\"filled\" style={{ color: '#52c41a' }} />;\n      }\n      return <Icon type=\"close-circle\" theme=\"filled\" style={{ color: '#f5222d' }} />;\n    }\n\n    if (colDef.field === 'profile' && colDef.isInventory) {\n      if (value && value.name) {\n        return `${value.name}`;\n      }\n      if (value) {\n        return `${value.type}, ${value.vendor}, ${value.version}`;\n      }\n      return '';\n    }\n\n    if (colDef.field === 'country' && colDef.isInventory) {\n      if (value) {\n        return `${value.name}`;\n      }\n      return '';\n    }\n\n    if (colDef.isFormatDate) {\n      if (value) {\n        return moment(value)\n          .utc()\n          .format('MMM DD, YYYY, hh:mm A');\n      }\n      return '';\n    }\n\n    const cellHtml = { __html: this.formatValue(value) };\n\n    // eslint-disable-next-line react/no-danger\n    return <div dangerouslySetInnerHTML={cellHtml} />;\n  }\n}\n\nCellRenderer.defaultProps = {\n  value: '',\n  context: {}\n};\n\nCellRenderer.propTypes = {\n  value: PropTypes.any,\n  colDef: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n  context: PropTypes.object\n};\n\nexport default CellRenderer;\n","/* eslint jsx-a11y/anchor-is-valid: [0] */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Popover, Icon } from 'antd';\n\nimport './CmaItemCellRenderer.scss';\n\nclass CmaItemCellRenderer extends Component {\n  handleCmaItemClicked = (item, e) => {\n    e.preventDefault();\n\n    const { context } = this.props;\n\n    context.componentParent.handleCmaItemClicked(item);\n  };\n\n  render() {\n    const { value } = this.props;\n    const cmaItems = [];\n\n    if (Array.isArray(value)) {\n      value.forEach(item => {\n        if (item.uid) {\n          cmaItems.push(\n            <div key={item.uid}>\n              <a href=\"\" onClick={this.handleCmaItemClicked.bind(this, item)} title={item.name}>\n                {item.name}\n              </a>\n            </div>\n          );\n        } else {\n          cmaItems.push(<div key={item.name}>{item.name}</div>);\n        }\n      });\n    }\n\n    if (cmaItems.length === 1) {\n      return <div>{cmaItems}</div>;\n    }\n\n    if (cmaItems.length > 1) {\n      return (\n        <Popover content={cmaItems}>\n          <span className=\"cma-items-multiple-items\">\n            <Icon type=\"bars\" />\n            <span> Multiple Items</span>\n          </span>\n        </Popover>\n      );\n    }\n\n    return `${value}`;\n  }\n}\n\nCmaItemCellRenderer.defaultProps = {\n  value: '',\n  context: {}\n};\n\nCmaItemCellRenderer.propTypes = {\n  value: PropTypes.any,\n  context: PropTypes.object\n};\n\nexport default CmaItemCellRenderer;\n","/* eslint-disable react/no-danger */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Popover, Icon } from 'antd';\n\nimport './CmaItemCellRenderer.scss';\n\nclass ReportsCellRenderer extends Component {\n  render() {\n    const { value } = this.props;\n    const cmaItems = [];\n\n    if (Array.isArray(value)) {\n      value.forEach((item, index) => {\n        if (item.name) {\n          cmaItems.push(<div key={item.uuid || item.name}>{item.name}</div>);\n        } else {\n          cmaItems.push(<div key={item}>{item || ''}</div>);\n        }\n      });\n    }\n\n    if (cmaItems.length === 1) {\n      return <div>{cmaItems}</div>;\n    }\n\n    if (cmaItems.length > 1) {\n      return (\n        <Popover content={cmaItems}>\n          <span className=\"cma-items-multiple-items\">\n            <Icon type=\"bars\" />\n            <span> Multiple Items</span>\n          </span>\n        </Popover>\n      );\n    }\n\n    return `${value}`;\n  }\n}\n\nReportsCellRenderer.defaultProps = {\n  value: ''\n};\n\nReportsCellRenderer.propTypes = {\n  value: PropTypes.any\n};\n\nexport default ReportsCellRenderer;\n","/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport { Select, AutoComplete } from 'antd';\n\nconst { Option } = Select;\n\nclass SelectFloatingFilter extends Component {\n  state = {\n    selectedValue: 'All'\n  };\n\n  applyCustomFilter = filterData => {\n    const { api, type } = this.props;\n\n    if (api && filterData && filterData.fieldName) {\n      const filterColumn = api.getFilterInstance(filterData.fieldName);\n      if (filterColumn) {\n        filterColumn.setModel({\n          type,\n          filter: filterData.value === 'All' ? '' : filterData.value\n        });\n        api.onFilterChanged();\n      }\n    }\n  };\n\n  onSelectChange = value => {\n    this.setState(\n      {\n        selectedValue: value\n      },\n      () => {\n        const { selectedValue } = this.state;\n        const { fieldName } = this.props;\n        const filterData = {\n          fieldName,\n          value: selectedValue\n        };\n        this.applyCustomFilter(filterData);\n      }\n    );\n  };\n\n  render() {\n    const { options, showAutoComplete } = this.props;\n    const { selectedValue } = this.state;\n\n    const selectOptions = options.map(item => (\n      <Option title={item} value={item} key={item}>\n        {item}\n      </Option>\n    ));\n    if (showAutoComplete) {\n      return (\n        <AutoComplete\n          dataSource={options}\n          style={{ width: '100%' }}\n          size=\"small\"\n          optionFilterProp=\"children\"\n          value={selectedValue === 'All' ? '' : selectedValue}\n          filterOption={(inputValue, option) =>\n            option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n          }\n          defaultActiveFirstOption={false}\n          onChange={this.onSelectChange}\n        />\n      );\n    }\n    return (\n      <Select\n        showSearch\n        style={{ width: '100%' }}\n        size=\"small\"\n        optionFilterProp=\"children\"\n        value={selectedValue}\n        onChange={this.onSelectChange}\n        defaultActiveFirstOption={false}\n      >\n        {selectOptions}\n      </Select>\n    );\n  }\n}\n\nexport default SelectFloatingFilter;\n","/* eslint-disable no-param-reassign */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { AgGridReact } from 'ag-grid-react';\nimport classNames from 'classnames';\n\nimport { Consumer } from '../../context';\nimport CellRenderer from './CellRenderer';\nimport CmaItemCellRenderer from './CmaItemCellRenderer';\nimport ReportsCellRenderer from './ReportsCellRenderer';\nimport SelectFloatingFilter from './SelectFloatingFilter';\nimport { COLUMN_WIDTH } from '../../constants';\n\nimport './DataTable.scss';\n\nclass DataTable extends Component {\n  state = {\n    gridApi: null,\n    gridParams: null,\n    dataTableComponent: this\n  };\n\n  gridWrapperRef = React.createRef();\n\n  overlayLoadingTemplate = `<div class=\"spin-wrapper\">\n    <div class=\"ant-spin ant-spin-lg ant-spin-spinning\">\n    <span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span>\n    </div>\n    </div>`;\n\n  overlayNoRowsTemplate = `<div class=\"no-results-wrapper\">\n    <div class=\"message\">\n    <i class=\"anticon anticon-exclamation-circle\">\n    <svg viewBox=\"64 64 896 896\" class=\"\" data-icon=\"exclamation-circle\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\"></path><path d=\"M464 688a48 48 0 1 0 96 0 48 48 0 1 0-96 0zM488 576h48c4.4 0 8-3.6 8-8V296c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8z\"></path></svg>\n    </i> \n    <span>No rows to show</span>\n    </div>\n    </div>`;\n\n  componentDidUpdate(prevProps) {\n    const { filterData, tableResultsAreLoading } = this.props;\n\n    if (prevProps.tableResultsAreLoading && !tableResultsAreLoading) {\n      this.resetCustomFilters();\n    }\n\n    if (filterData && filterData.fieldName && filterData.applyFilter) {\n      this.applyFilter(filterData);\n    }\n  }\n\n  componentWillUnmount() {\n    const { gridApi } = this.state;\n\n    if (gridApi && gridApi.destroy) {\n      gridApi.destroy();\n    }\n  }\n\n  onGridReady = params => {\n    const { autoHeight, filterData } = this.props;\n\n    this.setState(\n      {\n        gridApi: params.api,\n        gridParams: params,\n        gridColumnApi: params.columnApi\n      },\n      () => {\n        this.applyFilter(filterData);\n      }\n    );\n\n    if (autoHeight) {\n      params.api.resetRowHeights();\n    }\n  };\n\n  applyFilter = filterData => {\n    const { gridParams } = this.state;\n\n    if (gridParams && gridParams.api && filterData && filterData.fieldName) {\n      const filterColumn = gridParams.api.getFilterInstance(filterData.fieldName);\n      if (filterColumn) {\n        filterColumn.setModel({\n          type: 'contains',\n          filter: filterData.value\n        });\n        gridParams.api.onFilterChanged();\n        const column = gridParams.columnApi\n          .getAllDisplayedColumns()\n          .find(col => col.colId === filterData.fieldName);\n        gridParams.api.ensureColumnVisible(column);\n      }\n    }\n  };\n\n  downloadCsv = params => {\n    const { gridApi } = this.state;\n\n    gridApi.exportDataAsCsv(params);\n  };\n\n  showRequiredOverlay = tableResultsAreLoading => {\n    const { gridApi } = this.state;\n    const { rowData } = this.props;\n\n    if (!gridApi) {\n      return;\n    }\n\n    if (tableResultsAreLoading) {\n      gridApi.showLoadingOverlay();\n      return;\n    }\n\n    if (!tableResultsAreLoading && !rowData.length) {\n      gridApi.showNoRowsOverlay();\n      return;\n    }\n\n    gridApi.hideOverlay();\n  };\n\n  createColumnDefsWithOptions = () => {\n    const { columnDefs, rowData, isCmaTable, isReportsCmaTable, hiddenColumns } = this.props;\n\n    if (!rowData.length) return [];\n\n    return columnDefs.map(columnDef => {\n      const columnDefObj = columnDef;\n      const columnValues = [];\n\n      columnDefObj.cellRenderer = isCmaTable ? 'cmaItemCellRenderer' : 'cellRenderer';\n      columnDefObj.cellRenderer = isReportsCmaTable\n        ? 'reportsCellRenderer'\n        : columnDefObj.cellRenderer;\n\n      rowData.forEach(rowDataItem => {\n        if (rowDataItem[columnDefObj.field]) {\n          columnValues.push(rowDataItem[columnDefObj.field]);\n        }\n      });\n\n      if (\n        (!columnValues.length || hiddenColumns.indexOf(columnDefObj.field) !== -1) &&\n        !columnDefObj.isEmptyShow\n      ) {\n        columnDefObj.hide = true;\n      } else {\n        columnDefObj.hide = false;\n      }\n\n      return columnDefObj;\n    });\n  };\n\n  formatArray = arr => {\n    let formattedArrayValue = '';\n\n    arr.forEach((item, index) => {\n      if (typeof item === 'object') {\n        if (!item) {\n          formattedArrayValue += '';\n          return;\n        }\n        if (Array.isArray(item)) {\n          formattedArrayValue += this.formatArray(item);\n        } else {\n          formattedArrayValue += this.formatObject(item);\n        }\n      } else {\n        formattedArrayValue += item;\n      }\n\n      if (index < arr.length - 1) {\n        formattedArrayValue += `, `;\n      }\n    });\n\n    return formattedArrayValue;\n  };\n\n  formatObject = obj => {\n    let formattedObjValue = '';\n\n    Object.keys(obj).forEach(key => {\n      if (Array.isArray(obj[key])) {\n        formattedObjValue += this.formatArray(obj[key]);\n      }\n      formattedObjValue += `${obj[key]} `;\n    });\n\n    return formattedObjValue;\n  };\n\n  customFormatObject = (obj, keys) => {\n    const formattedObjValue = [];\n    Object.keys(obj).forEach(key => {\n      if (keys.indexOf(key) >= 0) {\n        formattedObjValue.push(obj[key]);\n      }\n    });\n    return formattedObjValue.join(', ');\n  };\n\n  customFilterUniqueData = devices => {\n    const { columnDefs } = this.props;\n\n    columnDefs.forEach(cols => {\n      if (cols.floatingFilterComponent) {\n        const { showAutoComplete } = cols.floatingFilterComponentParams;\n        const unique = [...new Set(devices.map(device => device[cols.field]))];\n        if (!showAutoComplete) {\n          unique.unshift('All');\n        }\n        cols.floatingFilterComponentParams.options = unique;\n      }\n    });\n  };\n\n  resetCustomFilters = () => {\n    const { gridApi, gridColumnApi } = this.state;\n\n    if (gridApi) {\n      gridColumnApi.resetColumnState();\n      gridApi.setFilterModel(null);\n      gridApi.onFilterChanged();\n    }\n  };\n\n  render() {\n    const { gridApi, dataTableComponent } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { tableResultsAreLoading } = value;\n          const {\n            tableHeight,\n            enableColResize,\n            rowData,\n            enableSorting,\n            enableFilter,\n            floatingFilter,\n            suppressMenu,\n            headerHeight,\n            floatingFiltersHeight,\n            rowHeight,\n            pagination,\n            context,\n            autoHeight\n          } = this.props;\n\n          this.showRequiredOverlay(tableResultsAreLoading);\n\n          this.customFilterUniqueData(rowData);\n\n          const columnDefsWithOptions = this.createColumnDefsWithOptions();\n          const wrapperClasses = classNames('ag-theme-balham', {\n            'auto-height': autoHeight\n          });\n\n          // If there are too few columns to fill the table horizontally,\n          // use `.sizeColumnsToFit()` to fill the table\n          if (this.gridWrapperRef.current && gridApi) {\n            const gridWidth = this.gridWrapperRef.current.clientWidth;\n            const columnCount = columnDefsWithOptions.length;\n\n            if (columnCount * COLUMN_WIDTH <= gridWidth) {\n              gridApi.sizeColumnsToFit();\n            }\n          }\n\n          return (\n            <div\n              ref={this.gridWrapperRef}\n              className={wrapperClasses}\n              style={{\n                height: `${tableHeight}px`,\n                visibility: gridApi ? 'visible' : 'hidden'\n              }}\n            >\n              <AgGridReact\n                enableColResize={enableColResize}\n                columnDefs={columnDefsWithOptions}\n                rowData={rowData}\n                enableSorting={enableSorting}\n                enableFilter={enableFilter}\n                floatingFilter={floatingFilter}\n                suppressMenu={suppressMenu}\n                headerHeight={headerHeight}\n                floatingFiltersHeight={floatingFiltersHeight}\n                rowHeight={rowHeight}\n                pagination={pagination}\n                suppressRowClickSelection\n                suppressCellSelection\n                rowSelection=\"single\"\n                overlayLoadingTemplate={this.overlayLoadingTemplate}\n                overlayNoRowsTemplate={this.overlayNoRowsTemplate}\n                getRowHeight={this.getRowHeight}\n                onGridReady={this.onGridReady}\n                frameworkComponents={{\n                  cellRenderer: CellRenderer,\n                  cmaItemCellRenderer: CmaItemCellRenderer,\n                  reportsCellRenderer: ReportsCellRenderer,\n                  selectFloatingFilter: SelectFloatingFilter\n                }}\n                context={context}\n                suppressColumnMoveAnimation\n                animateRows\n                defaultColDef={{\n                  filter: 'agTextColumnFilter',\n                  filterParams: {\n                    valueGetter: function getter(params) {\n                      const val = params.data[this.column.colId];\n                      const { isFormatFilter, formatFilterKeys } = this.column.colDef;\n                      let formattedValue = '';\n\n                      if (val === null) {\n                        return '';\n                      }\n\n                      if (isFormatFilter && formatFilterKeys.length && typeof val === 'object') {\n                        formattedValue = dataTableComponent.customFormatObject(\n                          val,\n                          formatFilterKeys\n                        );\n                        return formattedValue;\n                      }\n\n                      if (typeof val === 'object') {\n                        if (Array.isArray(val)) {\n                          formattedValue = dataTableComponent.formatArray(val);\n                        } else {\n                          formattedValue = dataTableComponent.formatObject(val);\n                        }\n\n                        return formattedValue;\n                      }\n\n                      return val;\n                    }\n                  },\n                  width: COLUMN_WIDTH\n                }}\n              />\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nDataTable.defaultProps = {\n  pagination: true,\n  enableFilter: true,\n  enableSorting: true,\n  enableColResize: true,\n  floatingFilter: true,\n  suppressMenu: true,\n  autoHeight: false,\n  isCmaTable: false,\n  isReportsCmaTable: false,\n  tableResultsAreLoading: false,\n  headerHeight: 40,\n  floatingFiltersHeight: 40,\n  rowHeight: 38,\n  context: {},\n  hiddenColumns: [],\n  filterData: {}\n};\n\nDataTable.propTypes = {\n  columnDefs: PropTypes.array.isRequired,\n  rowData: PropTypes.array.isRequired,\n  tableHeight: PropTypes.number.isRequired,\n  pagination: PropTypes.bool,\n  enableFilter: PropTypes.bool,\n  enableSorting: PropTypes.bool,\n  enableColResize: PropTypes.bool,\n  floatingFilter: PropTypes.bool,\n  suppressMenu: PropTypes.bool,\n  autoHeight: PropTypes.bool,\n  isCmaTable: PropTypes.bool,\n  isReportsCmaTable: PropTypes.bool,\n  tableResultsAreLoading: PropTypes.bool,\n  headerHeight: PropTypes.number,\n  floatingFiltersHeight: PropTypes.number,\n  rowHeight: PropTypes.number,\n  context: PropTypes.object,\n  hiddenColumns: PropTypes.array,\n  filterData: PropTypes.object\n};\n\nexport default DataTable;\n","// UI\nexport const COLUMN_WIDTH = 200;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs } from 'antd';\n// import DataTable from '../../../DataTable/DataTable';\n\nconst { TabPane } = Tabs;\n\nclass DSMTab extends Component {\n  state = {\n    activeTabKey: '1'\n  };\n\n  componentDidMount() {\n    const { categoryData } = this.props;\n    window.addEventListener('resize', this.handleWindowResize);\n\n    if (categoryData.metadata) {\n      window.requestAnimationFrame(this.setMetaDataVerticalHeight);\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowResize);\n  }\n\n  tabsOnChange = key => {\n    this.setState({ activeTabKey: key });\n  };\n\n  handleWindowResize = () => {\n    const { categoryData } = this.props;\n\n    if (categoryData.metadata) {\n      this.setMetaDataVerticalHeight();\n    }\n  };\n\n  render() {\n    const { categoryData } = this.props;\n    const { activeTabKey } = this.state;\n\n    if (categoryData.categories) {\n      // eslint-disable-next-line array-callback-return\n      const tabs = categoryData.categories.map((category, index) => {\n        if (category.isShow) {\n          const tabKey = index + 1;\n          return (\n            <TabPane tab={category.title} key={tabKey}>\n              {+tabKey === +activeTabKey && <h3>Tab Content</h3>}\n            </TabPane>\n          );\n        }\n      });\n\n      return (\n        <div className=\"device-data-tab\">\n          {!!categoryData.categories.length && (\n            <Tabs\n              defaultActiveKey=\"1\"\n              onChange={this.tabsOnChange}\n              activeKey={activeTabKey}\n              animated={false}\n            >\n              {tabs}\n            </Tabs>\n          )}\n        </div>\n      );\n    }\n    return <h3>No Data</h3>;\n  }\n}\n\nDSMTab.defaultProps = {\n  categoryData: []\n};\n\nDSMTab.propTypes = {\n  categoryData: PropTypes.object\n};\n\nexport default DSMTab;\n","/* eslint-disable react/no-unused-state */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/label-has-for */\n/* eslint-disable no-param-reassign */\nimport React, { Component } from 'react';\nimport { Select, Modal } from 'antd';\n\nimport DSMCards from './DSMCards';\nimport DSMLists from './DSMLists';\nimport DataTable from '../../DataTable/DataTable';\nimport DSMTab from './DSMTab/DSMTab';\n\nimport './DSMViewer.scss';\n\nconst { Option } = Select;\n\nclass DSMViewer extends Component {\n  defaultColumnDefs = {\n    suppressMenu: true\n  };\n\n  state = {\n    tableHeight: 600,\n    modalBodyHeight: 0,\n    hiddenColumns: [],\n    columnDefs: [],\n    viewSelection: 'card',\n    showDetailsModal: false,\n    dsmModel: {\n      inventory: {\n        find: 'domain.inventory',\n        view: 'list', //card, list, table\n        fields: [\n          {\n            label: 'Hostname',\n            name: 'hostname',\n            isShow: true\n          },\n          {\n            label: 'IP',\n            name: 'ip',\n            isShow: false\n          },\n          {\n            label: 'Node',\n            name: 'node',\n            isShow: false\n          },\n          {\n            label: 'Port',\n            name: 'port',\n            isShow: true\n          },\n          {\n            label: 'Profile',\n            name: 'profile',\n            isShow: true\n          },\n          {\n            label: 'Transport',\n            name: 'transport',\n            isShow: true\n          },\n          {\n            label: 'Country',\n            name: 'country',\n            isShow: true\n          }\n        ]\n      },\n      domain: {\n        inventory: [\n          {\n            hostname: 'cma_LibertyGlobal-Corp-p',\n            ip: '172.24.17.41',\n            node: 'MTI',\n            profile: 'CMA, Checkpoint, R80',\n            transport: 'checkpoint_cma_r80',\n            port: '80',\n            country: 'Netherlands'\n          },\n          {\n            hostname: 'nlamska-lb07',\n            ip: '10.64.97.32',\n            node: 'MTI',\n            profile: 'LB, F5, 2',\n            transport: 'f5',\n            port: '81',\n            country: 'Netherlands'\n          },\n          {\n            hostname: 'CH xbeam CPM02',\n            ip: '172.27.175.62',\n            node: 'MTI',\n            profile: 'FW, Crossbeam-CPM, 1',\n            transport: 'crossbeam_cpm',\n            port: '33',\n            country: 'Netherlands'\n          },\n          {\n            hostname: 'cma-VOIP3-p',\n            ip: '34.344.234.123',\n            node: 'CNO',\n            profile: 'FW, Crossbeam-APM, 1',\n            transport: 'autodetect',\n            port: '34',\n            country: 'Liberty Global'\n          },\n          {\n            hostname: 'cma_LibertyGlobal-Corp-p',\n            ip: '172.24.17.41',\n            node: 'MTI',\n            profile: 'CMA, Checkpoint, R80',\n            transport: 'checkpoint_cma_r80',\n            port: '80',\n            country: 'Netherlands'\n          },\n          {\n            hostname: 'nlamska-lb07',\n            ip: '10.64.97.32',\n            node: 'MTI',\n            profile: 'LB, F5, 2',\n            transport: 'f5',\n            port: '81',\n            country: 'Netherlands'\n          },\n          {\n            hostname: 'CH xbeam CPM02',\n            ip: '172.27.175.62',\n            node: 'MTI',\n            profile: 'FW, Crossbeam-CPM, 1',\n            transport: 'crossbeam_cpm',\n            port: '33',\n            country: 'Netherlands'\n          },\n          {\n            hostname: 'cma-VOIP3-p',\n            ip: '34.344.234.123',\n            node: 'CNO',\n            profile: 'FW, Crossbeam-APM, 1',\n            transport: 'autodetect',\n            port: '34',\n            country: 'Liberty Global'\n          },\n          {\n            hostname: 'cma_LibertyGlobal-Corp-p',\n            ip: '172.24.17.41',\n            node: 'MTI',\n            profile: 'CMA, Checkpoint, R80',\n            transport: 'checkpoint_cma_r80',\n            port: '80',\n            country: 'Netherlands'\n          }\n        ],\n        subdomain: []\n      }\n    }\n  };\n\n  componentDidMount() {\n    const { dsmModel } = this.state;\n    const columnDefs = [];\n    for (const field of dsmModel.inventory.fields) {\n      if (field.isShow) {\n        columnDefs.push({\n          ...this.defaultColumnDefs,\n          headerName: field.label,\n          field: field.name\n        });\n      }\n    }\n    this.setState({ columnDefs, viewSelection: dsmModel.inventory.view });\n  }\n\n  changeView = e => {\n    this.setState({ viewSelection: e });\n  };\n\n  handleModelCancel = () => {\n    this.setState({ showDetailsModal: false });\n  };\n\n  titleClick = () => {\n    this.setState({ showDetailsModal: true });\n  };\n\n  render() {\n    const {\n      dsmModel,\n      columnDefs,\n      tableHeight,\n      hiddenColumns,\n      viewSelection,\n      showDetailsModal\n    } = this.state;\n    const deviceMetaData = {\n      categories: [\n        {\n          title: 'Invntory',\n          isShow: true,\n          data: [\n            {\n              hostname: 'cma_LibertyGlobal-Corp-p',\n              ip: '172.24.17.41',\n              node: 'MTI'\n            },\n            {\n              hostname: 'cma_LibertyGlobal-Corp-p',\n              ip: '172.24.17.41',\n              node: 'MTI'\n            },\n            {\n              hostname: 'cma_LibertyGlobal-Corp-p',\n              ip: '172.24.17.41',\n              node: 'MTI'\n            }\n          ]\n        },\n        {\n          title: 'Arp',\n          isShow: true,\n          data: []\n        },\n        {\n          title: 'VLAN',\n          isShow: true,\n          data: []\n        },\n        {\n          title: 'VLAN 1',\n          isShow: true,\n          data: []\n        }\n      ]\n    };\n    return (\n      <div className=\"dsm-viewer\">\n        <div className=\"selects\">\n          <div className=\"form-control\">\n            <label className=\"select-label\">Component</label>\n            <Select\n              showSearch\n              placeholder=\"Select Component...\"\n              value={viewSelection}\n              onChange={this.changeView}\n            >\n              <Option value=\"card\" key=\"card\">\n                Card View\n              </Option>\n              <Option value=\"list\" key=\"list\">\n                List View\n              </Option>\n              <Option value=\"table\" key=\"table\">\n                Table View\n              </Option>\n            </Select>\n          </div>\n        </div>\n        <div className=\"dsm-viewer-body\">\n          {viewSelection === 'card' && (\n            <DSMCards data={dsmModel.domain.inventory} fields={dsmModel.inventory.fields} />\n          )}\n          {viewSelection === 'list' && (\n            <DSMLists\n              data={dsmModel.domain.inventory}\n              fields={dsmModel.inventory.fields}\n              titleClickHandler={this.titleClick}\n            />\n          )}\n          {viewSelection === 'table' && (\n            <DataTable\n              ref={this.dataTableRef}\n              columnDefs={columnDefs}\n              rowData={dsmModel.domain.inventory}\n              tableHeight={tableHeight}\n              hiddenColumns={hiddenColumns}\n            />\n          )}\n        </div>\n        {showDetailsModal && (\n          <Modal\n            title=\"Title\"\n            visible={showDetailsModal}\n            onCancel={this.handleModelCancel}\n            width=\"960px\"\n            footer={null}\n            style={{ top: '40px' }}\n            bodyStyle={{ height: '500px' }}\n            destroyOnClose\n          >\n            {/* {isMetaDataLoading && (\n              <div className=\"spin-wrapper\">\n                <Spin size=\"default\" />\n              </div>\n            )} */}\n            <DSMTab categoryData={deviceMetaData} />\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default DSMViewer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, withRouter, Redirect, Switch } from \"react-router-dom\";\nimport { Layout, message } from \"antd\";\nimport classNames from \"classnames\";\n\nimport GlobalHeader from \"../../components/Header/Header\";\n// import DeviceSearchPage from '../../pages/DeviceSearchPage/DeviceSearchPage';\nimport DSMEditor from \"../../components/DSM/DSMEditor/DSMEditor\";\nimport DSMSearch from \"../../components/DSM/DSMSearch/DSMSearch\";\nimport DSMViewer from \"../../components/DSM/DSMViewer/DSMViewer\";\nimport { getRolesRequest } from \"../../services/api\";\n\nimport \"./PrimaryLayout.scss\";\n\nconst { Content } = Layout;\n\nclass App extends Component {\n  state = {\n    isRolesLoaded: true,\n  };\n\n  componentWillMount() {\n    // if (!localStorage.getItem('roles-initiated')) {\n    //   localStorage.removeItem('roles');\n    //   this.setState({ isRolesLoaded: false });\n    //   this.getRoles();\n    // }\n  }\n\n  getRoles = () => {\n    getRolesRequest()\n      .then((response) => this.handleGetRolesSuccess(response))\n      .catch((error) => this.handleGetRolesError());\n  };\n\n  handleGetRolesSuccess = (response) => {\n    localStorage.setItem(\"roles\", JSON.stringify(response.data));\n    this.setState({ isRolesLoaded: true });\n  };\n\n  handleGetRolesError = () => {\n    message.error(\"Unfortunately there was an error, please try again\");\n  };\n\n  routes = () => {\n    // let roles = [];\n\n    // if (localStorage.getItem('roles')) {\n    //   roles = JSON.parse(localStorage.getItem('roles'));\n    // }\n\n    // localStorage.removeItem('roles-initiated');\n\n    // if (!roles.length) {\n    //   message.warning('You have no user roles assigned.');\n    // }\n\n    return (\n      <Switch>\n        {/* {<Route path=\"/search\" component={DeviceSearchPage} />} */}\n        {<Route path=\"/search\" component={DSMSearch} />}\n        {/* {<Route path=\"/dsm-editor\" component={DSMEditor} />}\n        {<Route path=\"/dsm-viewer\" component={DSMViewer} />} */}\n        {<Redirect to=\"/search\" />}\n      </Switch>\n    );\n  };\n\n  render() {\n    const { location } = this.props;\n    const { isRolesLoaded } = this.state;\n    const globalContentClasses = classNames(\"global-content\", {\n      \"global-content-search\": location.pathname === \"/search\",\n      \"global-content-devices\": location.pathname === \"/devices\",\n      \"global-content-policies\": location.pathname === \"/policies\",\n      \"global-content-admin\": location.pathname.indexOf(\"/admin/\") === 0,\n    });\n\n    return (\n      <Layout className=\"global-layout\">\n        <GlobalHeader />\n        <Content className={globalContentClasses}>\n          <Switch>{isRolesLoaded ? this.routes() : \"\"}</Switch>\n        </Content>\n      </Layout>\n    );\n  }\n}\n\nApp.propTypes = {\n  location: PropTypes.object.isRequired,\n};\n\nexport default withRouter(App);\n","import React from \"react\";\nimport { Route, withRouter, Switch, Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { notification } from \"antd\";\n\nimport { Provider } from \"./context\";\n\nimport { getConnectionPolling } from \"./services/api\";\n\nimport UnauthorizedLayout from \"./layouts/UnauthorizedLayout/UnauthorizedLayout\";\nimport PrimaryLayout from \"./layouts/PrimaryLayout/PrimaryLayout\";\nimport \"./App.scss\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      // connectionTimeout: 20000\n    };\n    this.webPingTimer = null;\n    this.showNotification = true;\n  }\n\n  componentDidMount() {\n    // this.networkConnectionPolling();\n    // this.handleNetworkConnectionChange();\n  }\n\n  componentWillUnmount() {\n    if (this.webPingTimer) clearInterval(this.webPingTimer);\n  }\n\n  handleNetworkConnectionChange = () => {\n    const { connectionTimeout } = this.state;\n    this.webPingTimer = setInterval(() => {\n      this.networkConnectionPolling();\n    }, connectionTimeout);\n  };\n\n  handleNotificationClose = () => {\n    this.showNotification = true;\n  };\n\n  networkConnectionPolling = () => {\n    // eslint-disable-next-line react/prop-types\n    const { history } = this.props;\n    const pageName = history.location.pathname.replace(\"/\", \"\");\n    const auth = localStorage.getItem(\"auth\");\n    const parsedAuth = auth ? JSON.parse(auth) : { username: \"\" };\n    const { username } = parsedAuth;\n    getConnectionPolling(5000, pageName, username)\n      .then((response) => {\n        this.showNotification = true;\n        notification.destroy();\n      })\n      .catch((error) => {\n        if (!this.showNotification) return;\n        this.showNotification = notification.info({\n          message: \"Network Error!\",\n          description: \"Cannot connect to server, please check the vpn.\",\n          placement: \"topRight\",\n          duration: 0,\n          onClose: this.handleNotificationClose,\n        });\n      });\n  };\n\n  render() {\n    return (\n      <Provider>\n        <Switch>\n          <Route path=\"/public\" component={UnauthorizedLayout} />\n          <PrivateRoute path=\"/\" component={PrimaryLayout} />\n          <Redirect to=\"/search\" />\n        </Switch>\n      </Provider>\n    );\n  }\n}\n\nconst isAuthenticated = () => {\n  return true;\n  let auth = localStorage.getItem(\"auth\") || \"\";\n\n  if (!auth) {\n    return false;\n  }\n\n  auth = JSON.parse(auth);\n\n  if (!auth.logged_in_till) {\n    return false;\n  }\n\n  const loginExpiryMoment = moment.unix(auth.logged_in_till);\n\n  if (!loginExpiryMoment.isValid()) {\n    return false;\n  }\n\n  const loginExpired = moment().isAfter(loginExpiryMoment);\n\n  return !loginExpired;\n};\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      isAuthenticated() ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: \"/public\",\n            state: { from: props.location },\n          }}\n        />\n      )\n    }\n  />\n);\n\nexport default withRouter(App);\n","import 'core-js/fn/string/ends-with';\nimport 'core-js/fn/string/starts-with';\nimport 'core-js/fn/array/includes';\nimport 'core-js/fn/array/find';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}