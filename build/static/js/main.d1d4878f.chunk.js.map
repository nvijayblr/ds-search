{"version":3,"sources":["context.js","components/LoginForm/LoginForm.js","pages/LoginPage/LoginPage.js","layouts/UnauthorizedLayout/UnauthorizedLayout.js","components/Header/Nav.js","components/UserMenu/UserMenu.js","components/Header/Header.js","services/api.js","components/DSM/DSMViewer/DSMTables/AntDataTable.js","components/DSM/DSMSearchInput/DSMSearchInput.js","components/DSM/DSMSearch/DSMSearch.js","layouts/PrimaryLayout/PrimaryLayout.js","App.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","devices","payload","tableResultsAreLoading","showResultsTable","countryList","credentialsList","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","dispatch","setState","inherits","createClass","key","value","children","props","react_default","a","createElement","Component","Consumer","FormItem","es_form","Item","LoginForm","isLoggingIn","isShowPassword","usernameInput","createRef","passwordInput","componentWillMount","history","isDarkMode","JSON","parse","localStorage","getItem","document","querySelector","className","push","handleSubmit","e","form","preventDefault","validateFields","err","values","login","showHidePassword","current","focus","getFieldDecorator","_this$state","onSubmit","rules","required","message","input","ref","prefix","icon","style","color","placeholder","autoFocus","suffix","title","onClick","es_button","htmlType","disabled","spin","withRouter","create","LoginPage","href","components_LoginForm_LoginForm","UnauthorizedLayout","Switch","Route","path","component","Redirect","to","Nav","selectedMenuItem","isMobileNavExapnded","getSelectedClass","menu","expandCollapseNav","signout","removeItem","_this2","setActiveMenuItem","historyUnlisten","listen","location","match","matchPath","window","pathname","strict","params","section","Fragment","selectedKeys","mode","theme","Link","UserMenu","handleJiraScriptError","error","handleJiraScriptLoad","ATL_JQ_PAGE_PROPS","triggerFunction","showCollectorDialog","querySelectorAll","forEach","item","addEventListener","fieldValues","summary","changeTheme","setItem","stringify","es_switch","checked","onChange","Header","GlobalHeader","Header_Header","components_Header_Nav","components_UserMenu_UserMenu","apiDomain","__env","axios","interceptors","request","use","config","Promise","reject","getDSMSearchRequest","query","queryOption","options","signal","get","page","pageSize","sorting","filtering","getDSMTypeaheadRequest","field","size","getDSMFilterTypeaheadRequest","filter","AntDataTable","componentDidMount","handleResize","index","_ref","_ref2","columns","nextColumns","toConsumableArray","width","hostNameClick","console","log","handleTableChange","pagination","filters","sorter","onTableChange","_this$props","rowData","colDefs","totalItems","tableHeight","isLoading","table","components","dataSource","loading","hideOnSinglePage","defaultPageSize","pageSizeOptions","total","showSizeChanger","scroll","x","y","scrollToFirstRowOnChange","defaultProps","Option","OptGroup","SearchComponent","CancelToken","source","defaultColumnDefs","suppressMenu","searchFilterOptions","IPv4","Hostname","serachOptions","Title","filterOptions","serachOption","searchResults","searchColumns","searchView","searchValue","autoCompleteDataSource","suggessions","sortingKey","sortOrder","reqTime","tableWrapperRef","debouncedOnChange","debounce","getSearchResults","onAutoCompleteChange","then","response","data","catch","columnKey","order","_callee","currentSession","sort","filterStr","res","regenerator_default","wrap","_context","prev","next","handleWindowResize","lastSession","keys","map","option","unshift","join","cancelToken","token","sent","abrupt","onGetSearchSuccess","t0","onSearchEmpty","stop","parseTableData","headers","clickApplyFilters","clickResetFilters","filterClear","onColumnFilterKeyUpFocus","isBlured","target","keyCode","autoCompleteOptions","onColumnFilterAutocomplete","_this$state2","filterKey","filterVal","filterOption","onColumnFilterOptionChange","renderTitleWithFilter","_this$state3","stopPropagation","es_select","dropdownClassName","defaultValue","onSelect","auto_complete","defaultActiveFirstOption","onSearch","onKeyUp","onFocus","createColDefs","dataIndex","render","dn","meta","fields","col","name","d","view","setTableDimensions","offsetTop","getBoundingClientRect","top","innerHeight","searchOptionChange","renderOption","group","label","text","cancel","removeEventListener","_this$state4","searchColumnsUpdate","react","parseInt","toLocaleString","allowClear","DSMViewer_DSMTables_AntDataTable","DSMSearch","DSMSearchInput_DSMSearchInput","Content","App","isRolesLoaded","routes","globalContentClasses","classNames","global-content-search","global-content-devices","global-content-policies","global-content-admin","indexOf","layout","components_Header_Header","webPingTimer","showNotification","context_Provider","App_PrivateRoute","PrimaryLayout","PrivateRoute","rest","objectWithoutProperties","assign","ReactDOM","BrowserRouter","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.d1d4878f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_DEVICES':\n      return {\n        ...state,\n        devices: action.payload\n      };\n    case 'SHOW_TABLE_LOADING_OVERLAY':\n      return {\n        ...state,\n        tableResultsAreLoading: action.payload\n      };\n    case 'SHOW_RESULTS_TABLE':\n      return {\n        ...state,\n        showResultsTable: action.payload\n      };\n    case 'SET_COUNTRIES':\n      return {\n        ...state,\n        countryList: action.payload\n      };\n    case 'SET_CREDENTIALS':\n      return {\n        ...state,\n        credentialsList: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    devices: [],\n    countryList: [],\n    credentialsList: [],\n    tableResultsAreLoading: false,\n    showResultsTable: false,\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  render() {\n    const state = { ...this.state };\n    const { children } = this.props;\n\n    return <Context.Provider value={state}>{children}</Context.Provider>;\n  }\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport const Consumer = Context.Consumer; // eslint-disable-line prefer-destructuring\n","/* eslint-disable react/jsx-wrap-multilines */\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Form, Icon, Input, Button } from \"antd\";\n\nimport \"./LoginForm.scss\";\n\nconst FormItem = Form.Item;\n\nclass LoginForm extends React.Component {\n  state = {\n    isLoggingIn: false,\n    isShowPassword: false,\n  };\n\n  usernameInput = React.createRef();\n\n  passwordInput = React.createRef();\n\n  componentWillMount = () => {\n    const { history } = this.props;\n    const isDarkMode = JSON.parse(localStorage.getItem(\"dsm-dark-mode\"));\n    if (isDarkMode) {\n      document.querySelector(\"body\").className = `${\n        isDarkMode ? \"dark-theme\" : \"light-theme\"\n      }`;\n    }\n    history.push(\"/dds-search\");\n  };\n\n  handleSubmit = (e) => {\n    const { form } = this.props;\n\n    e.preventDefault();\n    form.validateFields((err, values) => {\n      if (!err) {\n        this.login(values);\n        this.setState({\n          isLoggingIn: true,\n        });\n      }\n    });\n  };\n\n  showHidePassword = () => {\n    const { isShowPassword } = this.state;\n    this.setState({ isShowPassword: !isShowPassword });\n    this.passwordInput.current.focus();\n  };\n\n  render() {\n    const { form } = this.props;\n    const { getFieldDecorator } = form;\n    const { isLoggingIn, isShowPassword } = this.state;\n\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <FormItem>\n          {getFieldDecorator(\"username\", {\n            rules: [{ required: true, message: \"Please enter your username!\" }],\n          })(\n            <Input\n              ref={this.usernameInput}\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              placeholder=\"Username\"\n              autoFocus\n            />\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator(\"password\", {\n            rules: [{ required: true, message: \"Please enter your password!\" }],\n          })(\n            <Input\n              ref={this.passwordInput}\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              suffix={\n                <Icon\n                  type={isShowPassword ? \"eye\" : \"eye-invisible\"}\n                  title={isShowPassword ? \"Hide Password\" : \"Show Password\"}\n                  className=\"sh-password\"\n                  onClick={this.showHidePassword}\n                />\n              }\n              type={isShowPassword ? \"text\" : \"password\"}\n              placeholder=\"Password\"\n            />\n          )}\n        </FormItem>\n        <FormItem>\n          {isLoggingIn && (\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n              disabled\n            >\n              <Icon type=\"sync\" className=\"login-spinner-icon\" spin />\n            </Button>\n          )}\n          {!isLoggingIn && (\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n            >\n              Login\n            </Button>\n          )}\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  form: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n};\n\nexport default withRouter(Form.create()(LoginForm));\n","import React from 'react';\nimport LoginForm from '../../components/LoginForm/LoginForm';\n\nimport './LoginPage.scss';\n\nfunction LoginPage() {\n  return (\n    <div className=\"login-page\">\n      <div className=\"brand\" href=\"/\">\n        <div className=\"logo\" />\n        <span className=\"name\">DSM</span>\n      </div>\n      <LoginForm />\n    </div>\n  );\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport './UnauthorizedLayout.scss';\n\nimport LoginPage from '../../pages/LoginPage/LoginPage';\n\nconst UnauthorizedLayout = () => (\n  <div className=\"unauthorized-layout\">\n    {/*\n    Imagine this could be a general layout for all unauthorized pages like\n    the login page, forgot password, email-verified, etc...\n    */}\n    <Switch>\n      <Route path=\"/public/login\" component={LoginPage} />\n      <Redirect to=\"/public/login\" />\n    </Switch>\n  </div>\n);\n\nexport default UnauthorizedLayout;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint jsx-a11y/anchor-is-valid: [0] */\nimport React, { Component } from \"react\";\nimport { withRouter, matchPath, Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Menu } from \"antd\";\n\nimport \"./Nav.scss\";\n\nclass Nav extends Component {\n  state = { selectedMenuItem: \"\", isMobileNavExapnded: false };\n\n  componentDidMount() {\n    const { history } = this.props;\n\n    this.setActiveMenuItem();\n\n    this.historyUnlisten = history.listen((location, action) => {\n      this.setActiveMenuItem();\n    });\n  }\n\n  componentWillUnmount() {\n    this.historyUnlisten();\n  }\n\n  setActiveMenuItem() {\n    const match = matchPath(window.location.pathname, {\n      path: \"/:section\",\n      strict: false,\n    });\n\n    if (match) {\n      this.setState({ selectedMenuItem: match.params.section });\n    }\n  }\n\n  getSelectedClass = (menu) => {\n    const { selectedMenuItem } = this.state;\n    return selectedMenuItem === menu ? \"selected\" : \"\";\n  };\n\n  expandCollapseNav = (e) => {\n    e.preventDefault();\n    const { isMobileNavExapnded } = this.state;\n    this.setState({ isMobileNavExapnded: !isMobileNavExapnded });\n  };\n\n  signout = (e) => {\n    const { history } = this.props;\n\n    e.preventDefault();\n    localStorage.removeItem(\"auth\");\n    localStorage.removeItem(\"roles\");\n    history.push(\"/public/login\");\n  };\n\n  render() {\n    const { selectedMenuItem } = this.state;\n    // let roles = [];\n\n    // if (localStorage.getItem(\"roles\")) {\n    //   roles = JSON.parse(localStorage.getItem(\"roles\"));\n    // }\n\n    return (\n      <>\n        {/* <div className=\"mobile-nav\">\n          <div\n            className={`nav-toggle ${isMobileNavExapnded ? 'expanded' : ''}`}\n            onClick={e => {\n              this.expandCollapseNav(e);\n            }}\n          >\n            <span className=\"nav-toggle-bar\" />\n          </div>\n          <nav\n            className={`nav ${isMobileNavExapnded ? 'expanded' : ''}`}\n            onClick={e => {\n              this.expandCollapseNav(e);\n            }}\n          >\n            <ul>\n              {roles.includes('search') && (\n                <li className={this.getSelectedClass('search')}>\n                  <Link to=\"/search\">Search</Link>\n                </li>\n              )}\n              <li className=\"seperator\">\n                <a href=\"#\" className=\"reportBugLink\">\n                  Report Bug\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"reportNewFeatureLink\">\n                  Report New Feature\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" onClick={e => this.signout(e)}>\n                  Logout\n                </a>\n              </li>\n            </ul>\n          </nav>\n        </div> */}\n\n        <Menu selectedKeys={[selectedMenuItem]} mode=\"horizontal\" theme=\"dark\">\n          {/* {roles.includes('search') && (\n            <Menu.Item key=\"search\">\n              <Link to=\"/search\">Search</Link>\n            </Menu.Item>\n          )} */}\n          <Menu.Item key=\"search\">\n            <Link to=\"/search\">Search</Link>\n          </Menu.Item>\n          {/* <Menu.Item key=\"dsm-editor\">\n            <Link to=\"/dsm-editor\">DSM Editor</Link>\n          </Menu.Item>\n          <Menu.Item key=\"dsm-viewer\">\n            <Link to=\"/dsm-viewer\">DSM Viewer</Link>\n          </Menu.Item> */}\n        </Menu>\n      </>\n    );\n  }\n}\n\nNav.propTypes = {\n  history: PropTypes.object.isRequired,\n};\n\nexport default withRouter(Nav);\n","/* eslint jsx-a11y/anchor-is-valid: [0] */\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { message, Switch } from \"antd\";\n// import Script from 'react-load-script';\n\nimport \"./UserMenu.scss\";\n\nclass UserMenu extends Component {\n  state = {\n    isDarkMode: false,\n  };\n\n  componentWillMount = () => {\n    const isDarkMode = JSON.parse(localStorage.getItem(\"dsm-dark-mode\"));\n    if (isDarkMode) {\n      document.querySelector(\"body\").className = `${\n        isDarkMode ? \"dark-theme\" : \"light-theme\"\n      }`;\n      this.setState({ isDarkMode });\n    }\n  };\n\n  signout = (e) => {\n    const { history } = this.props;\n\n    e.preventDefault();\n    localStorage.removeItem(\"auth\");\n    localStorage.removeItem(\"roles\");\n    history.push(\"/public/login\");\n  };\n\n  handleJiraScriptError = () => {\n    message.error(\n      \"Unfortunately there was an error related to the JIRA issue collector - you will not be able to report any issues.\"\n    );\n  };\n\n  handleJiraScriptLoad = () => {\n    window.ATL_JQ_PAGE_PROPS = {\n      triggerFunction: (showCollectorDialog) => {\n        document.querySelectorAll(\".reportBugLink\").forEach((item) => {\n          item.addEventListener(\"click\", (e) => {\n            window.ATL_JQ_PAGE_PROPS.fieldValues.summary = \"[Bug]: \";\n            e.preventDefault();\n            showCollectorDialog();\n          });\n        });\n        document.querySelectorAll(\".reportNewFeatureLink\").forEach((item) => {\n          item.addEventListener(\"click\", (e) => {\n            window.ATL_JQ_PAGE_PROPS.fieldValues.summary = \"[NewFeature]: \";\n            e.preventDefault();\n            showCollectorDialog();\n          });\n        });\n      },\n      fieldValues: {\n        summary: \"[Bug]: \",\n      },\n    };\n  };\n\n  changeTheme = (e) => {\n    const { isDarkMode } = this.state;\n    this.setState({ isDarkMode: !isDarkMode }, () => {\n      // eslint-disable-next-line no-shadow\n      const { isDarkMode } = this.state;\n      document.querySelector(\"body\").className = `${\n        isDarkMode ? \"dark-theme\" : \"light-theme\"\n      }`;\n      localStorage.setItem(\"dsm-dark-mode\", JSON.stringify(isDarkMode));\n    });\n  };\n\n  render() {\n    // const jiraScriptUrl =\n    //   \"https://jira.lgi.io/s/d2f11eb2426a5845d2ad6d6592ab1479-T/k0n5ws/76002/23aeed5035eb07e911417ba4d45ad09e/2.0.24/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector.js?locale=en-UK&collectorId=23a3f869\";\n    const { isDarkMode } = this.state;\n\n    return (\n      <>\n        <div className=\"user-menu\">\n          <div className=\"theme-switch\">\n            <label>Dark</label>\n            <Switch checked={isDarkMode} onChange={this.changeTheme} />\n          </div>\n          {/* <div className=\"dropdown-menu\">\n            <div className=\"submenu-title\">\n              <Icon type=\"edit\" />\n              <span className=\"text\">Report Issue</span>\n              <div className=\"ant-menu-submenu-popup\">\n                <ul className=\"ant-menu ant-menu-sub\">\n                  <li className=\"ant-menu-item\">\n                    <a className=\"reportBugLink sub-menu-link\" href=\"#\">\n                      <span className=\"text\">Bug</span>\n                    </a>\n                  </li>\n                  <li className=\"ant-menu-item\">\n                    <a className=\"reportNewFeatureLink sub-menu-link\" href=\"#\">\n                      <span className=\"text\">New Feature</span>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div> */}\n          {/* <a className=\"user-menu-item\" href=\"#\" onClick={e => this.signout(e)}>\n            <Icon type=\"lock\" />\n            <span className=\"text\">Sign Out</span>\n          </a> */}\n        </div>\n        {/* <Script\n          url={jiraScriptUrl}\n          onError={this.handleJiraScriptError}\n          onLoad={this.handleJiraScriptLoad}\n        /> */}\n      </>\n    );\n  }\n}\n\nUserMenu.propTypes = {\n  history: PropTypes.object.isRequired,\n};\n\nexport default withRouter(UserMenu);\n","import React from \"react\";\nimport { Layout } from \"antd\";\n\nimport Nav from \"./Nav\";\nimport UserMenu from \"../UserMenu/UserMenu\";\n\nimport \"./Header.scss\";\n\nconst { Header } = Layout;\n\nfunction GlobalHeader() {\n  return (\n    <Header className=\"global-header\">\n      <a className=\"brand\" href=\"/\">\n        {/* <div className=\"logo\" /> */}\n        {/* <span className=\"name\">DSM</span> */}\n      </a>\n      <Nav />\n      <UserMenu />\n    </Header>\n  );\n}\n\nexport default GlobalHeader;\n","/* eslint no-underscore-dangle: [1, { \"allow\": [\"__env\"] }] */\nimport axios from \"axios\";\n\nconst { apiDomain } = window.__env;\n\n/* eslint-disable no-param-reassign */\naxios.interceptors.request.use(\n  (config) => {\n    return config;\n  },\n\n  (error) => Promise.reject(error)\n);\n/* eslint-enable no-param-reassign */\n\n// DDS Search realted API\nexport const getDSMSearchRequest = (query, queryOption, options, signal) =>\n  axios.get(\n    `${apiDomain}search/?${queryOption}=${query}&page=${options.page}&pagesize=${options.pageSize}${options.sorting}${options.filtering}`,\n    signal\n  );\n\nexport const getDSMTypeaheadRequest = (query, field, size) =>\n  axios.get(`${apiDomain}typeahead/${field}/?typeahead=${query}&limit=${size}`);\n\nexport const getDSMFilterTypeaheadRequest = (\n  queryOption,\n  query,\n  filter,\n  value,\n  field\n) =>\n  axios.get(\n    `${apiDomain}typeahead/${field}/?${queryOption}=${query}${filter}&limit=15`\n  );\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable no-param-reassign */\nimport React, { Component } from 'react';\nimport { Table } from 'antd';\n// import { Resizable } from 'react-resizable';\nimport PropTypes from 'prop-types';\n\nimport './AntDataTable.scss';\n\nclass AntDataTable extends Component {\n  // ResizeableTitle = (props) => {\n  //   const { onResize, width, ...restProps } = props;\n  //   if (!width) {\n  //     return <th {...restProps} />;\n  //   }\n\n  //   return (\n  //     <Resizable\n  //       width={width}\n  //       height={0}\n  //       handle={\n  //         <span\n  //           className=\"react-resizable-handle\"\n  //           onClick={(e) => {\n  //             e.stopPropagation();\n  //           }}\n  //         />\n  //       }\n  //       onResize={onResize}\n  //       draggableOpts={{ enableUserSelectHack: false }}\n  //     >\n  //       <th {...restProps} />\n  //     </Resizable>\n  //   );\n  // };\n\n  // components = {\n  //   header: {\n  //     cell: this.ResizeableTitle,\n  //   },\n  // };\n\n  componentDidMount = () => {};\n\n  handleResize = index => (e, { size }) => {\n    this.setState(({ columns }) => {\n      const nextColumns = [...columns];\n      nextColumns[index] = {\n        ...nextColumns[index],\n        width: size.width\n      };\n      return { columns: nextColumns };\n    });\n  };\n\n  hostNameClick = () => {\n    console.log('hostNameClick...');\n  };\n\n  handleTableChange = (pagination, filters, sorter) => {\n    const { onTableChange } = this.props;\n    onTableChange(pagination, filters, sorter);\n  };\n\n  render() {\n    const { rowData, colDefs, totalItems, tableHeight, page, isLoading } = this.props;\n\n    return (\n      <div className=\"data-table-wrapper\">\n        <Table\n          className=\"data-table\"\n          components={this.components}\n          dataSource={rowData}\n          columns={colDefs}\n          loading={isLoading}\n          onChange={this.handleTableChange}\n          pagination={{\n            hideOnSinglePage: true,\n            defaultPageSize: 20,\n            pageSizeOptions: ['10', '20', '50', '100'],\n            total: totalItems,\n            current: page,\n            showSizeChanger: true\n          }}\n          scroll={{\n            x: false, // If specify the width, the header and body will be scrollable\n            y: tableHeight,\n            scrollToFirstRowOnChange: true\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nAntDataTable.defaultProps = {\n  isLoading: true,\n  totalItems: 0,\n  page: 1,\n  tableHeight: 500\n};\n\nAntDataTable.propTypes = {\n  colDefs: PropTypes.array.isRequired,\n  rowData: PropTypes.array.isRequired,\n  totalItems: PropTypes.number,\n  page: PropTypes.number,\n  tableHeight: PropTypes.number,\n  isLoading: PropTypes.bool,\n  onTableChange: PropTypes.func.isRequired\n};\n\nexport default AntDataTable;\n","/* eslint-disable prefer-destructuring */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable no-param-reassign */\n/* eslint no-underscore-dangle: [1, { \"allow\": [\"__env\"] }] */\nimport React, { Component, Fragment } from \"react\";\nimport { Input, Icon, Select, AutoComplete, Button } from \"antd\";\nimport { debounce } from \"lodash\";\nimport axios from \"axios\";\n\nimport {\n  getDSMSearchRequest,\n  getDSMTypeaheadRequest,\n  getDSMFilterTypeaheadRequest,\n} from \"../../../services/api\";\nimport AntDataTable from \"../DSMViewer/DSMTables/AntDataTable\";\n\nimport \"./DSMSearchInput.scss\";\n\nconst { Option } = Select;\nconst { OptGroup } = AutoComplete;\n\nclass SearchComponent extends Component {\n  signal = axios.CancelToken.source();\n\n  defaultColumnDefs = {\n    suppressMenu: true,\n  };\n\n  searchFilterOptions = {\n    IPv4: `&contains-value_type=ipv4_address`,\n    Hostname: `&contains-value_type=hostname`,\n  };\n\n  state = {\n    tableHeight: 500,\n    serachOptions: [\n      { Title: \"Search\", value: \"search\" },\n      { Title: \"IPv4\", value: \"IPv4\" },\n      { Title: \"Hostname\", value: \"Hostname\" },\n      { Title: \"Regex\", value: \"regex\" },\n      { Title: \"Contains\", value: \"contains\" },\n      { Title: \"Starts with\", value: \"startswith\" },\n      { Title: \"Match\", value: \"match\" },\n    ],\n    filterOptions: [\n      { Title: \"Contains\", value: \"contains\" },\n      { Title: \"Starts with\", value: \"startswith\" },\n      { Title: \"Match\", value: \"match\" },\n      { Title: \"Not Contains\", value: \"!contains\" },\n      { Title: \"Not Starts with\", value: \"!startswith\" },\n      { Title: \"Not Match\", value: \"!match\" },\n      { Title: \"Any Contains\", value: \"any_contains\" },\n      { Title: \"Any Starts with\", value: \"any_startswith\" },\n      { Title: \"Any Match\", value: \"any_match\" },\n    ],\n    serachOption: \"search\",\n    searchResults: [],\n    searchColumns: [],\n    searchView: \"table\",\n    showResultsTable: false,\n    isLoading: false,\n    searchValue: \"\",\n    autoCompleteDataSource: {\n      suggessions: [],\n    },\n    totalItems: 0,\n    page: 1,\n    pageSize: 20,\n    sortingKey: \"\",\n    sortOrder: \"\",\n    filters: {},\n    reqTime: 0,\n  };\n\n  tableWrapperRef = React.createRef();\n\n  debouncedOnChange = debounce(() => {\n    this.setState({\n      page: 1,\n      sortingKey: \"\",\n      sortOrder: \"\",\n      // filters: {}\n    });\n\n    this.getSearchResults();\n  }, 100);\n\n  componentWillMount() {\n    window.addEventListener(\"resize\", this.handleWindowResize);\n    this.setState({\n      // searchColumns: this.createColDefs(),\n      autoCompleteDataSource: {\n        suggessions: [],\n      },\n    });\n  }\n\n  componentWillUnmount() {\n    this.signal.cancel(\"Canceled\");\n    window.removeEventListener(\"resize\", this.handleWindowResize);\n  }\n\n  onAutoCompleteChange = (e) => {\n    // this.setState({\n    //   autoCompleteDataSource: {\n    //     suggessions: e.length ? ['loading'] : []\n    //   }\n    // });\n    this.setState({ searchValue: e || \"\" }, () => {\n      this.debouncedOnChange();\n    });\n\n    if (!e) {\n      this.setState({\n        autoCompleteDataSource: {\n          suggessions: [],\n        },\n      });\n      return;\n    }\n    getDSMTypeaheadRequest(e || \"\", \"value\", 1)\n      .then((response) => {\n        this.setState({\n          autoCompleteDataSource: {\n            suggessions: response.data ? response.data : [],\n          },\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          autoCompleteDataSource: {\n            suggessions: [],\n          },\n        });\n      });\n  };\n\n  handleTableChange = (pagination, filters, sorter) => {\n    this.setState(\n      {\n        page: pagination.current,\n        pageSize: pagination.pageSize,\n        sortingKey: sorter.columnKey,\n        sortOrder: sorter.order,\n        filters,\n      },\n      () => {\n        this.getSearchResults();\n      }\n    );\n  };\n\n  getSearchResults = async () => {\n    const {\n      searchValue,\n      page,\n      pageSize,\n      sortingKey,\n      sortOrder,\n      filters,\n    } = this.state;\n    let { serachOption } = this.state;\n    this.handleWindowResize();\n\n    const currentSession = {};\n    this.lastSession = currentSession;\n    // if (!searchValue) {\n    //   this.onSearchEmpty();\n    //   return;\n    // }\n    this.setState({\n      showResultsTable: true,\n      isLoading: true,\n    });\n    try {\n      // Parse sorting string.\n      let sort = \"\";\n      if (sortOrder === \"ascend\") {\n        sort = `&sortby=${sortingKey}`;\n      }\n      if (sortOrder === \"descend\") {\n        sort = `&sortby=-${sortingKey}`;\n      }\n\n      // Parse Filter string\n      let filterStr = [];\n      if (filters) {\n        filterStr = Object.keys(filters).map((key) => {\n          const value = filters[key].value ? filters[key].value : \"\";\n          const option = filters[key].option ? filters[key].option : \"contains\";\n          return `&${option}-${key}=${value}`;\n        });\n      }\n\n      if (serachOption === \"IPv4\" || serachOption === \"Hostname\") {\n        filterStr.unshift(this.searchFilterOptions[serachOption]);\n        serachOption = \"search\";\n      }\n\n      const filter = filterStr.join(\"\");\n      const res = await getDSMSearchRequest(\n        searchValue,\n        serachOption,\n        {\n          page,\n          pageSize,\n          sorting: sortingKey ? sort : \"\",\n          filtering: filter,\n        },\n        {\n          cancelToken: this.signal.token,\n        }\n      );\n\n      if (this.lastSession !== currentSession) return;\n      this.onGetSearchSuccess(res);\n    } catch (e) {\n      this.onSearchEmpty();\n    }\n  };\n\n  onGetSearchSuccess = (res) => {\n    this.parseTableData(res.data ? res.data : []);\n    this.setState({\n      isLoading: false,\n      totalItems: res.headers[\"total-items\"] ? res.headers[\"total-items\"] : 100,\n      reqTime: res.headers[\"query-duration\"]\n        ? res.headers[\"query-duration\"]\n        : \"50ms\",\n    });\n  };\n\n  clickApplyFilters = () => {\n    this.getSearchResults();\n  };\n\n  clickResetFilters = () => {\n    const { filters } = this.state;\n    const filterClear = {};\n    Object.keys(filters).map((key) => {\n      filterClear[key] = {\n        ...filters[key],\n        value: \"\",\n      };\n      return key;\n    });\n    this.setState({ filters: filterClear }, () => {\n      this.getSearchResults();\n    });\n  };\n\n  onColumnFilterKeyUpFocus = (e, key, isBlured) => {\n    let value = \"\";\n    if (e && e.target) {\n      value = e.target.value;\n    } else {\n      value = e;\n    }\n    const { filters } = this.state;\n    if ((e && e.keyCode === 13) || isBlured) {\n      filters[key].value = value;\n      this.setState({ filters }, () => {\n        this.getSearchResults();\n      });\n    } else {\n      filters[key].value = value;\n      filters[key].autoCompleteOptions = [];\n      this.setState({ filters }, () => {\n        this.onColumnFilterAutocomplete(e, key);\n      });\n    }\n  };\n\n  onColumnFilterAutocomplete = (e, key) => {\n    const { filters, serachOption, searchValue } = this.state;\n    const value = e;\n    // Parse Filter string\n    let filterStr = [];\n    if (filters) {\n      filterStr = Object.keys(filters).map((filterKey) => {\n        const filterVal = filters[filterKey].value\n          ? filters[filterKey].value\n          : \"\";\n        const filterOption = filters[filterKey].option\n          ? filters[filterKey].option\n          : \"contains\";\n        return `&${filterOption}-${filterKey}=${filterVal}`;\n      });\n    }\n    const filter = filterStr.join(\"\");\n\n    getDSMFilterTypeaheadRequest(serachOption, searchValue, filter, value, key)\n      .then((response) => {\n        filters[key].autoCompleteOptions = response.data ? response.data : [];\n        this.setState({ filters });\n      })\n      .catch((error) => {\n        filters[key].autoCompleteOptions = [];\n        this.setState({ filters });\n      });\n  };\n\n  onColumnFilterOptionChange = (value, key) => {\n    const { filters } = this.state;\n    if (filters[key].option !== value) {\n      filters[key].option = value;\n      this.setState({ filters });\n      if (filters[key].value) {\n        this.getSearchResults();\n      }\n    }\n  };\n\n  renderTitleWithFilter = (key, title) => {\n    const { filterOptions, filters } = this.state;\n    if (!filters[key]) {\n      return \"\";\n    }\n    return (\n      <div className=\"custom-hd-wrp\">\n        <div className=\"hd-label\">{title}</div>\n        <div\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <Select\n            placeholder=\"Select Option\"\n            dropdownClassName=\"table-filter-dropdown\"\n            defaultValue=\"contains\"\n            onSelect={(value) => {\n              this.onColumnFilterOptionChange(value, key);\n            }}\n          >\n            {filterOptions.map((option) => (\n              <Option value={option.value} key={option.value}>\n                {option.Title}\n              </Option>\n            ))}\n          </Select>\n          <AutoComplete\n            dataSource={filters[key].autoCompleteOptions}\n            style={{ width: 200 }}\n            defaultActiveFirstOption={false}\n            dropdownClassName=\"column-filter-dropdown\"\n            value={filters[key].value}\n            onSelect={(e) => {\n              this.onColumnFilterKeyUpFocus(e, key, true);\n            }}\n            onSearch={(e) => {\n              this.onColumnFilterKeyUpFocus(e, key);\n            }}\n            // onFocus={e => {\n            //   this.onColumnFilterKeyUpFocus(e, key);\n            // }}\n            // onSearch={e => {\n            //   this.onColumnFilterKeyUpFocus(e, key);\n            // }}\n            placeholder={title}\n          >\n            <Input\n              onKeyUp={(e) => {\n                this.onColumnFilterKeyUpFocus(e, key);\n              }}\n              onFocus={(e) => {\n                this.onColumnFilterKeyUpFocus(e, key);\n              }}\n            />\n          </AutoComplete>\n        </div>\n      </div>\n    );\n  };\n\n  createColDefs = () => {\n    const colDefs = [\n      {\n        title: this.renderTitleWithFilter(\"name\", \"Hostname\"),\n        dataIndex: \"name\",\n        key: \"name\",\n        className: \"name\",\n        sorter: true,\n        width: 130,\n      },\n      {\n        title: this.renderTitleWithFilter(\"ip\", \"IP\"),\n        dataIndex: \"ip\",\n        key: \"ip\",\n        className: \"ip\",\n        sorter: true,\n        width: 130,\n      },\n      {\n        title: this.renderTitleWithFilter(\"type\", \"Type\"),\n        dataIndex: \"type\",\n        key: \"type\",\n        className: \"type\",\n        sorter: true,\n        width: 100,\n      },\n      {\n        title: this.renderTitleWithFilter(\"vendor\", \"Vendor\"),\n        dataIndex: \"vendor\",\n        key: \"vendor\",\n        className: \"vendor\",\n        sorter: true,\n        width: 100,\n      },\n      {\n        title: this.renderTitleWithFilter(\"value\", \"Value\"),\n        dataIndex: \"value\",\n        key: \"value\",\n        className: \"value\",\n        sorter: true,\n        render: (value) => <div className=\"wrap-single-line\">{value}</div>,\n      },\n      {\n        title: this.renderTitleWithFilter(\"value_type\", \"Value Type\"),\n        dataIndex: \"value_type\",\n        key: \"value_type\",\n        className: \"value_type\",\n        sorter: true,\n        width: 140,\n      },\n      {\n        title: this.renderTitleWithFilter(\"dn\", \"DN\"),\n        dataIndex: \"dn\",\n        key: \"dn\",\n        className: \"dn\",\n        width: 240,\n        render: (dn) => {\n          if (dn && dn.length) {\n            return dn.join(\", \");\n          }\n          return dn;\n        },\n      },\n      {\n        title: this.renderTitleWithFilter(\"country\", \"Country\"),\n        dataIndex: \"country\",\n        key: \"country\",\n        className: \"country\",\n        sorter: true,\n        width: 120,\n      },\n    ];\n    return colDefs;\n  };\n\n  parseTableData = (data) => {\n    const { meta } = data;\n    const { filters } = this.state;\n    data.meta.fields.forEach((col, index) => {\n      if (!filters[col.name]) {\n        filters[col.name] = {\n          option: \"contains\",\n          value: \"\",\n          autoCompleteOptions: [],\n        };\n      }\n    });\n\n    this.setState({ filters }, () => {\n      const rowData = data.data.map((d, index) => {\n        return {\n          ...d,\n          key: index,\n        };\n      });\n\n      this.setState({\n        searchResults: rowData,\n        // searchColumns: this.createColDefs(),\n        searchView: meta.view,\n        showResultsTable: true,\n      });\n    });\n  };\n\n  onSearchEmpty = () => {\n    // message.error(\"Unfortunately there was an error getting the results\");\n    this.setState({\n      searchResults: [],\n      searchView: \"table\",\n      showResultsTable: true,\n      isLoading: false,\n      page: 0,\n      totalItems: 0,\n    });\n  };\n\n  setTableDimensions = () => {\n    const marginBottom = 70;\n    const offsetTop = this.tableWrapperRef.current.getBoundingClientRect().top;\n    const tableHeight = window.innerHeight - offsetTop - marginBottom - 115;\n    this.setState({ tableHeight });\n  };\n\n  handleWindowResize = () => {\n    this.setTableDimensions();\n  };\n\n  searchOptionChange = (serachOption) => {\n    this.setState({ serachOption }, () => {\n      this.debouncedOnChange();\n    });\n  };\n\n  renderOption = () => {\n    const { autoCompleteDataSource } = this.state;\n    const options = Object.keys(autoCompleteDataSource).map((group) => {\n      return (\n        <OptGroup\n          key={group}\n          label={group === \"suggessions\" ? \"Suggestions\" : \"Recent Searches\"}\n        >\n          {autoCompleteDataSource[group].map((item) => (\n            <Option key={item} text={item}>\n              {item === \"loading\" ? (\n                <Icon type=\"loading\" />\n              ) : (\n                <div className=\"global-search-item\">\n                  <span className=\"global-search-item-desc\">{item}</span>\n                  {group === \"resentSearch\" ? (\n                    <span className=\"search-history-remove\">Remove</span>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              )}\n            </Option>\n          ))}\n        </OptGroup>\n      );\n    });\n\n    return options;\n  };\n\n  render() {\n    const {\n      isLoading,\n      reqTime,\n      serachOptions,\n      serachOption,\n      searchResults,\n      autoCompleteDataSource,\n      tableHeight,\n      searchView,\n      showResultsTable,\n      totalItems,\n      page,\n    } = this.state;\n\n    const searchColumnsUpdate = this.createColDefs();\n    return (\n      <Fragment>\n        <div className=\"search-input-wrapper initial-search-done clearfix\">\n          <div className=\"top-option-box\">\n            <Select\n              placeholder=\"Select Option\"\n              className=\"search-select-options\"\n              onSelect={this.searchOptionChange}\n              value={serachOption}\n            >\n              {serachOptions.map((option) => (\n                <Option value={option.value} key={option.value}>\n                  {option.Title}\n                </Option>\n              ))}\n            </Select>\n            {totalItems !== 0 && (\n              <div className={`search-info ${isLoading ? \"loading\" : \"\"}`}>\n                {isLoading && (\n                  <span className=\"loading\">\n                    <Icon type=\"loading\" />\n                  </span>\n                )}\n                <span>About </span>\n                {parseInt(totalItems, 0).toLocaleString()}\n                <span> results (</span>\n                {reqTime}\n                <span>)</span>\n              </div>\n            )}\n          </div>\n          <div className=\"top-search-box\">\n            <div className=\"global-search-wrapper\">\n              <AutoComplete\n                className=\"search-input\"\n                size=\"large\"\n                dataSource={autoCompleteDataSource.suggessions}\n                style={{ width: \"100%\" }}\n                dropdownClassName=\"column-filter-dropdown\"\n                defaultActiveFirstOption={false}\n                allowClear\n                // onFocus={e => {\n                //   this.onAutoCompleteChange(e);\n                // }}\n                onSelect={(e) => this.onAutoCompleteChange(e)}\n                onSearch={(e) => this.onAutoCompleteChange(e)}\n                autoFocus\n              >\n                <Input\n                  className=\"search-input\"\n                  placeholder=\"Search...\"\n                  prefix={\n                    <Icon type=\"search\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  size=\"large\"\n                />\n              </AutoComplete>\n            </div>\n          </div>\n        </div>\n        <div className=\"search-filter-wrapper\">\n          <Button className=\"ant-btn-primary\" onClick={this.clickResetFilters}>\n            <Icon type=\"filter\" />\n            Reset\n          </Button>\n          <Button className=\"ant-btn-primary\" onClick={this.clickApplyFilters}>\n            Apply\n          </Button>\n        </div>\n        <div className=\"search-table-wrapper\">\n          <div ref={this.tableWrapperRef} className=\"search-results\">\n            {searchView === \"table\" && showResultsTable && (\n              <AntDataTable\n                colDefs={searchColumnsUpdate}\n                rowData={searchResults}\n                tableHeight={tableHeight}\n                totalItems={totalItems}\n                page={page}\n                isLoading={isLoading}\n                onTableChange={this.handleTableChange}\n              />\n            )}\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default SearchComponent;\n","import React, { Fragment } from 'react';\nimport DSMSearchInput from '../DSMSearchInput/DSMSearchInput';\n\nfunction DSMSearch() {\n  // const hiddenColumns = ['status'];\n  return (\n    <Fragment>\n      <DSMSearchInput />\n    </Fragment>\n  );\n}\n\nexport default DSMSearch;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, withRouter, Redirect, Switch } from \"react-router-dom\";\nimport { Layout } from \"antd\";\nimport classNames from \"classnames\";\n\nimport GlobalHeader from \"../../components/Header/Header\";\n// import DeviceSearchPage from '../../pages/DeviceSearchPage/DeviceSearchPage';\n// import DSMEditor from \"../../components/DSM/DSMEditor/DSMEditor\";\nimport DSMSearch from \"../../components/DSM/DSMSearch/DSMSearch\";\n// import DSMViewer from \"../../components/DSM/DSMViewer/DSMViewer\";\n\nimport \"./PrimaryLayout.scss\";\n\nconst { Content } = Layout;\n\nclass App extends Component {\n  state = {\n    isRolesLoaded: true,\n  };\n\n  componentWillMount() {\n    // if (!localStorage.getItem('roles-initiated')) {\n    //   localStorage.removeItem('roles');\n    //   this.setState({ isRolesLoaded: false });\n    //   this.getRoles();\n    // }\n  }\n\n  routes = () => {\n    // let roles = [];\n\n    // if (localStorage.getItem('roles')) {\n    //   roles = JSON.parse(localStorage.getItem('roles'));\n    // }\n\n    // localStorage.removeItem('roles-initiated');\n\n    // if (!roles.length) {\n    //   message.warning('You have no user roles assigned.');\n    // }\n\n    return (\n      <Switch>\n        {/* {<Route path=\"/search\" component={DeviceSearchPage} />} */}\n        {<Route path=\"/search\" component={DSMSearch} />}\n        {/* {<Route path=\"/dsm-editor\" component={DSMEditor} />}\n        {<Route path=\"/dsm-viewer\" component={DSMViewer} />} */}\n        {<Redirect to=\"/search\" />}\n      </Switch>\n    );\n  };\n\n  render() {\n    const { location } = this.props;\n    const { isRolesLoaded } = this.state;\n    const globalContentClasses = classNames(\"global-content\", {\n      \"global-content-search\": location.pathname === \"/search\",\n      \"global-content-devices\": location.pathname === \"/devices\",\n      \"global-content-policies\": location.pathname === \"/policies\",\n      \"global-content-admin\": location.pathname.indexOf(\"/admin/\") === 0,\n    });\n\n    return (\n      <Layout className=\"global-layout\">\n        <GlobalHeader />\n        <Content className={globalContentClasses}>\n          <Switch>{isRolesLoaded ? this.routes() : \"\"}</Switch>\n        </Content>\n      </Layout>\n    );\n  }\n}\n\nApp.propTypes = {\n  location: PropTypes.object.isRequired,\n};\n\nexport default withRouter(App);\n","import React from \"react\";\nimport { Route, withRouter, Switch, Redirect } from \"react-router-dom\";\n// import moment from \"moment\";\n\nimport { Provider } from \"./context\";\nimport UnauthorizedLayout from \"./layouts/UnauthorizedLayout/UnauthorizedLayout\";\nimport PrimaryLayout from \"./layouts/PrimaryLayout/PrimaryLayout\";\nimport \"./App.scss\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      // connectionTimeout: 20000\n    };\n    this.webPingTimer = null;\n    this.showNotification = true;\n  }\n\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  render() {\n    return (\n      <Provider>\n        <Switch>\n          <Route path=\"/public\" component={UnauthorizedLayout} />\n          <PrivateRoute path=\"/\" component={PrimaryLayout} />\n          <Redirect to=\"/search\" />\n        </Switch>\n      </Provider>\n    );\n  }\n}\n\nconst isAuthenticated = () => {\n  return true;\n  // let auth = localStorage.getItem(\"auth\") || \"\";\n\n  // if (!auth) {\n  //   return false;\n  // }\n\n  // auth = JSON.parse(auth);\n\n  // if (!auth.logged_in_till) {\n  //   return false;\n  // }\n\n  // const loginExpiryMoment = moment.unix(auth.logged_in_till);\n\n  // if (!loginExpiryMoment.isValid()) {\n  //   return false;\n  // }\n\n  // const loginExpired = moment().isAfter(loginExpiryMoment);\n\n  // return !loginExpired;\n};\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      isAuthenticated() ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: \"/public\",\n            state: { from: props.location },\n          }}\n        />\n      )\n    }\n  />\n);\n\nexport default withRouter(App);\n","import 'core-js/fn/string/ends-with';\nimport 'core-js/fn/string/starts-with';\nimport 'core-js/fn/array/includes';\nimport 'core-js/fn/array/find';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}